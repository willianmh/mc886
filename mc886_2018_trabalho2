{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "trabalho2.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/willianmh/mc886/blob/master/mc886_2018_trabalho2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_qh9sIKEuCTn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1072
        },
        "outputId": "5a4774dc-1d4d-492d-8b83-06cff322190b"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive/')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    729\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 730\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    731\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    394\u001b[0m         \"\"\"\n\u001b[0;32m--> 395\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    396\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: ",
            "\nDuring handling of the above exception, another exception occurred:\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-44-91874b305a32>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint)\u001b[0m\n\u001b[1;32m    122\u001b[0m       \u001b[0;31m# Not already authorized, so do the authorization dance.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    123\u001b[0m       \u001b[0mprompt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroup\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'\\n\\nEnter your authorization code:\\n'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 124\u001b[0;31m       \u001b[0md\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgetpass\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetpass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    125\u001b[0m   \u001b[0md\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msendcontrol\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'z'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    126\u001b[0m   \u001b[0md\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mu'Stopped'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mgetpass\u001b[0;34m(self, prompt, stream)\u001b[0m\n\u001b[1;32m    686\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    687\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 688\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m         )\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    733\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    734\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 735\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    736\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    737\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d7Wxk9Bw-ozi",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 408
        },
        "outputId": "c4f74269-a2a9-4418-cecb-d8276042ad44"
      },
      "source": [
        "from google.colab import files\n",
        "\n",
        "uploaded = files.upload()\n",
        "\n",
        "for fn in uploaded.keys():\n",
        "  print('User uploaded file \"{name}\" with length {length} bytes'.format(\n",
        "      name=fn, length=len(uploaded[fn])))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-c79bf5b1-6329-41ad-87ad-711e1a1b4866\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-c79bf5b1-6329-41ad-87ad-711e1a1b4866\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-4-292f82be1b7a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfiles\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0muploaded\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfiles\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mfn\u001b[0m \u001b[0;32min\u001b[0m \u001b[0muploaded\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeys\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/google/colab/files.py\u001b[0m in \u001b[0;36mupload\u001b[0;34m()\u001b[0m\n\u001b[1;32m     62\u001b[0m   result = _output.eval_js(\n\u001b[1;32m     63\u001b[0m       'google.colab._files._uploadFiles(\"{input_id}\", \"{output_id}\")'.format(\n\u001b[0;32m---> 64\u001b[0;31m           input_id=input_id, output_id=output_id))\n\u001b[0m\u001b[1;32m     65\u001b[0m   \u001b[0mfiles\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_collections\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdefaultdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_six\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbinary_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m   \u001b[0;31m# Mapping from original filename to filename as saved locally.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/google/colab/output/_js.py\u001b[0m in \u001b[0;36meval_js\u001b[0;34m(script, ignore_result)\u001b[0m\n\u001b[1;32m     37\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mignore_result\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     38\u001b[0m     \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 39\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0m_message\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     40\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     41\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m     99\u001b[0m     \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_read_next_input_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    100\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_NOT_READY\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 101\u001b[0;31m       \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.025\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    102\u001b[0m       \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    103\u001b[0m     if (reply.get('type') == 'colab_reply' and\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kS50aTt7LT9v"
      },
      "source": [
        "! mkdir -p drive/My\\ Drive/mc886\n",
        "! mkdir -p drive/My\\ Drive/mc886/trabalho2\n",
        "! cp -r *.csv drive/My\\ Drive/mc886/trabalho2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3Lits3snguWF"
      },
      "source": [
        "!rm -rf /content/drive/\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xu7XS7oZptO5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "967a4cb1-da9f-4840-ea9c-12a4f40c66ab"
      },
      "source": [
        "# TensorFlow and tf.keras\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "\n",
        "# Helper libraries\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "print(tf.__version__)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1.14.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SrIndWo0csmj"
      },
      "source": [
        "# Download data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LSCyiC4AFIJT"
      },
      "source": [
        "Inicialmente estamos fazendo o download do dataset pelo kaggle"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DU-W9C1HcLgT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "bcc18751-97ed-408a-8f34-92cd8ed2af1a"
      },
      "source": [
        "fashion_mnist = keras.datasets.fashion_mnist\n",
        "\n",
        "(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()\n",
        "type(train_images)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s4L1GopRFTcF"
      },
      "source": [
        "Definimos as classe na ordem indicada"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VGCkJiSZcfJl"
      },
      "source": [
        "class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', \n",
        "               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z_nIsw_GFYDF"
      },
      "source": [
        "## Explore the data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QA7EvBgmcoj0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b15c10f0-6b44-4b62-c9fe-4335b74f2494"
      },
      "source": [
        "train_images.shape, train_labels.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((60000, 28, 28), (60000,))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0QX9kND6dHFT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "outputId": "9d437d55-0cf8-446d-e92b-c7004b3ed8e5"
      },
      "source": [
        "plt.figure(figsize=(10,10))\n",
        "for i in range(25):\n",
        "    plt.subplot(5,5,i+1)\n",
        "    plt.xticks([])\n",
        "    plt.yticks([])\n",
        "    plt.grid(False)\n",
        "    plt.imshow(train_images[i], cmap=plt.cm.binary)\n",
        "    plt.xlabel(class_names[train_labels[i]])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkAAAAI/CAYAAACf7mYiAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzsnXecVcXZx3+jMRFBUKpUEaxBEZBi\nQcVeorFhr/FVkzeaaIrGmGgS3xSNscTYEtRoYo0KsSsqICiiFKmiSFWkuQIiiv28f+zd4TcP9wxn\nl727d/f8vp8PH55zZ+7cc8/MnHv2qS5JEgghhBBC5ImN6vsEhBBCCCHqGj0ACSGEECJ36AFICCGE\nELlDD0BCCCGEyB16ABJCCCFE7tADkBBCCCFyhx6AhBBCCJE79AAkhBBCiNyhByAhhBBC5I5vVKdz\n69atk65du5boVEQx5s+fj4qKClfb45bLXH766adefuedd7y85ZZbBv0222wzLzvnisp2vBUrVnj5\nW9/6VtBvq6228vLGG29c3dOuMRMnTqxIkqRNbY9bX/P55ZdfBscVFRVebtWqlZc32WSTDf6sTz75\nxMs8z0C4XuyaKBWNYW9+9tlnXl69enXQtnLlSi/zHuF5BcK9mbb/AOCjjz7y8kYbrf3bu2XLlkG/\nNm1qfXtkohR7s1zus6Xkiy++8HJt7PPaIOtcVusBqGvXrpgwYULNz0pUm759+5Zk3NqYSy6jUtMf\nnZkzZ3r5ggsu8PIJJ5wQ9Ovdu7eXv/nNb3r5G98Il/CMGTO8PGzYMC9369Yt6HfJJZd4eYsttqju\nadcY59yCUoxbX3tz2bJlwfFdd93l5TPOOMPL/MBZUyZPnuzlN998M2g77rjjvFxXN+Fy3ptZmTdv\nnpdffPHFoO3RRx/1Mj+knH766UG/Pn36eJnn5ZFHHgn6Pf/8815u2rSpl0877bSg33nnnZfp3Gub\nUuzNPPxmLlq0yMsdOnSoxzNZS9a5lAlMCCGEELmjWhogkT9iWp40rc/rr78eHD/44INetn8Vsmqd\nVfCXXXZZ0G/58uUZz3gt22+/vZenTJkStP3pT3/yMmsnDjnkkKDfz372My/vsssu1T6HxgjP02OP\nPRa0/etf//LyAw884GVr1mAtHmtsrBmGTTTvvvuul48++uigH6+j448/Pv4FcsbTTz/t5euvvz5o\na9KkiZc///zzoG3TTTf18vz587180kknBf2WLl3qZTb3WO1s+/btvdyiRQsvP/zww0G/G264wcsH\nHnigl2+88UaIdPbff38vW/Nj69atvTxkyBAvZzXPsZYHAPbbbz8vr1mzxstdunQJ+j377LNeZq1f\nuSANkBBCCCFyhx6AhBBCCJE79AAkhBBCiNwhHyARJRbdtWrVKi9zxI/1t2E/ombNmgVt7IPAocw2\nNJ3DrT/88EMvcwiufV/s3Pv37+9lDt0dO3Zs0G/UqFFeHjhwYNB2zz33pI7fmOE5ZF8OALjqqqu8\n/Ic//MHLNmqL/UbYz8dG5G2++eZeZn+Qww8/POhnfYfyzpw5c7x83333edn6sbH/xtdffx20cah6\n586dvdy8efPUz+U9Z/cwv4/9vqyv0B577OHlhQsXepn98QDg2muvTT2PPMLzx+koAOC9997zMq8B\nez8ePHiwl/n+9tVXXwX92D+M9yynOgDK0++HkQZICCGEELlDD0BCCCGEyB2NygTGphYg3QRi1XQv\nvfSSlw877LBM47NK0Kpws2LPl6mrbLYbwjHHHONlzuLcrl27oB9/F6tKTcvCbPvxteJMtLZf2nti\nsBmOVbtAeO5jxowJ2jiJ40477ZTpsxobbL4CQnX4+eef7+W//e1vQT/OzB0zge22225e/t73vudl\nDssG6i97cLnC5qHYtWGzic2uzXuT73HbbLNN0I/NoDyGvYfZtVJsbCDMLMxh2tOnTw/6PfHEE14+\n4ogjio6dJzhZJSe4BMJ7JqcUWbJkSdCP9ym7MkydOjXox+4KPF82S3i5Iw2QEEIIIXKHHoCEEEII\nkTsalQnMRjGwCnf27Nlevv3224N+bAJhr3VrDuHIoZjZi00v9py4LTZGzLRTX0ycODE4ZrMXZxq1\nBTIZjjoBwuiEWEQKXyu+NhypYuHMtrY+FEcXderUqejnWOxn8TrKa0QKX0cgjD7ZeuutvWyvD8/7\n+++/72WbmZbXFY9t11hWc2deOOuss7zM2Z+tOYzN1dY1IK2mGmfxBsL5Y2y0mI3YTIPH54KsvE8B\nmb0s3bt39/K4ceOCNv4ttIWh0+C9aM3/XPOL79tcsLghIA2QEEIIIXKHHoCEEEIIkTv0ACSEEEKI\n3NGofIBiIdYjRozw8nPPPRf04yynHKpp7ZnDhw/38rnnnuvlWNh3Wpg3EGavtf4lWe3ldcnIkSOD\nY75WHP5qvwv781j785///Gcvc7VonhMgrEbM/ayvEPstsA+QzRQ8adIkL3OVaesjwSGe9ntxZfu8\n+gDF1vcHH3yQ2sa+PVtttZWX7Z5jX6FYlu+GkDaiLmF/Rc6s/Oijjwb9BgwY4GXrV8VzwSHW1geI\n9wz7Tdq55L3EofPLli1L+RahfwlnGRfrwqk47H2R9wf7udq5tOHuVVh/WPa543mNZQkvR6QBEkII\nIUTu0AOQEEIIIXJHozKBWXUeM378eC/bLLKsLmT54IMPDvq9/vrrXr7kkku83Ldv36AfF5uzGYJf\ne+21oue05557Bv2q1NblFA7/8MMPB8dskuDrZkPJWRVui2eyKZFNjDbk/uyzz/by3//+dy/36NEj\n6MemOL52bdu2Dfr95Cc/8fItt9ziZVbn2vFsYT8u8Dlr1iwvb7/99sgLsezrvD7sOubw5pp8ljV5\nxVIv5J0f//jHXr7hhhuCNk5VYM2/vN7ZJB8zc/A82PG4LWY24WLHnJm/oZlX6ppYOg/ef+wawO4E\nANC7d28v8/W2KQisia0Ke38vd6QBEkIIIUTu0AOQEEIIIXJHgzeBxdTiHO01YcIEL1tV6scff+xl\nNmWwDAD9+vXz8rbbbutlG2E0duxYLw8dOjRoY9UkR2oMGTIk6FdlziunzJpcHA8II7VYxZpW9BAI\n1duWQw45xMvNmjUL2rjw6F/+8hcvc0FWAHj88ce9zCp3Vu0CYRQYz4m93hz5ZaPA+Pu/8sorXs6T\nCcyufZ57jhyxJjC+ltwWy+icZqoG1i3kmXd47fP6fvnll4N+v/rVr1LHYLMXR1fabO6cSZ/n0vbj\nCNA0E4ptO/LII1P7iRA2Z9ks3ryv2DRt+7FLAZsp7XyxqYv3fGxeyxFpgIQQQgiRO/QAJIQQQojc\noQcgIYQQQuSOBuEDVNNKz5dffrmXFy9enNqP/T5iVXNfeuklL7NPkfU96tOnj5e32267oI3Hv+mm\nm7w8d+7coF9VlmFbbbuumTZtmpdtWGtamLP192BfAM4oa5kxY4aX7bXn+WO/Bbs22KbNbeyjY2Hb\nOWecBuLZh9n3YfTo0V4+88wzUz+rsRGrys6y9Q2oST/2ZbH9yildRDlgw6CrsGHP3bp18/K8efOC\nNvbh4vuQ9YXjfjwv1o+Pq8bH5rJLly5Fz13E4fuzTfWy4447epnny94/bRqQKmI+RbweYqloyhFp\ngIQQQgiRO/QAJIQQQojc0SBMYDUtdLjlllt6mU0obLoAwjA+VgHaEF9WHbJZx54fm8o4JB4IVYdL\nly718qGHHpryLeqXq6++2ss2rJUzxcZCyfm6WVUqmxK5eOby5cuDfjwvfN3sePxZnPHUZh5+8MEH\nvbxixQov27XB77NtfE42c3VesOYLDp1ms1TMtBUrqJq2962JVNQMngd7v2PTBt8jrVme9xnvv5g5\nJDbnNmu7yAYXFbakFS+Nha3z3rOmbj7mfc6/uQ0BaYCEEEIIkTv0ACSEEEKI3KEHICGEEELkjgbh\nA1RT2Bcl5o/Avh1sR23VqlXQj0ML2T5uQwlj6eD5fWwHX7hwYfEvUc9wlXr2vQGA2bNne5lLXFgf\nIE4FYENoBwwY4GW+HrYfH/P82bDNtLBpGybN5VC4dAWXRbGfZee5Q4cOXj766KORR2I+BHzN7XzG\n9mMa7HdgfYDs2hRr4etr56Fjx45enjp1aur7+HrbMbgMCbfZ8iR8n2VfoYqKiqCfrTxehfVDSQv1\nF+H1rQ7s98Oy9dnia8/3RVtmqtyRBkgIIYQQuUMPQEIIIYTIHQ1Ch2hND6yaZdWcDePkrL6swrXh\nmRzGyf04zBsIzTxsHrMmHx7PZkNdtWqVl3fZZRcvW9NLVXh4fVeD/+EPf1hUBsLw8bffftvLt956\na9Bv1KhRXraZoPkabLHFFl7mawjUrMpwLMMwq4h5Xnv27Bn0u++++6r9uY0dnndrWuRrzir0mlaJ\nZpMKm0Csip/3CZteamoKyAtdu3b1sp1L3oM851tvvXXQj80hnMrChkRzP74H2/u7TFsbTtbUMbZf\n2v61/Xg/c5v9zSx3pAESQgghRO7QA5AQQgghckeD0DVa9RuratkExtl9gTD7MxeKs5FZPAabot55\n552gH2cd5syoVmXLkUn2szji4fzzz/fy5MmTg35V6v6aFoKtC1jF3b9/fy/bCJ0RI0Z42c4lX0e+\n9jbiw0aeVGGvT1qRPv4cIJxLNplw1JsoDs+vneuaqt6riJm7GWuuadGihZdl9soOZ+6OZWdOi8IE\n0qPArAmMi6FadwXGmr9F9cn6u2H78X03FkXL88zysmXLqnWe9Y00QEIIIYTIHXoAEkIIIUTu0AOQ\nEEIIIXJHg/ABsv4gaVWGd9555+CY/RPYL8faM9n2zTZM60vAIdx8TjYbMfuyWDt4586dvcwh1hdf\nfHHQb/fddwdQXmGF1l7M35vnxPp3cPXo2LWP+Y+khWfWlDTfEg7Ft8Ts4LVxTg0F/q72mtTV51qf\nLpFOmv8cEPp5sJ8kEO7pWJVv3jP8Huv/2K5dOy+zP1A53eMaCzX1AUoLb4/5CrE/JVdLaAhIAySE\nEEKI3KEHICGEEELkjlozgbGKLFbokPux6iyrmjbGYYcdFhxzFmYuxBcLs2Q1sDW9cbhnmhkOCM83\nVgSSiw9yGG+5Ys08PH9M9+7dg2MukJfVnJk1Q2lWYtm/mdg82LUcCxtuzMTMXrFw6dp8T2wuYsU/\n80jsenBmes72DIT3TM7wbOF7Jmfk5gzrQPpet3Np049UoQzR2YmZwGIFntPGyJqKRiYwIYQQQogy\nRw9AQgghhMgdNdYpxqJ5altVOXr06OD4kUce8fJLL73kZc5qCoQFSzlqxKrz+Hx5DPsdeQw2h9nx\nYlENbHrhfkOHDg36HXnkkaljlAtpRWlZdQ6E0Xh83YDQjMZRZVY1mxaRkDVzcKx4Jo+RV7NWdYit\n/bR5steV5ylrJFlMJc/HvMeUFTpuBmTzVY8ePYK2Ll26eJn3i72mS5cu9TKbuWzRVH4fm97at28f\n9HvvvfdSz1ekM2vWLC9bE3/WwsSxe2taP/795EoHDQFpgIQQQgiRO/QAJIQQQojcoQcgIYQQQuSO\nGjvrZPWVWL58eXC8aNEiL7PNkl8HQp8Y7geEPiVsz7S+Nxy62aFDBy9bGzb7nrA921a6Zjs4Vw3/\n6KOPgn5jxozxsrW/c5g1+7+MGzcODY20cHT7nWMZk2PZRtP61YYNm8+JfVBi/hJ5yvYcI3aNs6Yr\nyJqptibvzxpKL8J7lU1fwT48fM/kzO5AeP9buXKll61PJvsH2fs9w/dgzszftm3boJ/SHYTMnDnT\ny506dQra+Nrz75iF74WxPcb9+HdyyZIlQb+xY8d6mX8zywWtGiGEEELkDj0ACSGEECJ31NgE9sor\nrwTHV1xxhZe50B2rRIH0rK+2CCWb2KzKlVVurKaz4descnvwwQe93K9fv6Afh2SyqjeW1ZKzOK9e\nvTpoY/WjNcux+pGLpja0DJrVgdXddp7TQqBjppWaYN/P5kdus5mqxbrURgHUrKbPNJOanSc+J81h\nunno3XffDfq98cYbXu7WrVvQxpmh2Z1g2223DfrxfWzu3LletgVU+T4bgzP4c8Hoiy66KOgns1fI\nCy+84GVrfub1EDMdZjVhpxVNtWvj1ltv9bJMYEIIIYQQZYAegIQQQgiRO6ptAqtSNV944YXB62zm\niBUDTcuSzFmWgdCcZU1bDBfcW7BgQdB26aWXFh2D1XJAmImUTWD7779/0I+jJN5++20v20KBbF6x\n6nhWHfJ1shEODYGsUVGxiEHOWMprJWYCi6lp09psZlQ2o8ZMK4yiwCqJZXhOM23FIrNi17Um0X98\nT+BCvHkizTz07LPPBsff/va3vWyztPO143trx44dg35vvvmml3k92Egkdhto166dl+39k01nnBWa\n77kAsN1220GshSOJbTUGvq9lje6KwXuR142NnOYosHJEGiAhhBBC5A49AAkhhBAid+gBSAghhBC5\no1o+QBUVFbj77rsBrOtvwyGUHBZpsyRbe28V1veC7fjWlsw26DVr1niZ7coAcOaZZ3r5v//9r5dt\npfV58+YVPfeJEycG/UaOHOnltEyYQOjPZH1PGLbT2n5V4aqx9zcU0jJ3A6HPQCw8M81Ph/2tbD+e\nI+tnYm3kVdi0DWJdOHO6nc80/wL7+ob6U9n54/GsL4tYC/vhAEDPnj29bOeS7z3WR5NJ85uL7WH2\ntbSh+ex7lOaHBMgHyMKpVGwKgqzh7bF7Zhq8bvj3GAgzQ/Masr+Z9YU0QEIIIYTIHXoAEkIIIUTu\nqJYJbJNNNvHh2tYsxaYuVm916dIltR+r0m2W0JYtW3qZi/LZMViVaoucsnnlmGOO8fIuu+wS9GPV\nIZvorJqOsxiz6cWGAnPhOWvCSgv1tiaCqgKwMdVzQyFr4dyaqGnTTFl2jJgJhufSqnDT3pNnYiG1\nNVGhZyU212mZvUVo4ueUH0BoLuQMzEA4z7yHY3sklgIl7V5mi6ay2YTdHbjCgAgzdQPh9bFpVfja\np1VjAMI9mzUtCY998MEHB/3+85//eJldSsolK7Q0QEIIIYTIHXoAEkIIIUTuqLYJrMr0ZdWbnTt3\n9jJHUlm1JZuR2rRpU1QGQvWrVZ1yG6twbVFSVse3atXKy1wAEAhVv2yys570/Fl8vlY1z+p428bq\nY1b1tmjRIug3efJkAGHx1IZK1uyiWU0mWU0csSzC3Mbq/cZwvUtNLDIxTYUey+JcE+xa4T3H9x8R\nRlnZ+zbfS+288v2O72PsumBhs4y996UVrN1mm22Cfpzxmd/DkcEAsHz5ci+zy0ReeP3111PbYr87\nsX3Jc87rIZbxnffeW2+9FfTj+Zs5c6aXZQITQgghhKgn9AAkhBBCiNyhByAhhBBC5I5q+QBtttlm\n6NWrF4AwrBwA/vnPf3q5Q4cOXuYK6kAYqs4+O9b+zDZLa3Nm+zGPZzOSsp2SQy1tKCjbRNnWacdj\n/6W0sH/bj2UgDJFn2ymHqgJrs1rbTMflRE3CnGvqC5Lm9xPzL4qFwfN5sL08q79SnuG9GsuwXdvh\n6Dxn1ieB98mcOXO83Lt371o9h4YI38fs/uP7ovV/4/su37fstef7J98XrR8K3ye5ynvfvn2DfqNH\nj/Yy36vt/Zj9jfLoA/TEE08Ex61bt/ay/d3gOeP5sn6zvGf5ett+nKGb55n9Wu3nTps2rci3qF+k\nARJCCCFE7tADkBBCCCFyR7VMYMxll10WHFeZxgDgL3/5i5etaYfDx9k8ZLOBsqrWhsGnhVPGsv3G\nwj3Z3BYbj+E2e+6sBuZQTSBUP7K6kIsSAsBpp50GALjhhhtSz6G+yZq5mdXnsSyyjA3XTTN/WJW+\nfV/a+fG583hZTWp5ZtGiRaltPB9pIfFA9ozRaQVy7d5kNTybAkSY3d7e+/h+PH369KCN9yqn6bBj\n8LWPuTWwuwIXZf3Od74T9OPfBR7DZj5OK8KaF9jUC4S/O9YUlZYSxvZ7/PHHvXzEEUd4uUmTJkE/\nNpfaDOJp/WbMmJHar76QBkgIIYQQuUMPQEIIIYTIHXoAEkIIIUTuqLYPUJVN3tr0Dz/88KLyiBEj\ngn7sO8RV2G2ac7bxW78MDs+Mhd1yRVz2M7CV7Nk2zfbMrCHR7OMChD5B1kfloIMO8vJOO+3k5XJJ\nDV5q7PVg/xueP9uPj9P8QuwYjPUzSQvHVxj8+uH9YlNU8HXma2nnJavfFYfzcj877+x7wuVsRFiO\nyK579gdZuXJl0MbXm1ObWN8eLhnUtGnT1M9Kw/qQ8Hi8nnhsAFi8eLGXd9hhh0yf1ZhgHx0AGDVq\nlJftfuP9Eiv3k+bPEyv3FOvH94pddtkl9XPrC2mAhBBCCJE79AAkhBBCiNxRbRNYWphxGvvvv39w\nPG7cuKL93nzzzeCY1ba2KvvChQu9vPXWW3vZmqJsFmpRu2QNC2f1OVd6BkKVKa8tu85Y7c5t9hz4\nOGsFa0Zh8Ounf//+Xp41a1bQxmYUVn9bWEXP85T1GrP5AwjXRB7NITE+/vhjL9uUHTa0nOHK4Hxv\nteHnfK/msHr+XNuPZRvOnZbuwK4NDvvOI+eee25wfN5553nZmsDY1GkzeTNpv+82tQTvc14bq1at\nCvrx8YUXXpj6ufWFNEBCCCGEyB16ABJCCCFE7qhxJujaZscdd4weMzvvvHOpT0fUIqwutUX12DTF\nGWutKYojSrKas2JFTjkSkDPeWnV82jkA1TcHNxbYjHLGGWcEbSNHjvRyRUWFl605hM0osYK/PG88\nn127dg36sandmnnyDpudt9lmm6CNzVwWXu8cOWRNmxzBet9993nZmsoOOOCAomPbfcX3C57Lbt26\nBf3222+/1HPPI5xd21YWYGzxbmbZsmVFX7cZo3nd8B61Zslnn33Wy+yuUi7k8w4uhBBCiFyjByAh\nhBBC5A49AAkhhBAid5SND5BoeGStBt+nTx8v9+jRI2jjys8x3x72E+BspbEq72kh9kDod8I+Bxzi\nbcmrz4+Fr7H1BznssMOKvmf58uXBMfsUcBZ4O59bbbVVUTlriL1SFwC33HKLl22mXt5XJ554YtDG\n/nDsv/Huu+8G/divqG/fvpnO6bjjjkttO/744zONIUI407INgx8zZoyXZ86c6WVbqWGvvfYqOvYF\nF1wQHLOvEK8brgLRENAdXQghhBC5Qw9AQgghhMgdLq14ZNHOzr0PYEHpTkcUYeskSdqsv1v10FzW\nG5rPxoPmsnFR6/Opuaw3Ms1ltR6AhBBCCCEaAzKBCSGEECJ36AFICCGEELmjLB6AnHNHO+cS51x6\n/Yuw/3znXOsir68u1j8yTrX6R8Y5yznXYf09GzfOuVbOucmFf0ucc+/R8TfX895BzrknUtpud859\nO6XtIufcZua1S51zpxbWVdH3ifWj+cw3zrmvCnM9wzk3xTn3M+dcWfxm5Bnty9qjXBbzyQBeKvzf\nEDkLQO4fgJIk+SBJkl5JkvQCcBuA66uOkyT5fAPGPSdJkjfs6865jQFcBMAWfzoEwHAARwNokBuz\nHNB85p41hbnuAeAgAIcB+I3t5JxTPrk6RPuy9qj3ByDnXDMAAwH8D4CT6PVBzrlRzrmHnXNvOufu\ndSarmXOuiXPuaefcuUXGvdg5N945N9U597vI519f+AvnBedcm8JrvZxz4wrvHeac2zLtdefcYAB9\nAdxbeAJvUisXphHjnNuX/mJ53Tm3eaGpWbH5LqyDvgV5tXPuWufcFAC/QuWD50jn3MhCe3MA3wSw\nHYDvArim8DndI/M6yjn310K/6c659GyIYh00n42fJEmWATgPwAWukrOcc48550YAeAEofs91zjV1\nzj1Z0CBNd86dWHj9KufcG4W+f6m3L9aI0b7MQJIk9foPwKkA7ijIYwHsVpAHAfgQQCdUPqi9AmBg\noW0+gK4AngdwBo21uvD/wQD+AcAV3vsEgH2KfHYC4NSCfAWAmwryVAD7FuQrAdywntdHAehb39ey\nnP4B+C2An6e0PQ5gr4LcDJUZyWPz7a9vYc5OoLHmA2hNx8cCuLIg3wVgMLXF5m9IQd4HwPT6vn7l\n9k/zmb9/VfdT89pKAO1QqfVeCKBl4fWi91wAx1XNRaFfCwCtALyFtVHIW9T3d22o/7QvN+xfvWuA\nUGn2eqAgP4DQDPZakiQLkyT5GsBkVD70VPEogH8mSfKvImMeXPj3OoBJAHZE5ZOq5WsADxbkewAM\ndM61QOWGfLHw+t0A9kl7PfO3FMzLAK5zzv0Yldf0y8Lrsfmu4isAj0TGPhTA0/bFDPN3PwAkSTIa\nQHPn3BYQWdF85pPnkiSpqnGSds+dBuAg59zVzrm9kyT5EJU/wJ8CuMM5dyyAT+r+1HOB9uV6qNcH\nIOdcSwD7A7jdOTcfwMUATqhSyQH4jLp/hbB22csADqW+wdAA/pSstYtumyTJHRlOSUmRSoBz7nxS\nxXZIkuQqAOcAaALgZbfW+T0231V8miTJV5GP6w/gtRqcpp17rYUUNJ/5xDnXDZXzWFUI6mNuRpF7\nbpIkswD0QeWD0O+dc1cUfoj7A3gYwBEAnqm7b9F40b6sPvWtARoM4N9JkmydJEnXJEk6A5gHYO8M\n770CwAoANxdpexbA2a7SvwjOuY7OubZF+m1UOAcAOAXAS4W/UFY456rO4XQAL6a9XpA/AlBlXxWG\nJEluphvjIudc9yRJpiVJcjWA8aj8a7Gm+GvvnOsB4E3auL5tPfMHAFW+CQMBfFjoL4qg+cwfrtI/\n8jZUugkU+9Eqes91ldGxnyRJcg+AawD0KfRpkSTJUwB+AmDXuvkWjRvty+pT3977JwO42rz2SOH1\nB9ftvg4XArjTOffnJEkuqXoxSZLhzrmdALxSUBCtBnAa1v7lUsXHAPo7535daKsqa3smgNtcZdjf\nXADfW8/rdxVeXwNgjyRJ1mQ49zxzkXNuP1SaIGegUpW6Rw3H+geAZ5xziwA8ifCvyQcADCmogAcj\nff4A4FPn3OsANgFwdg3PJa9oPhsnTZxzk1F5Db8E8G8A1xXrGLnnbotKB9mvAXwB4H9R+WP5qHNu\nU1Rqjn5a6i+SU7Qv14NKYYhGg3PuOVQ6xS+u5vtGodKRcEJJTkzUCM2nEOVHY9qX9a0BEqLWSJLk\noPo+B1F7aD6FKD8a076UBkh+L/yFAAAgAElEQVQIIYQQuaO+naCFEEIIIeocPQAJIYQQInfoAUgI\nIYQQuUMPQEIIIYTIHdWKAmvdunXStWvXEp1KOl9++WVwvGrVKi9XVFR4eeONNw76bbrppl7eaKO1\nz3p2vI8/XpvQtGnTpl7u2LFj0I/HqCvmz5+PioqKYtmuN4j6msu8M3HixIokSdrU9rjlOJ8fffSR\nl7/1rW8Fbd/85jczjfHZZ2uT1n7yydqKCVtuueUGnt2Go73ZuCjF3tRc1g9Z57JaD0Bdu3bFhAnV\nC+G3UWbFK1fEWbYszF84YsQILw8ZMsTLW2wRlhXZaaedvMw34BUrVgT9XnnlFS/vvvvuXv7jH/8Y\n9GvSJFuhd/7ONfm+TN++fTfo/WnUZC7FhuOcW1CKcWtjPtMiQmu6hl98cW0C2O7duwdtnTp1yjTG\nvHnzvMzf7/jjj6/ROdUm2puNi1LsTc1l/ZB1LkuSByjrAwBrb/76178Gbc8//7yXP/3006CNtTSf\nf/65l8ePHx/0Gzp0aNHP3WSTTYJj1vS8+uqrXt5zzz2Dfi1btvTyvvvu6+Uf/ehHQb9y+OtUiOrC\n+zam7Vy4cKGX77zzzqDt2muv9TJramsDPqfTTz89aLv66rUJ5S+88MJM43399dep4wshGj/a8UII\nIYTIHXoAEkIIIUTu0AOQEEIIIXJHndcCmzNnjpePOOIIL2+11VZBP3Zotj47HO3Fzs3WKXH16tXr\nfQ8Q+hG9//77XrbRYhyR8txzz3n55ZdfDvp9//vf9/Kxxx4LIcqRrD4wvXv3Do7ffvttL/OeAIDN\nNtvMy7ynrR8f+8nxXl+8OKyvuGbNGi9zEIId7+c//7mXOXjhgAMOCPrdd999Xrbfl6+H/IHSsc7y\nadct5v8ZK8FUE6f7sWPHBsfsv/nWW295efvtt9/gz2rM1HYgRFZOO+00L//0pz8N2vr06eNlvt/Y\n3/GaoF0uhBBCiNyhByAhhBBC5I6SmMBi6rJf/vKXXm7fvr2Xbeg4m5/seN/4xtrTZpUdm7yAUEXG\nMpu8gDARIpvb+HOAMLEiq33teDfffLOXDz744KCtWbNmEKK+yBrqvscee3h5+vTpQVu7du28bNc+\n71Vus3tpyZIlXmazl821xQkT2ezFe9Ee873j/vvvD/pxMsX//ve/QRtfj9rM5ZUnsl6rmlzTUaNG\nBcfTpk3zMptlAeCyyy7zMs/l8OHDg361YUYpF7Ku2Vg/PuZ+WfP5ffHFF8Ex/57yfA0ePDjoN2vW\nLC/b33Hep7W9F6UBEkIIIUTu0AOQEEIIIXJHyaPAbFQHq76bN2/uZas6Y5U5q62B0GT11VdfednW\nAuNjVm/bCBIen/vFos/YlGXV8Xx+jz32WNB2yimnQIj6IqZCHjZsmJfHjRvn5c6dOwf92Pxr9y2P\nnyYD4d5n9bqNTEsz2dk9zOPzvu3SpUvQ79lnn/Xy008/HbQddthhqeebB7KaOezr9r6bxr/+9S8v\nc8mhMWPGBP1uvPFGL3fo0MHLU6ZMCfpxRBdHCgHADTfc4OVevXplOr+GTpr5KtaPfz8tvBdtRDSb\nqrmf/c0cPXq0l4855hgv21qAO+64o5fZhcRix99QpAESQgghRO7QA5AQQgghcocegIQQQgiRO0ru\nA7RixYrgmH2A2HZsM8qyX461MXN4bVroKhDaJtnuae2ZTMyOyn5JnDG6devWqefHVe0B+QCJuifm\nJ8dw1nJe0x999FHQL5alnX2CYnuO27JmXY71S7sP2DB9PvfDDz88aGN/Rc5ibc/dhvSLtcycOdPL\n9rpxGPuECRO8vHz58qDfmWee6eV9993Xy9bPh8dgGQh9TGbPnu3lbbfdNnr+jYWsPmyx+wG3xXxv\neO+9++67QRvvsc0339zL1vfo2muv9XLHjh2DtlKmpJAGSAghhBC5Qw9AQgghhMgdJdflTp06NThm\ntSibw2z4Kx/bMHMOjezevbuXu3btGvTjwowctte0adOgH6v32BTHmSsB4PHHHy863sqVK4N+nMmS\nQ+KFqA/S1NxHHXVUcMzmIU7zMH/+/NR+1iyVpiqPhdvWBPu5rBrn72vvK3xPsPcVNtGcdNJJRcdr\nzGQ1L9i0JFyIlE2HLVq0CPqdffbZXr7++uu9bE0eXAxz2bJlqefHodOTJk0K2rhYNc9zXkxgWQsd\nW5YuXeplNk1+8MEHQb+JEycWfY81e7Zs2dLLvDY+/PDDoJ8tZF5XSAMkhBBCiNyhByAhhBBC5I6S\nm8BYlQwAe++9t5fvvfdeL9uCi1zMjlWdMaxqds2aNUVla5birLJsHrMRW3/605+83K9fPy+zKQ8I\n1exz587NdO5C1DWvvPJKapuNymRi6vRY9mcmlqk2C1mLONpz5Sg1m016/PjxXub7Vl6yQlszJV87\nvgaxotN8H7fFS//+9797+ZlnnvHyIYccknpObdu2TW1j8xibWgDgvffe8/Kdd97p5b322ivot/PO\nO6eO35CJzeWcOXO8fNFFFwX92J2Do7ZmzJgR9GM3lDfeeMPLgwYNCvqxeZPvKbYIbSwyOys1MbNL\nAySEEEKI3KEHICGEEELkDj0ACSGEECJ3lNwH6JJLLgmO2Ra53377ebl3795Bv1WrVnnZ+gCxjZ+r\nSrdq1Srol5ax1tr0eTwOz7N+SRxCyf5LHDJsz8PaOvNOTasUp/kj1DRLL4eJZg0RtbA/CX9uQ/EZ\n4VQOQJg1OXYdeQ5jmaB5jJh9Pha2nrZeYqHpvCZsqDv7Idh0GPfdd5+XOTNtXoilFmDsuuE5GjFi\nhJdPO+20oN9tt922oacYwKHZ/HsBALvttpuXOSu09W2z4d2NhVjmZk4dc9dddwVt9je0urRp0yY4\nZj879rc68cQTg37sUxS793NbrFJDVqQBEkIIIUTu0AOQEEIIIXJHyU1gNsTxhRde8PIjjzzi5eHD\nhwf9uCDeLbfcErSxmYoL3dnwzDRTCavpgVBFyuo2q8LlsMCrrrrKy9bMteWWW3p56NChQRtnTbWh\nm3kgq3nIqjfT3pdV7WnX0O9//3svL1q0KNMYlpiauVyZMmWKl7mgLxBm7mXVNe8P22ZNTGmFV61p\ni9tiofNphRBjhY95Tdh+XJzZ7tu8FznNujf5PggA++yzT1HZwqlIeN1kTZdg+3HxWr7nAqFrxGGH\nHVb0PQCwYMGC1M/OA9bkxfuI93LWex27tQDhbzzP0Ysvvhj0+8UvfuHlrAVaLTUxZ0oDJIQQQojc\noQcgIYQQQuQOPQAJIYQQIneU3Oh96aWXhh9IdnYOfdtpp52Cfo899piXr7zyytTx2TZpbfppfgbW\n1p/mH2RLZnBY/YABA7zMVW6B0A5qqw/n0e8nRpqNP6s/BocuA8DkyZO9/NBDD3nZ+qpwuObJJ5/s\n5fvvvz/T5wJh2Pif//xnL//617/OPEZdw2vd+uUw7E9nw6N5zmwaAm7j8a0vDvsX8PixMPiY/T+t\nnw2p5fuF/V4LFy5MHV+kk3UuGW6LzWsM9mGzqUjS1qH1E82731fM1zLm98P7nq/hGWecEfTjezB/\nFvvuAqF/mE2zwHDZjfPPPz9o47IbWZEGSAghhBC5Qw9AQgghhMgdJdf/HXPMMcExh8FPnDjRyxyq\nCADf/e53vcxVfwGgS5cuXmb1qw1vZ7VaLBMtq/C4krtVAX700Ude5vDJ66+/PujHbbYiMme8ttmv\nGyuxUNa0ENi33347OGZVKlcxt+kTunXr5uVOnTp52Ybuzp8/38tPPfVU2qlHeeCBB7z86quv1miM\numbSpEleZhMekB5mbsPgWUVtzcRpanM7z2mZva1ZivdtLAN42v62r/M9wWatZTMKzyebu8W6pJmw\n7Ou8bmL349j9guG1d/fddwdtRxxxhJdPOeUUL1tTWczckgdqmrU+LXs+X3cgDH3nSvOcpgAInws6\nd+4ctNlniCo4pQUQukNwpYYY0gAJIYQQInfoAUgIIYQQuaPkJrCZM2cGx2xi4uip3XffPej38ssv\ne3natGlBG6vtYpEGaRlmYwU50yIa7PmyWrVXr15Bv2222cbLVp23ww47pH52ORIrGsomFGsmYWJq\nVlaLXnbZZV5+8MEHg35cuLJ9+/Ze7t+/f9CPzaCffPKJl21B3ffee8/Ll19+eer5sfnVntNPf/pT\nL7/55pteZtMuEBZmrG947dt9wCaLrJlf7Rj8Ps4Ybc0haaat2N5k7JriIpec0dpG/bDpzH5HHuOG\nG27wcnUiA8udrBnWS00sUi+tn4WzGFt3ggkTJnj5+9//vpfnzJkT9Ntzzz3Xf7KNjKwmxti9Iuu6\n4d8/diFZvnx50O/II49MHaNdu3Ze5j1rs07z70JWpAESQgghRO7QA5AQQgghcocegIQQQgiRO0ru\nA2Rtrmzvfffdd71ssynHwtE5lJFtkzarZ5o/T6ziNPuN2M9lfxA+P+tnwP4l7OMCAEuWLPEyh2yX\nEzHbLxPz+2E4xJGrAwNh6CJnye7Ro0fQj+f2ww8/9PKqVauCfhzWyn5D7BMAhOuNQyavueaa1PF2\n2WWXoI19RtjfxYbclxM2DJhJq/5s55nXRMx/g4n56mUlFprP+4z3tw3152zu9px4TJ7PxkR9+fzE\nyJoJmrO8A8Cuu+7qZc7mDgBPPPGEl5999lkv2/VgfTTzQE3WQFrY+/qYMmWKl3v27OnlxYsXB/04\npYi9p19xxRVe5t/agw46qEbnxEgDJIQQQojcoQcgIYQQQuSOkpvArAmFi1KyWcOaDdgUZdVvrLpm\nFbz9rLQQbtsvrYCfVZdyW+vWrZEGh/jZjLWLFi3ycrmawFhFmlU9feONN3r51ltvDdqWLl3qZaty\n3nnnnb3M64HfEzu/mDmT59Vm/bVq1ipsWOywYcNSz+P3v/+9l2+++WYvb7311kG/e+65J3WMuuaP\nf/yjl62Jl4/ZvGdDVjn8OGvYem3Ae92awHid8rnb7PBsAuR7DBCatf/73/96uVxCxxsTPJexe8zV\nV1/tZbsOf/CDH3j53//+d9DGa/Twww/3MmeAB7Kb8fNCWoi8/R1LKzRu9woXKOff+OrcN/7whz94\nmX+Djz/++MxjpCENkBBCCCFyhx6AhBBCCJE7Sm4Cs5EWaSYKLpoGhEULYyawmDo6ayboNNW/Vfvx\n53J2SjbrAaF60I7B2TDLBS6QCQDPPfecl9966y0v28gYNufx9+JIGyAsSsoRXEB4vW0bw+YJvqYx\ncyabP+wa4ugunj9b1JSzi9rCnx07dvTy9ttv72VrWhkyZAjKhblz53qZ1dNAOBds/rUmPf5+dWkC\nY2J7mNeiNYHFssizWaZr165F3yNqB75HWrPUb3/7Wy/zXm/btm3QjyNKt9tuu6CN553vUw3R5MVr\nnddsbO/Z+11No7jS3p+2J/r27Rscc7ZmjsaLYV1PeF/yvSjmhpIVaYCEEEIIkTv0ACSEEEKI3KEH\nICGEEELkjpL7AFnYpst2RJsJ2vpRpJHmU2Q/i22n1vbPx1mrFLP/RCz8Ppaduj5ZtmwZbrrpJgDA\n0KFDgzb2v4pl32U7O2ddtteDs3faOWLfHvYdsr5TvFbYF8l+Fvux8Dzwd7JjsM2ZK4kD4Xqwfmrs\nd8Ljl5ufF2cm5/O0NvS0LOh2ztIyrAPpYbQ21Nna+dPg8XmMWLgt+5LZNcv+XnaeeK++8847mc6v\nXLD3lazpK2r7s3le7BzzXp85c6aXL7744qAf+9NxtYBrr7026BfzzeKs0ez3tscee6S+p9TE0inE\nKrTXJC1JbRPzITr22GO9zNmeAeCf//xn0ffY32Ae39772feyd+/e6z/ZaiANkBBCCCFyhx6AhBBC\nCJE7Sm4CyxpCas0LVg3GpGV1tuamtHD52DnxGFatzJ/FpgQb9s1mGEu5FFls1aoVTj/9dABAv379\ngraXX37Zy9OnT/fyggULgn5sQlixYoWXbegxX1Or+uQCsxUVFV6OmV1YtW4/Ky001BYBZZMdm0ms\nipnXik13wOfB6n0bXv6d73zHy3/+85+Lnl8pGTNmTNHXY2YpNoHZ780Zea2JKU1dnzVdRU3ha85z\na9cRm2PtPYa/Z20Ub61LYqaRWLh0bVz7NLcB3hNAaIq97rrrvLz//vsH/TgVxUMPPVSjc+LvFTun\nuiSWtb4m8/Dmm28Gx3feeaeXrVnRZsKvImaK4t8qew/49a9/7eX333/fy9adIo2YSS2W9qZ79+6p\n76tJSg5pgIQQQgiRO/QAJIQQQojcUedRYFlh9ZtV76ZlxoyprWMqxrRiqNaUsXLlSi+zCcxmIeUI\nBGsiqK/MucWoOhcuSAoAAwYMKNrfmvbmzZvn5dmzZ3vZZnblTKzWBJg2l1YNysUNuagevw6E5kiO\n6LJmSlaFx9TibBaKzR1HVLEJBqj/TMK26GkVdn2nZZnldQ+EJoWY2TltX9ljPr/YNebPtdc0zWRn\nvzubaq2J236XxkJtr79YNFPMFMcZnjt06ODlqVOnBv0efPDBDTzDcO2xab2uM0EnSeLN9LGs9bz2\n2LwEALfffruXbbQ0w/fjRx99NGjjjP5p52DPkfcRR+MBoWnyqaeeSj0n/p3k7Psx0xvvUSBcXwMH\nDkz9LJnAhBBCCCEyoAcgIYQQQuQOPQAJIYQQIneU3OjN/hpAGIYa89lh26G147OdORZOl5Zp09oK\n00LuY/47fO5dunQJ+k2YMMHL1s+iXDJBb7zxxt4vxlY5X7x4sZdjdtWWLVt6edCgQV62fj5pPihA\nul+HXRs8ZlpIPBCGxfN7eN0BYehmrHo4n7tdJ5w5mde59SWx1dTrmn333bfo69Y3JM0nwc4FX5OY\nHxGPb68dH7NvgL3+aSHWdjw+p1imah6/vrLqloKYXw77cC1dujTox3ud93CMrD5Fv/nNb4JjXlPs\n9zNs2LBM48VSo8Qy7rMPUF3jnIve/4oxadKk4JjnLHaPbNu2rZc5vQgAPP74414+8sgjo+dbjJNP\nPjk4PvTQQ70cC03nvZ2VJUuWBMfsU7nnnntWe7wY0gAJIYQQInfoAUgIIYQQuaMkJjA2S8SyXzZv\n3jx1DFZVx8JTefyY+jxreG3MvJam0u/atWvQj88jpoIvF2zYtj1Og82UMdMCm59sKH3a9bCmwrSC\ntbH38XxZU2zHjh29zGvDqtlj3ytt3djrxyG/9cGTTz5Z9HVr4uVjNhG2a9cutZ/dV2lr3147Np2l\nmc2A8BrH+vG8xTI6p81ZseOGRMws9cYbb3jZhjPzPdgWoK5J1mTO9jx27NigjU3SadnJY8RMtrG+\n9VnYdvXq1Rg9enTR8xg8eLCXec2yWdLCqT1s9QQ2N9l70IUXXujlmAmMOeqoo7w8Y8aMoM2G2dcm\nXMwYyL4OFQYvhBBCCJEBPQAJIYQQIneUxAQWKzzKKnI2Q1hiWV/TVJ9WBZYW+WXfn5ax1n4um+I4\ncshmgo6ZwMopE/SGwirXmLe/VdWKuuWZZ54p+ro1LbNZitf3rbfeGvQ79dRTvWxNmFx0lte+Nbdx\nW2yvp73HRhryMavQbQQcF/S12cHTsJFT1iRYCqruE1kjrmJRYLUdORPj3HPP9fKsWbOCtieeeGKD\nxo5VBLDwWrFFQ+uSzz77DHPnzgUAfP/73w/aLr/8ci/zvmEzom3jiDJrzuT3xQqKXnLJJV4+55xz\ngn6/+MUvvDxy5EgvH3jggUE/m4G/NrEmQOu+kEZNMp5LAySEEEKI3KEHICGEEELkDj0ACSGEECJ3\nlDwTtLXLsS0yFh6cNZtrWphssfdVkbWacczGzH4GPXr0CNpiFeobkw+QaBhw6gG2p9uw57T9cswx\nxwTHP/7xj7183333BW3sO7R8+XIvt2/fPvWcGOvnwXuT/R9sZm9+34ABA7zM4b8A8OKLLxYdu9hn\nV/HYY48Fx+znUiqq688Q68/3nMMPPzxoY7+RSy+9NGg75ZRTMn32lVde6WX2N7vooouCfrvsskum\n8WoD/l2w1cXrklatWuGss84CAPzjH/8I2jg9AZ+j3YdcAZ7XPWf4BoDWrVt72frI8Rq45pprisoA\n0KZNGy+zX+fvfvc7pMG/cbHUBFmx3yurr15NPlsaICGEEELkDj0ACSGEECJ31LkJjFVxsSKRHJLL\najkgVOPHsremFXSMFWHl87Nq+rTimrFwfnt+sYJ+QpQC3oNsosqqWrZcddVVReUYViXP58F7zt4v\n+JhD6WNZ5LMSy2LNmXm5kCRQehPYRx99hFGjRgFYN30A3/u4GLHN/Mv3T/4uLAPA7NmzvXzttdcG\nbRz6zIU2hw8fHvT761//6mUuqJp1bdSUmNmP7/G2YG99YSsGjBs3zstcUNsWeOY0DPy9ODweCH+v\nYteG05LErg2b3mLmy5qEn9vfVja32UzQaWkn7D3Fru0sSAMkhBBCiNyhByAhhBBC5A49AAkhhBAi\nd5TEByitBIUlluKabYTW1sfhsB988IGXbWr/rCHtDNtYrZ/Bxx9/7GVO121tj3zu1ufH2neFKDV3\n3HGHl4cOHeplXs9A7YezMnaP1MReXxuwHwZXvAdCnyi+5+y1114lPy/m888/x/z58wHA/1/FsmXL\nvMx+VHxPBEI/D74Pdu7cOeh32mmneblnz55B2/PPP+9lruw+bdq0oN/AgQO9zH5E1n+J74ul9sth\nn5JDDjmkpJ+VlV/+8pfB8f333+9lLmthf6v4d5J/k+w1ZF8c+7vD/m08vvWH5TVlU1wwG3qviP0e\n29/7NB+gmC9vVqQBEkIIIUTu0AOQEEIIIXJHSUxgnIXTqkGzmqUGDx7s5VWrVgVtHBbPnxULied+\nsarxrM6zJrUWLVp4uW/fvqmfxepoe058HkLUBWza4Wrotko477OsWYBjxFJP8HEsjDatzard+TgW\nVn/ooYd6+fbbbw/aOLXFd77zHS9zhey6gLMHZ4VdAQBg4cKFXuaM3Pw6EF4rXhtAaPbitWGzSfNa\nsSY2pi7D0dkEdt1113mZK7DXNTaUnK89Z9C+4oorgn7jx4/3sv0trG323ntvL++3334l+5yY2YzX\nHZBeMaIm4ffrnMcGjyCEEEII0cDQA5AQQgghckdJTGBr1qzxckz1bYueMdZjviHBqjn7/WPfWYhS\nE8s4yxEg1lTCcPSYzUDMsJq7tqPKYrCZ2Zqxe/XqldrGJrALLrigRGdXGlq1ahU9zhsc7dcQ5pJN\nsyxbZs2a5eWJEycGbVOnTvUyF7kFQjMo/z7ZKga33XZb0c+1biMbup9j5tBLLrkkON5hhx2K9rPu\nNTVBGiAhhBBC5A49AAkhhBAid+gBSAghhBC5oyQ+QFylePvttw/aOExywIABqWPEQuRrI/ytlHBY\n6Lx584K23Xbbra5PRwgP76trrrkmaON92759+9QxyqW6dhqx+wOn0OBQaSD8XnXpsyRKy//93//V\n9ynUGvx7an9bTz755JJ9bm3/5sbGO/DAAzONEUt7kxXtciGEEELkDj0ACSGEECJ3uKxFQgHAOfc+\ngAXr7Shqk62TJGmz/m7VQ3NZb2g+Gw+ay8ZFrc+n5rLeyDSX1XoAEkIIIYRoDMgEJoQQQojcoQcg\nIYQQQuQOPQAJIYQQIneU7QOQc+4r59xk59x059xDzrnN1tP/Lufc4II8yjnXt27OVGTBOfcr59wM\n59zUwrymJ4Gq/tiDnHNP1NZ4Io72ZuOlFPs0y5xrXZQGzWecsn0AArAmSZJeSZLsDOBzAD+o7xOq\nwjm34RmYcoRzbg8ARwDokyRJTwAHAni3fs+qEudcSZKBNnK0Nxsh5bxPRfXRfK6fcn4AYsYA2NY5\n19U5N73qRefcz51zv4290Tl3snNuWuGv1asLr/3AOXcN9TnLOXdTQT7NOfda4Wn571U3VOfcaufc\ntc65KQD2KMF3bMy0B1CRJMlnAJAkSUWSJIucc/Odc79zzk0qzNGOAOCca+qcu7MwD687544qvN7V\nOTem0H+Sc25P+0HOuX6F93SPjHOWc+4x59wIAC/U3WVolGhvNh7S9ukVzrnxhXn6hyuk8S38lX91\nYU5mOef2LrzexDn3gHNupnNuGACfcts5d6tzbkJBK/G7+viSOULzuR7K/gGo8Bf6YQCm1eC9HQBc\nDWB/AL0A9HPOHQ3gEQDHUNcTATzgnNupIO+VJEkvAF8BOLXQpymAV5Mk2TVJkpdq+n1yynAAnQub\n6hbn3L7UVpEkSR8AtwL4eeG1XwEYkSRJfwD7AbjGOdcUwDIABxX6nwjgRv6QwgPRbQCOSpJkTmQc\nAOgDYHCSJHwuohpobzY60vbpTUmS9Cto/JqgUqtQxTcK++siAL8pvPa/AD5JkmSnwmtc/+dXSZL0\nBdATwL7OuZ6l/EI5R/O5Hsr5AaiJc24ygAkA3gFwRw3G6AdgVJIk7ydJ8iWAewHskyTJ+wDmOud2\nd861ArAjgJcBHIDKyR1f+OwDAHQrjPUVKm/OopokSbIaldf1PADvA3jQOXdWoXlo4f+JALoW5IMB\nXFqYg1EANgXQBcAmAIY456YBeAjAt+ljdgLwDwBHJknyznrGAYDnkiRZXmtfMl9obzZCIvt0P+fc\nq4V9tz+AHvS2Yvt3HwD3FMacCmAq9T/BOTcJwOuFcXgPi1pE87l+ytn/YU3hLz2Pc+5LhA9tm27A\n+A8AOAHAmwCGJUmSFFSBdydJ8ssi/T9NkuSrDfi8XFO4dqMAjCpsvDMLTZ8V/v8Ka9ejA3BckiRv\n8RgFk8pSALuich18Ss2LUbkeegNYtJ5xBgD4eIO/VH7R3mykFNmn30flX/d9kyR5t7AHeW6L7d+i\nOOe2QaWWt1+SJCucc3dhw9aJWA+azzjlrAEqxlIAbZ1zrZxz30KouivGa6hUy7Uu+AucDODFQtsw\nAEcVXnug8NoLAAY759oCgHOupXNu69r+EnnDObeDc247eqkX4unhnwXwI7JN9y683gLA4iRJvgZw\nOgB2eF0J4DsA/uScGyK77i8AACAASURBVLSecUTto73ZwEnZp1V/PFQ455oBGJxhqNEATimMuTMq\nf3ABoDkq//D40DnXDpXmU1EiNJ/rp5w1QOuQJMkXzrkrUXnzfA+VfyHG+i92zl0KYCQqtQFPJkny\naKFthXNuJoBvJ0nyWuG1N5xzvwYw3Dm3EYAvAJwP1XLZUJoB+JtzbgsAXwKYjUq1bNqP5P8BuAHA\n1MI8zCv0vQXAI865MwA8A6PFSZJkqXPuCABPO+fOjowjahntzUZB2j5dCWA6gCUAxmcY51YA/yzM\n4UxUmlOQJMkU59zrqFwb76LStClKh+ZzPagWmBBCCCFyR0MzgQkhhBBCbDB6ABJCCCFE7tADkBBC\nCCFyhx6AhBBCCJE79AAkhBBCiNxRrTD41q1bJ127di3JiXz99dfB8Xvvvefljz8Oc9a1atXKy23a\ntCnJ+QDAihUrguOKigovN2/e3Mvt2rUr2TnMnz8fFRUVrrbHLeVclppPP12b/3DVqlVB28Ybr00N\ntNFGa5/vmzVrFvTbZJNNSnR2cSZOnFiRJEmtL9qGPJ8NFe3NxkUp9qbmsn7IOpfVegDq2rUrJkyY\nUPOzimAfci6//HIvjx07Nmg744wzvPzDH/6wJOcDAA899FBwfPvtt3v5sMPW5ny66KKLSnYOffv2\nLcm4pZzLUvPWW2sTOz/zzDNBW8uWLb286aZrk5LuuWdYN7Vjx44bfB6cQqKQa3G9OOdKkremIc9n\nQ0V7s3FRir2puawfss6lTGBCCCGEyB31mgn6Bz/4gZdffPHFoI1NYtbExNqhG29cWxC8c+fOQb/t\ntlubBbxFixZeXr48rIHJGqbPP//cy9a80r59ey/feuutXn788ceDfkOGDPFyt27dILKRVaPyv//7\nv15+7bXXgrYvv/zSy5999hnSOOecc7w8ZcoUL3/yySdBv3322cfL1157bdDWpEkTL3/11dpSVGyG\nE0IIUZ5IAySEEEKI3KEHICGEEELkDj0ACSGEECJ31LkP0IgRI7w8b948L/fu3Tvox/43NkR+1113\n9fL777/v5Tlz5gT9OLKMIzamTp0a9PvGN9ZehtatW6ee07Jly7y8zTbbeHnlypVBv5/97GdeHjZs\nGEQ2svoALVmyxMtbbrll0MY+XN/85je9bOfonnvu8TKH1dvw+BkzZniZ1wkQ+p/x57JvkBBCiPJE\nGiAhhBBC5A49AAkhhBAid9S5Cey5557zMmfItCHLbIr44osvgjY2U7FZgk0oQBiazKYMa6LgLMGb\nb765lzkbNQBsttlmRT+rU6dOQT8237300ktB28CBAyGKw6ZOzuIMhCamd955x8tNmzYN+nEYPJtA\nbSZoNp2xKZbNZkA4zz/5yU9Sz92erxBCiPJGd20hhBBC5A49AAkhhBAid9S5CWzRokVe5oKiMRMY\nm7JsXzZZWDMHm00Ym6mXTVacCZhNXnZ8NnnY8+MIJpnA4rCJyUb7MRw9yKYtNlnGxrBrgcfg9WTN\nrT179iz6HiCMRttqq61Sz0HmMSGEKD90ZxZCCCFE7tADkBBCCCFyhx6AhBBCCJE7Su4DZP0h2N+G\nK7SzDITZeS3sp8H+N6tXrw76cUg0+wpZPw8+R36PPXd+36abbpp6fuwDNGvWrNR+IrxWNgSdGT9+\nvJfZ32aLLbYI+r311ltFx7b+XJxBnGG/NAA46qijvDx8+PCgbbfddit6TjYdgxBCiPJDGiAhhBBC\n5A49AAkhhBAid5TcBMZZdoHQrLRmzRovW9MDZ+q1JquPPvrIy5wJ2oY6symCTWrWRMEh92wCs/3Y\npMKhzda8wths0iIkawHUkSNHFn3dmsAOOuggL8+dOzd1bDaB9erVy8uTJ08O+vGaOu6444K2rbfe\nuug52TQLIjvz588PjhcuXOhlpZAQQtQm0gAJIYQQInfoAUgIIYQQuaPkJrDFixcHx9/61re8zGYk\na25i84LNtMzZf/l9NgqMTVv8Wfw6EJrYuFCqNWVwlFL79u29bDME83m0atUqaGPTS5s2bZB3eG7Z\nnGlhcxZn6x43blzQr2XLll7mtWGjDAcNGuRlNrOcfPLJQb8//vGPqeeU1Xwn4jz00ENevvzyy4O2\nQw891Mts7tx5551Lek733HOPl7fffvugrX///iX9bCFE3SANkBBCCCFyhx6AhBBCCJE79AAkhBBC\niNxRch+gDz74IDhm35kPP/zQy6NHjw76nXrqqV7u0KFD0MZ+RVzJm/13gPTMwtbXhPtxGLzt17Zt\nWy+z74mt9r3TTjt5mTNfA8Cbb77pZfkApYeMjxkzJjhetmyZl9n/w66vFStWeJlTKdjMz5y5efbs\n2V7muRPVh9Nc8L6w6SB+/OMfF23r1q1b0G/q1KlePu+887w8duzYTOdj/QLvvPNOL1dUVARtnJaj\nWbNmXrb3n8ZKLO1HjBtvvNHLffr08TLfL4Hwnsn3vp49ewb9OnbsmOlzs/KnP/3Jyz169Ajavvvd\n79bqZ4mGhTRAQgghhMgdegASQgghRO4ouQnMmh44izNn97X9Jk6c6OV99tknaGO1OIfGWpMXq+M5\n9N1mjGazF2eMtuHtHJrP2Z9fffXVoB+P0alTp6BtypQpXt57772Rd9LU7ByGDITqeZ4vm2aAzaBp\nGb5tP+b4448Pjn/60596+brrrks9d4XEV5JWCHb58uXBMRet7dq1q5djZhO+R9j1sd9++3n5iSee\n8PKwYcOCfmzmsvvvzDPP9HKpw+zLEZtuJC0txfPPPx8cn3TSSV5m05a99pxlne+ft9xyS9CPzaD9\n+vXzMhcfBkJztc0g/sILL3h5wYIFXub5B2QCy4rd17wGeL66d++e+r5yvC9KAySEEEKI3KEHICGE\nEELkDj0ACSGEECJ3lNwH6JxzzgmOuVr3ypUrvcyhlEAYrsqh4wCw6aabepn9fqxvD4fhcrkLa8/k\nMdg2zf5KAPDaa695mdP3W98QDuu97bbbgjYuBZJHrJ9BWhj88OHDg2P29eHry2UxgHCe09IgAOuG\nz1dx+umnp57fUUcdFbQ9+uijXi5H+/aGwP5z9rvFvmvafO6yyy7BMZcsmTFjhpc5dQEQ+n3wnP3o\nRz8K+rGv3a677urln/3sZ0E/9u3hlByWNJ8zYN1SOg0JnlcgvEdan5+ZM2d6me93XDoGAJ566ikv\n8/zZ69SlS5ein2XL1PDxu+++6+Xx48cH/djfyJ77CSec4GVOmzJr1iw0VmrD34ZLDl155ZVeZj89\nAHjxxRe9fOSRR3qZfSY35DzSuOmmm7zcq1evoG3gwIHVHk8aICGEEELkDj0ACSGEECJ3lNwEZuFQ\n8qFDh6b2Y1W1zQrM6u60sFsLq36tGpjNMs2bN/eyNZNwP1bh//73v890DiKuEuX0BjasdZtttvEy\nZ/9mcygAdO7c2cuszrXZZW327ip4fQLAyy+/7GXOTt4YiJlD0q5PbXHNNdd4+YADDvAymxWBMCMz\nm1DatWsX9GPV+L777rvB58frtCGYvOx9kI9ZTjNRAsAzzzwTHF9//fVevuCCC7xss3WnmZWWLl0a\nHPM1ZdN106ZNg368LjldhV2vvDZs+gpev2xG40zxwLrmvHIk7TeuOqZpdg1gk/Njjz0W9GNzITNt\n2rTgmNMH8DW1v9U1SfXCKXAA4Ic//GHR8zj66KODfjKBCSGEEEJkQA9AQgghhMgdJTeBWfVdminK\nqpk5aoRVnUCo6uMxbLQGRwbEVPr8Ph6bI8KAUJUaw0Y6MTEVdB6IzQNHftn1wNFzrM61c87FL9lU\nZgtaclZh/qx33nkn6Hf55Zennu9ZZ53l5bvuuiu1X11RtddiqnDej7G5WLJkiZf//e9/B21PP/20\nl0eMGFHt8wSAAQMGeJkjdnhsINzDaaYRIIxSipnAeG9yMWYgXDucMXjRokVBv6pIJxuBWJ/Y+yzP\nLV83zsANADvssIOXf/e73wVtHInLWfHZHA0Ap512WrXPlyOAn3322aCNM0azGduayjjrsK0kwOY3\nnid7X6kLE1jV3MSKzcb2bE0iqex97LLLLvMyrwc2KwNhtBe7eWy++eZBPzadcTUGm/2bqyRwJK+d\nB470tue+1157eZldI6ZPn44NRRogIYQQQuQOPQAJIYQQInfoAUgIIYQQuaPkPkDWfsk+MDEfBOv3\nw3CGX668brOBsr0/zW/IngePZ23OsczCaeM1tgzBNYHnwfpAsZ8OZwO3WT7Zd4Ezfts5sbbqKlq3\nbh0cz5kzp+j5cRoEIPTtsSHyo0aN8jJXID/iiCOKnkNdYdd31jV40UUXeZmznttrwmGvHKIKrFvZ\nOwt///vfvXz//fcHbXyN2f5vs7TffffdXmZfPc48D4Q+H6tWrQra2J+M7yXWX2G77bYDEPoM1RVp\n2X7tvZTnj+eL0wUAwP777+/lJ598Mmjj681+PuxvZUm7hhb2GznxxBODNj5mP4+bb7456Pfcc895\nmf0CgdBvi+8XNtN4XVA1T1n3od2/vM4qKiq8bH1lli9f7uW33347aOP0IJwpnf2tgPBeyHvZXrcD\nDzyw6Lnb+zHvN96XtmoD+3hyhm8g9OE6/PDDvWzTLLCfWlakARJCCCFE7tADkBBCCCFyR51ngmZY\n3WbVpazStG2skmb1oA2NZXMWv8eqGHl8Dn+16rztt9++yLdYl9ooSteYiIX+cxZtVpGyihwIVbhp\n5jBgXbNllnPi9WBNCbym2FwHhFmouSCkNa2ccsopmc5pQ6muqt3So0cPL997771erjL5VLHtttt6\n2Ya9XnrppV62IbZp8N5k9TwQquH5+nNoLAD07t3by5xCwxZx7N+/f9HxLHxPsBnh27ZtCyD7WqsJ\nVWsya7bfW2+9NThm8xXP66BBg4J+bEaybS+99JKX2fQQuw/y+cXCvrPeI9ksbtMR8O+HNYnyHuR7\niXWtsOkxSon93UkL/WZTFhCma2BzkDX3s/nRXvtvf/vbXh49erSXOTQdCDOsV61zYN17GldjYKwZ\nivczpz6we4d/x216CU67wIVy2cwLhObBrEgDJIQQQojcoQcgIYQQQuSOejWBxXjvvfe8bKMw2LTF\nWPVbWhFDa+ZIM7fFosXYu92qA7MWaG2sxK6bhaOsWFVts25zJBKbOGbPnh3044gXNn/YiJ2sBS7Z\nJGpVzhxBU5Pop9okSRJvDrQqZFYbx8wN5557rpc5GsuaRq644gov77777kEbZ/Xl8ex8jhs3zsuc\n7dfu7Z49e3q5X79+XrYqdDZncbTehAkTgn58HqySB0IzK69hmy24yhxUSvN2dYvR2nsQmwTZNGLN\nmVx02n7PPn36FG3jiB1L1kz3sWvHa2jIkCFePvTQQ4N+XITVRnlyFn9e//b8Sm0CW758Oe655x4A\noXkYAM4++2wvc+STjbpkMxV/T2vO42zYNpKKzWocYWvXA9/vuACu/U1Ly7hvqyDY4rNVLFu2LDhm\n85W9N/NnTZo0ycu2YHZNkAZICCGEELlDD0BCCCGEyB16ABJCCCFE7qhXH6CYHfiVV17xsrUJcugz\n2+qtbZrtmdxm7cDcj30LbKVx7sc2TGt/53NqzNXfs2alZR5//PHgmH0L2AeIrzUQhmFyyKsNm+a1\nsWDBAi9b2zR/Fp9vLHttt27dguM77rgjtW9d89lnn/ns1ra6Ns9TrKI6+xSwL44Nded+NlXEeeed\n52X2O7CZevl9O+64Y/A9GPb7GD9+vJc7duyINDhseO+99w7apk6d6uUDDjggaOO1yHufK6YDa9dL\nOaW4sCHBab4XNnsup3Kwmc457Jwzp8fg67Z48eKgjeeFfTyt7yZ/7iOPPOJlm1aBsxNbnzD+zeC1\nZv3jYvu9NmjevDkOO+ywop/Fc5a1sjn7Idp75Lx587xsP4v3Fb/PjsH3SZ5Lnjv7Pr5/2t9q3vfs\n22Tni+8psX3Fv+N2LU+cODH1fWlIAySEEEKI3KEHICGEEELkjno1gcVMJRzeHDNZscnDmsDSwttj\nZilW/XMopR2PsxFzuChQXqrxUlKT78kh1EAYqs4hmTZsmueFwx85Wy0QZqnl9TVy5MigH68HNgVZ\nU03aOcSIZcAtFRtttJFXI7NJCQivCWefteG2rFLmEF0bKsuq9gsvvDBoO/roo73M+yJW/JALN1oz\nzLRp07zMZktrKuPxeQ5tUUgeY8yYMUEbm1PZVGgzEFdlyC2V+WT16tV+XQ8dOjRoa9++vZf5u9h7\nFZuVeN1asyeHGM+cOTNo43XMKQKeeeaZoF9aAVRr2kozNVtzCK9ffo+9J7zxxhtetvuWj9ksY8Ov\n/+d//gelxDnnP/+kk04K2uzxhsLf2f628n7h62HvVWn3OPubyWOwXJ+/fTYbeBakARJCCCFE7tAD\nkBBCCCFyR52bwNIKT9qIK85qaU1bsYJ7TJp5zKqueYy0IplAqOpjE5ilullcGwOxgqIcvTN58uSg\njTOWcj9bDJUL4nExTqv25EyhHFkwcODAoB9nIuZ1YqOaeK1xRtkY9aEG3mijjbx5gyNsgDAai6Pp\nWrZsGfTjyCGeF2t64EyyXMQRCM1ebL7iiB0gjGbhbLzW3MQqeY5YsiYwPua1aDPicpSLnc8lS5Z4\nOVZYssrcVKp93qRJE5+h2c4lH3ORVi5iCYSmMr6GtqglZ+C115TNY3wNuIAxEJqxOcrK3tMZHs9e\nX143PEd2vnifxUzXXAjUXs8zzjgj9X21wcYbb+xNzfba8zGvS2tu4t+rWD/G3oN4bnkf2THsb14V\ndo7Sfnft6zwey3at8VqJfS8ew5rVuXhrVvL3Sy2EEEKI3KMHICGEEELkDj0ACSGEECJ31LkPUJrt\n0NpHuQKuDV3k8F32AbFZKG323yqsbZrPid9j7aj8PluFnGHfgPoIia5N0my4QPg9Y/4Qv/jFL7zM\n9mcgvB7cZm31HPrO/WyWXrb3c1g3Z4UGwirYHBpu7c/sE2T9WMoJ9jWwc8H7JZY5nf1yeP+xLwgQ\nhh/bNcF7lcPn7Z5L89mxvl8cEs2+TOzjAoRzyN/L+hqwH4n1gWJfGc46zGMDa33LSpXlfeONN/bX\n4cQTT8z0Hnuv4+/C4eh2Lvna23swr332sbH3sJUrVxYdz1Za533L68FmZ+bxuF+sSridC17znCLA\nZu23a6CU2LQT9ljUPdIACSGEECJ36AFICCGEELmjbExgNtSW1bGxkD4OhbP9WG2bFk5r38dZptkk\nAIThiGnqYSBU1VoTQTkWR7Vzwt+Hv2fWsN9rrrkmOOaQ83333TdoGzt2rJf52tiQV1aF8/nZgovW\nXFrF7bffnnpOHJpv1dL8WTakupxwzvm5steOUzbwfNqCmVzwkFMIxEJbLXy92GTF4dZAuIfZjG3H\n5vFioc48b7xO7frg+4zNnsymM74ncNi/Hb9csPcVzq7Mck1ChYVorJTfThZCCCGEKDF6ABJCCCFE\n7qjXYqiMjbTImrE2Zopis0nMBMZjcASCjTrg9/F4bDoAgNatW3s5lqm6XLCmQ5sNuQobacJZgP/2\nt795+frrrw/67bHHHl7mbLsAsOeee3qZszjbDM9p5omYOeKxxx7z8pFHHhm0PfXUU0XfY8fj+Ytl\nguZ+9R3pd+yxxwbHbFbi4qB2Lth8OHfuXC/bYpW89m1Wdb5GvP84kzcQRtSxqdmacjjai9+T1Qxl\n1yx/R7u/2SwXM8cKIRoH0gAJIYQQInfoAUgIIYQQuUMPQEIIIYTIHWXjA8Qhs0Boj7d+Buxzwxlr\nrb2ffTHYD8JmpeWQX/YBsmHwPAZ/lvWlYB+ghsjDDz/s5e9973tetteNfUEY6zMxY8YML++2225B\n29SpU73cvXt3L0+fPj3ol5YR1l77YcOGedn6/TBpWcItvIZsZluG10a5pTpgfxnOnG2zaDdGYj5F\nQoh8Iw2QEEIIIXKHHoCEEEIIkTvKJhP0vHnzgmMbospwEbxu3bp52RY+ZNhsZotactg3j81ZoYEw\nFJtNHjZkm2kIYfA2W+7FF1/sZTY/sqkwhjUv8by88sorQdvuu+/uZQ69tp/F4ctc3PGYY44J+h19\n9NGZzjEt1N+aTNh8ZAt1Mg1hnoUQQqxFGiAhhBBC5A49AAkhhBAid+gBSAghhBC5o2zC4K3vBZed\niPnisK8QV4YHQl8RDrO3afnt+6qwvix8jlx2I1b6IFY5u1zgkhFAeK222morL/P1BMLrwyHx9juz\nH431lRk/fryXO3Xq5OW+ffsG/bhMxvz58708dOhQpMG+R7xmgHXLO1SRthYAoF27dqltQgghGhbS\nAAkhhBAid+gBSAghhBC5o2xMYDYsmc1N1izRtm1bL7N5xZo5+H08nq0u/8knn3iZTSPWXJNm6rLV\n5ZmsVavrkzPOOCM4/s9//uPlmTNneplTBADpmbZjoeRNmjQJ2vh9c+bM8TKHvQNhhu6RI0cW+Rbr\nYjOIM2lpFux7OAN1LA0AmwNjnyuEEKI8KP9fZyGEEEKIWkYPQEIIIYTIHWWjq581a1ZwzCYPa65Y\nsWJFUdmayj744AMvr1q1ysuzZ88O+i1dutTLkydP9vIee+wR9GMTEJvH0rIKNxSsWeqFF17w8sKF\nC7181113Bf2efPJJL3OUViySKiu20OpTTz3l5UGDBm3w+Nttt13R13ndAWGm8R49eqSOV24FUIUQ\nQsSRBkgIIYQQuUMPQEIIIYTIHXoAEkIIIUTuqHMfoLSwcJv5t6Kiwssc9g6E4e5t2rTxsvXDWLRo\nUVF5t912C/pxxuAFCxZ42Ya9b7bZZl5mXyHOlmxpCGHwMTg7869//eugzR5XYf25uMo7+2wBYUoC\n9rdJ89GpLbjifb9+/bxs1xqfX6tWrVLHU+i7EEI0LBr2r7MQQgghRA3QA5AQQgghcoez2Y6jnZ17\nH8CC9XYUtcnWSZK0WX+36qG5rDc0n40HzWXjotbnU3NZb2Say2o9AAkhhBBCNAZkAhNCCCFE7tAD\nkBBCCCFyR70/ADnnWjnnJhf+LXHOvUfH0RoTzrlBzrknUtpud859O6XtIufcZua1S51zpzrnjk57\nn1g/heuXOOd2zNh/vnOudZHXVxfrHxmnWv0j45zlnOtQG2PlBefcr5xzM5xzUwv7dkAtjDnKOdd3\nQ/uI6qG5bPiUYg5p7NTf3IZIvScvSZLkAwC9AMA591sAq5Mk+UstjHtOsdedcxsDuAjAPQA+oaZD\nAJwA4BoATwB4Y0PPIaecDOClwv+/qedzqQlnAZgOYNF6+gkAzrk9ABwBoE+SJJ8VHmYbdnG8nKK5\nbPiU8xw6576RJMmX9X0eTL1rgLLinNuXNEOvO+c2LzQ1c8497Jx70zl3rytkL+S/KJxzq51z1zrn\npgD4FYAOAEY650YW2pujcpFsB+C7AK4pfE5351wv59y4wtP0MOfcljT+Xwv9pjvn+tftFSk/nHPN\nAAwE8D8ATqLXBxWu1zrzRH2aOOeeds6dW2Tci51z4wtz8LvI519f+MvnBedcm8JrafO3zuvOucEA\n+gK4tzCvTdI+S3jaA6hIkuQzAEiSpCJJkkXOuSsKczbdOfcPsy+vds695pyb5Zzbu/B6E+fcA865\nmc65YQD8tXfO3eqcm1CY29T5FxuM5rLhkzaH851zv3POTXLOTXMFDb1zrqlz7s7CHL7unDuq8HpX\n59yYQv9Jzrk97Qc55/oV3tM9Ms5ZzrnHnHMjALxgx6h3kiQpm38Afgvg5yltjwPYqyA3Q6X2ahCA\nDwF0QuXD3CsABhb6jALQtyAnAE6gseYDaE3HxwK4siDfBWAwtU0FsG9BvhLADTT+kIK8D4Dp9X39\n6vsfgFMB3FGQxwLYrSDH5mk+gK4AngdwBo21uvD/wQD+AcAV3vsEgH2KfHYC4NSCfAWAm9Yzf7F5\n7Vvf17Kh/CvsxckAZgG4ha5pS+rzbwBH0vW9tiAfDuD5gvxTAHcW5J4AvqT927Lw/8aF9/fUXGku\n9a9aczgfwI8K8g8B3F6Q/wjgtIK8ReF9TQFsBmDTwuvbAZhQkAcV7sF7ApgIoMt6xjkLwEJeQ+X0\nr8FogAC8DOA659yPAWyRrFWlvZYkycIkSb5G5cR3LfLerwA8Ehn7UABP2xedcy0Kn/Vi4aW7Ufmw\nU8X9AJAkyWgAzZ1zW1Tj+zRGTgbwQEF+oHBcRWyeHgXwzyRJ/lVkzIML/14HMAnAjqjckJavATxY\nkO8BMDBt/jLMq8hIkiSrAewG4DwA7wN40Dl3FoD9nHOvOuemAdgfQA9629DC/xOxdh3sg8p5Q5Ik\nU1H5gFrFCc65SahcAz0AyEevBGguGz6ROQSKz9XBAC51zk1G5UPopgC6ANgEwJDCnD+EcJ52QuUf\npUcmSfLOesYBgOeSJFlea1+yFql3H6A0nHPnA6gyhxyeJMlVzrknUfmXxsvOuUMKbZ/R275C8e/0\n/+2debwV1ZXvf8shDlFRBBVBBkdQBAyIcR6DxDg8h25jEofYHdPmxajpNmonvkFNG595iSYd2yTm\nxdaEGDu2HZxxwgFxQEUGFRUFRVREkYiRBGW/P07dzW8vbm3OvdzhnFu/7+fDh3VO7VOnTu3au+qu\n31prLw8hfJL5urEAzmzHYfoiSpUtqmRmvVGbHHc3s4DaX3jBzFoW3cr10xQA481sQij+hOBdA7gs\nhPDzNh5SZfuiqynG1mQAk4sJ8+uo/eU/JoTwutVi+zakj7RcC2XjNWJmQwD8E4A9QwhLzOw6ty/R\ngagvm59W+vDUYlNrfWUAjg8hzOF9FP38NoCRqHnel9PmN1Hrtz2wKlaybD97AfhwrX9UJ9GwHqAQ\nws9CCKOKfwvNbIcQwswQwuUAnkTNE9BePgCwKQCY2W4AXqAHpLgthLAUwJIWbRvAyQAepP2cWOxj\nPwBLi/ZV5QQAN4QQBoUQBocQtgPwKoD91/A5oCZZLQHws1a23Q3gdKvFF8HM+pvZVq20W6c4BgD4\nEoBHyvpvDf0a1JU+ywAAIABJREFU+1+sGTPbxczYIzcKQMskuLjotxNW/+RqPIRav8HMhqN20wWA\nzVCbQJea2dYAPt8hBy5WQ33Z/JT0Ya4S9d0AzqK4rj2K93sBeLPw2J+M2h+0LbwP4AsALjOzg9aw\nn4amYT1ArXCOmR2MmtQxGzXJau927usXAO4ys4UAbgdwF227ETXX37dQG+ynArjGamnzrwD4KrVd\nbmbPoOYuPL2dx9JTOAnA5e69m4v3f79689U4G8D/M7P/E0L4TsubIYRJZjYMwNRibC0D8BUAi9zn\nPwQw1sy+V2w7sXi/rP/K3r+ueP8jAHuHED6q49irzCYAflrIvx8DeBk19/v7qGXTvYXaHyxr4t8A\n/NrMngfwPGpueoQQni3G2AsAXkfNWyg6B/Vl81PWh0eWtL8EwJUAZpjZOqj90XokavFDN5vZKajd\nHxMvTgjhbTM7EsCdZnZ6Zj8NTeWXwjCze1ALvn2zjZ+bjFrA9rROOTAhhBBCdBrN5AHqFEIIn+vu\nYxBCCCFE11J5D5AQQgghqkfDBkELIYQQQnQWegASQgghROXQA5AQQgghKocegIQQQghROdqUBdan\nT58wePDgTjoU0Rrz5s3D4sWLbc0t20Z39eWHH6ZFQd99991or7feqstx3XXXTdoZrZ368cflCwp/\n6lOrFj7+85//XPqZFStWRHuXXXZZ02F3GE899dTiEELfjt5vI45NPue5/mxWesLY5CSYv/71r8m2\njz5aVQLr05/+dLTXX3/9tf5e/i7+HgDo1avXWu+/PXTG2GyUcbly5cpo8/n2537jjTeONo9Rni+B\n9BrYaKPGWzO63r5s0wPQ4MGDMW2ayt50JWPGjOmU/XZXXz75ZFpH7frrVy3/teWWW0Z7003TYsz8\ncLR48eJo+xvpwIEDoz19+vRoL1qU1k185513ov3AAw/UdewdgZnlqrK2m0Ycm/xw629q3J+dic9y\n5dfrrLN2DvDuHpt8U/O/JbeN4QeR1157Ldk2e/bsaO+1117R3mabbdZ4bGti/vxVw+C5555Lto0f\nPz7a9T4o8+8F2te3nTE2O3NctuU3L1u2LNrcr2wDwIgRI6K9wQYbRPvNN9MyeVtvvXW0R44cWfq9\nPN668o+eevuy8nWARNcyefLk5PWsWbOizQPk1VdfTdrxAOYHoC222CJpxzfazTdftTZtnz59knbz\n5s2r/6BFAk9qd999d7LtpptuijY/WL799ttJu+XLVy0t9A//8A/RfuaZZ5J2PMk///zz0R46NF0J\n59prr402T+J+0uXX/uGo2bxSfLz13gy//vWvJ6//8pdVS/TxDQ9I++yqq65q9XuB1Duwxx6rVkDw\n3gV+6OWHHv/Hzl13rSrM//7770f76KOPTtodf/zx0W7vA2Azk/tdc+YkS3Lhgw8+iPaLL74Y7Rkz\nZiTteP7kuZX7AUjHL4+jUaNGJe0afUz1zCtDCCGEECKDHoCEEEIIUTn0ACSEEEKIyqEYINGl+Cyw\nIUOGRPu9996L9nbbbZe0Y02fs7Y4hsG34xig3r17J+34cxwP1AgZG40AB6n+7d/+bbKN+3Dp0qXJ\nNo5L4HPOWUR+/xwX5mO/GA465pgGAPjiF78YbY5POOOMM5J2F1xwQbR9fEJ3BWy2l3oDui+88MJo\nL1myJNm27bbbRttngfEY5H72AbF87s8888xo77333kk7Dpzl7/XxeRxTxFlJHF8GpEHb5557brKt\niks8zZ07N9oLFixItg0aNCja3H9+/uQ+4rnQZ3FywgrHB/mA785KFOgo5AESQgghROXQA5AQQggh\nKockMNGlcAomkNbj4VR3L5Xx66222irauQKHLJN4lzh/7qGHHoq2JLAap512WrS9bMLpsV7aYimG\nZSRfroClTy5rcOihhybtNttss2j/6U9/ivYmm2yStCuTr+64446k3cSJE6P96KOPJtuaQfZicqne\nr7zySrS51ISXllkC8b+f99m/f/9WPwOkUtR//Md/RJvlKyCVurhfP/nkk9LvZZtlMwCYOXNm6T5Y\nsuFtXsrpSbAUxVIWkJY4GDBgQLRvuOGGpN0tt9wS7SOOOCLahx12WNJu2LBhrX6XLy/CpRAasWCi\nPEBCCCGEqBx6ABJCCCFE5ZAEJroUljuAVKbKZRdxRhG7tL20xftgl75327ME5iWeqvLLX/4y2lwF\n2Gfp8PnPZR9x3/i1hHidNnaNe+mT+y0nZfDrDTfcMNp9+6bLAbGMdvPNNyfbuLJwM5BbTuS+++6L\nNvcRn3cgPVe5NfZ4nPbr1y/ZxjL2rbfeGm1fFZglbpZG/DXE60yxzOfHOl9TDz/8cLLtoIMOKv1c\nM8Png2VOID2/vAwQkEqfLGe+/PLLSTteS5GzAhcuXJi0Y/mYJVDORANSue2kk05q9f3uRB4gIYQQ\nQlQOPQAJIYQQonLoAUgIIYQQlaMyMUCcnnnNNdck23bbbbdocxruMccc0/kHVjF8bA/HE3AsAK8W\nDaRxOhy34CnT+31KLrfz31VVrr766mjz+fEpxgzHa/jPMbmqy4yPa+Hv5vgE347TfDmWxa+SzrFC\nPgW42WKAcvA1zefax1jxOfXniuHz5itG87nn8gS5dhy/42OAeHzzfMEVvoH0muJUfyCNAcrFSjUb\nHPfDsTdAOsftuOOOyTZe9X3s2LHR3mabbZJ2nMbOcVX8GQB44oknos3xRYccckjSjq+bKVOmRHvn\nnXdO2u2xxx7oDuQBEkIIIUTl0AOQEEIIISpHz/ENroHHHnss2n4hxSeffDLaP/3pT6N99tlnJ+2u\nvPLKNn+vdzlfeuml0eZU45///OdJOy8tNDOcysxpyEAqP7I73ksmXOX0jTfeiDanfgJphVl2CftU\nbq5e6hd3FKkc4qUM7s+ctJhLkef+LaseDaTyBW/zKdt8vCyh+Oqz3M5XreVUX191uNngdGQ+h74c\nAaeje2mZxyP3Ua6qOn+Xb8dyCLfzEhVfX/y9fKx+/5yK35PheZAr4vttfhyNGzcu2jxHctkC347l\nZy9tcZ9x//OC1kBaKZ6vPT/n7rTTTtH2Vd47E3mAhBBCCFE59AAkhBBCiMrR9BJYvQvdcQR6r169\nkm0siXH2wFVXXZW0O/nkk6M9evTo0u9iVyTvDwDefffdaHNV1lNPPTVpd+CBB5buv9lgt+imm26a\nbONKvezG9rILnyt273q3+L777httdp/7a4Pd/T2pUmxbOP3005PXfC75fL/++utJO3ah+ywSzvTh\nPswttFnvApVlC1x6WLp56623km1cidxfiw8++GC0uWptM+ClLZYRWHbmcwOkcrJfKJXHCEuHuYrR\nftwyLG3V2+ec+eXlFT5eXxW5J8Hjks+vlw5ZbvLzIs+tfE4HDRqUtOO+5cwvrh4NALNnz452WeVu\n/zqXnblgwYJoDx06FF2FPEBCCCGEqBx6ABJCCCFE5dADkBBCCCEqR9PHAPnYAoY141dffTXaXmNk\nbZrjG3w1zTFjxkT7hBNOiPbAgQOTdj/60Y+iPWTIkGQbx0ywNr/llluW/Irmh6s4+xgEjgXhOAbf\njmM+uMqtT1fm6qiDBw+Otk+H5n7uSSUH2sJZZ52VvJ40aVK0+fz7eALuJ1/mgeMSOM4jN055W65i\nNPcTxzsAabwKp+b7CsH8W/x3PfTQQ9Futhggn1bMMVw8xnzZCJ4jd9lll2Qbj7lcZXDeP8d21Fv9\n248/HqtPP/10tH2f83XIcZc9DY5bKyv3AKSxPb1790628T2Ox4A/b9dee22r+/CxdAzPFT4WjecD\nvkb9/M4lYRQDJIQQQgjRiegBSAghhBCVo+klsFy12QkTJkR78803j7ZPwWM3Haep+yq37CK+8847\no+1lgGHDhkWb04KBdHE/dlNzGiAADB8+HD0Fds16NzbD7lPvqudKzuxa534FUrcwV/r1EiP3eS51\ntyfjFyDka5AXBvXpx9tvv320/YKMPEZ4bHp3fVkqNbvqgXQM8mf8dcRyMrvuBwwYkLTjbeeee26y\nbc8992z1mJoBloqA8mua5xygvIozUL5gqZ9zc/JmWbtcGnxZxWgv13A4gR/fPPZZCm9GeP5k269o\nwHOh72fuM74n+XvcH//4x2hzCRd/Dvk+lktvZ7mNJbBRo0Yl7XISW2ciD5AQQgghKocegIQQQghR\nOfQAJIQQQojK0fQxQDm+//3vR5uXv/ArkpetYMx6q9/GZdi9Bs4l9n0KMevbrLHzavUAMH78ePQU\n+Pz4dHSG9WO/XAmnvjNbbLFF8pqXAOAVhn2sCvetXxJBADfffHPpti996UvR9qtwcwwPx/34uJGy\nJWx8Ox5zuXgVvq44lumuu+4q+RU9C04j9nDMh49X5HIQuRRmHps+nb0s9T0X58Op735/fBx87H65\nC4438/uYPn16tJs9BojjbXh+8zFAvM2nmfvYuhb8/emwww6LNt/jfDse2zyX5r6X4418O96H78t6\nY8zagzxAQgghhKgcegASQgghROVoSgmMXWTsHuNqz0CaWscpk17aYldvzhXH7diF71NOfRXOsn2w\nu3/q1Kmln2l2+DzmyhbwNu+y9WnxLfhq3c8++2y0WQLz6Z7sVq53ZWpRo2wcAKkUlSt/UFYV2PcF\nyys5GYaPI7daedm+gXxF6kZn7ty5yWuWkViu8CUNdt5552j7sVl2HnPnjT9T1sf++Pw1xFIOb/Pt\n+Hv9Mc2ZM6f0uxsdn8LOIRssHfn7HY8xXx6k7Nr29y4OBygbe0D5ePPXEEtnXNHat2NplkvRAGkJ\nlI5GHiAhhBBCVA49AAkhhBCicjSFBOYj0DkzgN15F198cdKub9++0eZsB+/Oy7nWGXb7sQvXZxHx\nNp9Zwb+FXb2TJ08u/d5mh/vIZ++wNMXyic8uKsseYxc+AEyZMiXa7PpnCRRIq5J617rI47MoyyjL\n9ALKF7714yWXLcTw/nPVxpmcHNtsLFy4MHnN8mOuQjDPpV7yKpMB6x0v9Z5fXy2fZRnO8vTXBs/b\nXiL3i8M2E/6887XNUpEfh/48llGvZJXL2OXzzePSz+8vvvhitDk70/clj1lfFVoSmBBCCCFEB6IH\nICGEEEJUDj0ACSGEEKJyNGwMEOuKOS3y1ltvjfZ1112XbOMUadZLvU5Zllafa8fxJV57ZZ09t9I4\n69svv/xysu3uu+9e7bh7Al7fZj2az6mPR/BpnS3suuuupd/F6ZQ+foTjw5ot5bm74VRqPzbL4gt8\n3F29Kdb8mmMhfBwKxwrVGwvRk/Dp7T7GooVcDJ6Hzz2f71wsFm/zcx/3H491X/KCx2Munot/o6+K\n7GOimgnfd9xHZVWyAWDLLbeMtk8lLytV4Mcbn28e274vebzlyk5wzBLPub7Sf9mK952NPEBCCCGE\nqBx6ABJCCCFE5egwCYxdn2W2h13kXobIyRKXXXZZtC+55JJoDx06NGnHrjl24ebSLnPHW7YYo3cj\nsqvXp/+WyW3sEgZWVTT2aavNSM4tXraQnk/PLFuwdM8990xec19wf/l+KFukT6wZrujK5SWANI2W\n3elesipbQNNTJpH6ccHHweUlqoIvFcJjrqwaL5D2Ub0VtH1/8XdxP/s5jeF2fqzzHFHvApp+Xmnm\n0hb+2ubfwufey548p+X6KHfv4te8fy9F8j2Uj9efd/4uTm/3i/eyfCcJTAghhBCiE9EDkBBCCCEq\nR4dJYB29kODEiROj/Z3vfCfZxgvdjRw5Mtq5qpbsFveuXm7HLrucLJfLSMnJK2WLqPpsmhb3YzO7\nclvIZZBwVsOSJUtK25Vle5VlhwHp9ZBz7ysLrEaZPOthN7mXOXiRWe4b72ovk5pzLvSclMqvc9JL\nvb+xGfDZUwzLCCx7jRo1KmnHfeRlibKK+znZhLODyjLRgHS+82OTf9fWW28dbS/D8O/KLVzNx8HH\n16h4mZKvbR4fOek+V3md50UvKzK5cc7Zybw/Py5Z2uL7rL+GeP+vv/566TF1NPIACSGEEKJy6AFI\nCCGEEJVDD0BCCCGEqBydXgnaV6S89957oz19+vRo33bbbUm7WbNmRduv+M2pz6xt+lRQ1jdz6e1M\nWaq7h/Vor8Wz/ur3wcfE3+X18pZ2zR6nAOT7iFf65RWc/TndbrvtWt23T48vq1CaK1WQ08HF6pTF\nJABp7An3RS5Nm/fhxwGPH+4z3598vfSkVd5zcMych89pWbwGkI/T4ba5c1rv3FqWfu3jRng8ciVh\nH/PCK4372Cbe56JFi6Ldv3//uo61O/F9wr+Ff7MfA9tss020+f4JpDGwuTTzsn72cyRX3uYVDaZN\nm5a044rPHM/l4834GvIxUJ1JNWYKIYQQQghCD0BCCCGEqBztlsAmT56cvL744oujzWls7H4EgG23\n3Tbay5Yti7ZPcdx///2j7WUgdgnytpybjj/j23EVWXY/ehcjp27mKtlyaqmXCMoqoPK5AIC9994b\nAPC73/0OPYl33nkneV0mJXq3OC9sm4Ndvbw/X2aA3cBVrBzcGvWmiOcWLuSxxRKYv755/7lSD2WS\ntP9e3uYr5JZ9b7Pz/vvvR9ufD56fuFLvoEGDknY8Rrxcz/vIyVxllYo9PjW77DM89jkVf/jw4Uk7\nvs/4OZ2PiWW0ZsCn6peVTuEUc7/NV5Mum+P8ueHzzWPWL8rN55vvd6+++mrSjsuXjB07Ntp33XVX\n0m733XePtr/WXnjhhWj71R7WFnmAhBBCCFE59AAkhBBCiMrRJglsxYoVMXr7zDPPTLaxS4wze9gG\nUjcrR4h7F2ZuITaG3bS5TJ8cLEXxd3nXLLsRWSrj7CV/HH7hVXZN5iSaAw44AED5IqDNBPeDzwZa\nsGBBtHNZcT4TsAx2C7NE4M9jR1curxIso7DMDKQVXfm8+v7kbWUZYUA6X+QqH/O1U++ins1OTtYv\nm2cOP/zwpN2MGTOi7aUXnsdyVdV5//wZ35f8Od6fl+/4OPg37rTTTkm7m266KdpeYi3LJGsG/BzJ\n8yef6/322y9pV3YfA8plZi978rjMjSPeP8+zvo8Yfhbw8h33l5+POzMrTB4gIYQQQlQOPQAJIYQQ\nonLoAUgIIYQQlaNNMUDvvPMOrr76agCrpylzPE+9lSY5/dzrtKx7+m2sEbKG6atYclwN7y+XMsrV\nRv1v5LTLt956K9pcgRMA+vXrF22vdXIsCh8T66jAKo21p1e1LdPnfSpk796969rfgAEDov38889H\n269mzPp2M6wQ3RWUxXz4vuD4Eh9DwOcyl95ellbtxxyPEe4zH9+Xi1Gp9xiaLRYsV6mefxu38zGJ\nHJvlx1i9MUAcD8LtfMyW79sW/BzJ++A518e8cPq1jzHjeE2fwt3o+Hgu/i08j+VitnLw/Y/v2/67\nORaJ79UA8MYbb7T6vdtvv31pu759+0bbx2zxteGr/udigNeWnn13FUIIIYRoBT0ACSGEEKJytEkC\nM7PoTvXSBUtH7JrzchO7N1lGyrmjvXzBblzen3cBlqVaelmJXbXssvOu04MOOijal1xySbTvvvvu\npB3/llxVT3YDduUCcN2J7yOWU/ia8ueNF9zLsdVWW0WbK4h6iZFfN8MCid2Jl7L4+vZjqV4pKrdQ\nLVO2zcs/fO30hNIR9ZCTInnO5PktJ4HxfAykY47lEF9pm8ccb/NSDvcLL5L92muvJe1Y2uI50kuU\nfLxcSRhIf79PK290/L2QxwpLUb66M48BLxHzOCpbMNq/zi0+zO24v7zsyZX/WebiqtBAei37kjCd\nOZ7lARJCCCFE5dADkBBCCCEqR5sksH79+uGiiy4CsPqilvfff3+02TXpo8zZlcYuPO/CZckqt0gf\n275dmTzG7lff7tvf/na0zznnHNTDDTfckLzmLDDvOmQXNLufyzIkeho51yy7QX3WgXenl8EZJfwZ\nf23w+c5l04h81qSXVMqytjxlFYO9zMHteH/+e9tT+bfZs8D4Gvay1NKlS6OdW3SZf3OuInPZgpxA\nei9g2fmzn/1s0q5MKvMSK1cX52P32bb82i+S+dJLL5Ueb6Pj50g+Pywx+VUWpk2bVtf+eez4c8/j\niMeHDwdhidFfUwzf41nq3GWXXZJ2Dz30UKvHB6wevtCRyAMkhBBCiMqhByAhhBBCVA49AAkhhBCi\ncrQ7+OEnP/lJ8prjWa688spoX3/99Uk7TjNfsmRJtH21R0598/EfnCbH3+tT8Pi7+DPf+973knb/\n/M//jLWBV1QGUq3T67kc58KVMd9+++2kXYtuXVYxt5ng2AKfusm/j9NVt91223Z91+DBg6PN2r8v\npcAoBqhG2bXWltW0y1Z29/E1ZenyudXgmVzsAo+xngzHXuTiMPj8Pv7448k2jiNZsGBBso3PKe/f\n9wn3Be/Pj3XeB3/GV4KeNWtWtDkV/5577kna8XzvY6A4jsTPrc2MTxFneI7Lpbdz//n7U1kMny9L\nwnM1jzcf88uxnHyv5tR5IF813scEdSTyAAkhhBCicugBSAghhBCVo92+f5/ezS6y8847r1Xbw6nz\nTz/9dLKN3aDz589PtnFaHLsEvavsm9/8ZrQvuOCC0uMoI1dZmvnBD36QvOaq2LmF7dgNOHr06Fb3\n3Wypua3Brk/vcmWZil3a3kVaL5xqy+fOn0f+Xn9MIoVTqoH609bZ9vJa2QK03nXP7nr+3pzL3C+M\n2VNZtGhRtHfcccdkG8+RnFbuU8lZnvbzJ8sc3F++L8sk7txY522+5AVLrizr+HR2/q45c+Yk2/i6\nafY5lOfFgQMHRtunpj/33HPR9pWxy6RpP954G/e5DyFgWbFsZQa/D/4dubCD3OoJHY08QEIIIYSo\nHHoAEkIIIUTl0AOQEEIIISpHu2OAyuJh2sIhhxzSqt0o1PsbTz311E4+kuaGYzLKYj+AVKfmOKpc\nO6/vs1ad06Y57iCXIl8l6k2Dz53/sjGTW/E9p/Fz3EfuOiqLPerJlMXPAem1v3jx4mj7/uIYSp+2\nzuMiV46D442GDBlS2q5sfPv+4vIgfD3548vFG/Hvb7YyFxyzBQCvv/56tEeNGhVtHxs7b968aI8c\nOTLZxmOMz4c/93weuRSJXz6K23Ff+rgk3sYxa/465GPyy2x1ZoymPEBCCCGEqBx6ABJCCCFE5Wgu\n36Boeriyq4fdpbmKp+y29e5RrirLblUvzbALVhJYHi+B1ZtmziUgcjIXp+L6vuC+zvUT9y+77pt9\nxfccXD3fyyZcEZ3LGHh5gasze9mZ2/L59VX7WYpiKY7T6D18vL4dfxf3F1fYB1IZ1EuiPM/kZLlG\nZPjw4clrPn6utOxlqWOOOSbavho6jwOeF/34YOmQx68vhcErNfD84OdjnsdZivUlDY477rho+2s5\nFzaxtsgDJIQQQojKoQcgIYQQQlQOSWCi02FXOmcCAOniiVxRNid35CSwssqjXvpgGSe3kGSVKJOH\n/Plhtzm7tQFg4cKF0WZ3vc824X2wBOalSpbO+Nrx+2OZgKvIc4YSkJdgm43ddtst2l6+4gWav//9\n70fbZ0SxjMJjEUilqZdeeinaEydOTNqx3Mb99+KLLybt+Nxzn48bNy5px33L/eePj2WZadOmJdu4\nkvy+++6LZsJXxvavW/CrJzC5BURzixtz/7EU5edZ3gfP256yBXC9nMmVzFle62zkARJCCCFE5dAD\nkBBCCCEqhx6AhBBCCFE5FAMkOh1emfioo45KtnEsQO/evaN98MEHl+4vV6GbV7tmXdnHgnC1WY6l\nqDJlFXPHjx+fvL777rujzdVngTQmiGMDfBwRxxdwSqzvW47V4pgiv6o5p2Jvv/320c7F/DR7Sjyn\nS59//vnJtkceeSTaRx99dLQ5tbm9XHTRRWu9j46AY4DOPvvsZNt+++0X7WarBJ2D50sf58Nxkz4u\np6ysiE8x5/HG+/PnkOM6eS718UUcv8THUBbXBKwe39cRq06UIQ+QEEIIISqHHoCEEEIIUTkst8jd\nao3N3gEwf40NRUcyKITQd83N2ob6sttQf/Yc1Jc9iw7vT/Vlt1FXX7bpAUgIIYQQoicgCUwIIYQQ\nlUMPQEIIIYSoHHoAEkIIIUTlaIgHIDP7b2YWzGxone3nmVmfVt5v06JObW2f2c9pZrZtR+yrp2Jm\nW5rZ9OLfW2b2Br1e++IkosNZmz4zs4PM7LaSbdea2a4l284xs43dexeY2ZeLeaLVz4nOxcy+a2az\nzWxG0f97Zebho83sgpL9HGRm+3T+EYsyzGwbM7vRzOaa2VNmdoeZ7dzGfWxuZt/orGPsKhriAQjA\nSQAeKf5vRk4DoAegDCGEd0MIo0IIowBcA+DHLa9DCH8FAKvRZdekmfWcCmmdQD191s79/n0I4Tn/\nvpmtC+AcABu7TYcDmATgvwHQA1AXY2Z7AzgSwGdCCCMAHAbg9bL2IYSJIYQftLKf9QAcBEAPQN2E\n1ap/3gJgcghhhxDCaAAXAti6jbvaHIAegNYWM9sEwH4A/g7AF+n9g8xsspn9wcxeMLPfmivdamYb\nmdmdZva1VvZ7npk9WfzF8r8z3//j4i+b+8ysb/HeKDN7rPjsLWa2Rdn7ZnYCgDEAflv8ZdR6yU3R\nKma2o5k9Z2a/BTAbQD8z+4qZzTSzWWb2L0W79czsffrcF83sWrJnmdmzZvYAtf+RmT1R9NffF+8f\nVlxXtwGY2eU/uAdiZgeSZ+gZM2tZznmT1sZvcf7HFPYyM/u/ZvYsgO+i9ofEA9SPmwH4FICdABwN\n4Irie3bIjNPJZnZV0W6WmY3t2jPS4+gHYHEI4S8AEEJYHEJYWGw7y8yeLsbrUCB6xP+1sK8zs2vM\n7HEANwH4BwDnFn2zfzf8lqpzMIAVIYRrWt4IITwL4BEzu6IYLzPN7ESgdn8u7o0tfXxM8bEfANih\n6Mcruv5ndBAhhG79B+DLAH5V2I8CGF3YBwFYCmAAag9qUwHsV2ybB2AwgHsBnEL7Wlb8Pw7ALwBY\n8dnbABywclU5AAAgAElEQVTQyncHAF8u7P8B4F8LewaAAwv7YgBXruH9yQDGdPe5bJZ/AP4XgH8q\n7B0BrGw5f0V/zwPQB8D6AB5E7a/P9QC8T/v4IoBrC/t5AFsX9ubF/98AcEFhbwDgGQADUfvrdRmA\ngd19HprpH/dZK9tuBbBvYW9S9FVu/MbxUozBv6V9zQPQh14fB+Diwr4OwAm0LTcef1nYBwCY1d3n\nr5n/FX06HcCLAK6mcz4PwFmF/Q0aj6fRXHpdMf+uu6brSP+6pC+/hZon179/PIB7AKyLmjfoNdQe\nfNcDsFnRpg+Al1G7rw7uCeOq2z1AqMleNxb2jUhlsCdCCAtCCCtRG4CDadsfAfw6hHB9K/scV/x7\nBsDTAIai9hekZyWA3xf2bwDsZ2a9ULuJPli8/+8ADih7v+5fKXLMDSFMK+y9ANwfan9lrgAwAWs+\nz1MAXF94eVqu6XEAvmpm0wE8jprLtuUamBpCeK1Df0G1mQLgR2b2LdTGSMuCRbnx28InAG7O7Hs8\ngDv9m3WMx98BQAjhIQCbmdnmbfg9ggghLAMwGsAZAN4B8HszO63Y/J/F/0+h9f4FgP8IIXzSmcco\n1pr9APwuhPBJCOFt1P7w3BO1h51/MbMZqDkc+qPtclnD0q0xEGbWG8AhAHY3s4Da02cws/OKJn+h\n5p8gPd4pAMab2YRQPJ7yrgFcFkL4eRsPSVUhu4cP19wEK1Hr1xY2JPtrqD04HQngaTPbo2j7jRDC\nfbwTMzuszu8TJZjZf0ftnAPAESGEH5jZ7QCOADDFzA4vtuXGbwvL13BzHAvgzHYcph/LGttrQdFH\nkwFMNrOZAE4tNrX0cVn/AhpvjcRsACe0of2XAfRFTZlZYWbzkM69TU13e4BOAHBDCGFQCGFwCGE7\nAK8CqEcb/h8AlgD4WSvb7gZwehFfBDPrb2ZbtdJuHay6GL4E4JEQwlIAS0ifPhnAg2XvF/YHAFri\nHsTa8TiAg62WgbQealLXg4UXYYmZ7WS1QOlj6TPbhxAeA3ARatdEf9SugW8U+4CZ7aL4rI4hhPCz\nsCoYeqGZ7RBCmBlCuBzAk6h5XNtLHEtmthuAF+gBKW5bw3gEgJYYhv0ALC3ai3ZQjB32oI9C+5d3\n0FzZvdwPYAMzO6PlDTMbAeB9ACea2bpWi4U9AMATAHoBWFQ8/BwMYFDxsR7Rj92dBXMSgMvdezcX\n7/9+9earcTaA/2dm/yeE8J2WN0MIk8xsGICpRdzlMgBfAbDIff5DAGPN7HvFthOL908FcI3V0nFf\nAfDVNbx/XfH+RwD2DiF8VMexi1YIISwws4tQ+2vTANwaQri92Hw+ag82i1BzuW9QvP9jMxtStJ8U\nQphlZs+jFvMzvbgGFgE4BqIzOKeYHFei9hfmnQD2bue+fgHgLjNbCOB2AHfRthsB/LKQ2k5A+XgE\ngOVm9gxqcWSnt/NYRI1NAPy0kBE/Ri0O5AzUPK5t5VYAfyiCac8KITzccYcp1kQIIZjZsQCuNLPz\nASxHLZbrHNT6+VnUvKXfCSG8ZbXklFsLr980AC8U+3nXzKaY2SwAd4YQzmvl6xoerQUmhGhIzOwe\n1JIc3mzj5yajFmg7bU1thRDVpbs9QEII0SohhM919zEIIXou8gAJIYQQonJ0dxC0EEIIIUSXowcg\nIYQQQlQOPQAJIYQQonK0KQi6T58+YfDgwZ10KOV88MEHyeu//GVVfbU+fVZbjLjDeOedd5LXG220\nqozMJpts0mnfy8ybNw+LFy+2NbdsG13ZlytXroz2Ous0xjM3x76ZdfjpLeWpp55aHELo29H77a6x\nWS8rVqxIXr//flzWDZ98sqoOoo9J3HTTVaVGumrM1UtPGJtiFZ0xNhulL997771o/+lPf4r2xx9/\nnLTj8cfjcr310kcFHovbbLNNhx1nR1FvX7bpAWjw4MGYNm3tMkvbc+N54IEHktevvPJKtP/u7/5u\nrY4nx9VXX528HjFiRLT322+/TvteZsyYMZ2y347oy3r56KNVZZH4IbI74YHvB3dnYmbtLSCXpTP7\nsy2JEmVj+o033khe33bbbdFesmRJtP2D0sEHHxzt3Jgrm1f8sXfkw25PGJtiFZ0xNhulLydMmBDt\n++5bVRx/8eLFSTsef/yg5B0N++67b7TPO6/xSgDV25eN8ee4EEIIIUQX0jB1gPivQAA4/vjjS7et\nv/760Z4xY0a02WUHpHILyzDsDvS89dZb0V60KC0czfvbcMNVy6E88cQTpfsTqdfnr3/9a7KNz3f/\n/v2jnfM6sEdp+fLlpdvefffdaPfu3TtpN2jQIIi1J+dRYS/PL37xi2Qb90ffvqs81TxOgdQL++KL\nL0b79NPT4s71ena6S/oUoiOoN5xgiy22SF4vXbpqJZhevXpF28tXH364atm2T3/609GeO3du0m7S\npEnRvuiii6Lt52OmEceePEBCCCGEqBx6ABJCCCFE5dADkBBCCCEqR5fHAJVpf+eee27y+oUXXoj2\nTjvtlGxbd911o/3kk09Ge7vttkvacfr85z//+WhPnTo1accxKsuWLYs2p+D6733ppZeifd111yXt\nTjvtNIjW+frXv568vuuuVYt9b7755tH2MUAbbLBBtDlTwceM8PXF/e/bLVy4sC2HXWn8mOVz6bfd\ncsst0b7++uuj7bO7OH6B4w623HLLpN0OO+wQ7fvvvz/ao0ePTtqNHDmy1eNrlLILQnQEuev55Zdf\njraf73i8cAmKrbfeunT/HFPLMa9AGkM5b968aF944YVJu8suuyzaPFf44+uucarZQQghhBCVQw9A\nQgghhKgc3ZoGz26wOXPmJNvYxeYrMnPaLLvpOE0WSNP4Jk+eXNqurBCed8txCne/fv2izW4+QBJY\njlmzZiWvy6qIcrVvAHjzzTejzTKlT2ffbLPNos1u20YpwNiMeDky567m1HcuQ8D9BwBDhgyJNqfO\nPvjgg0k7Lo3AsuVPfvKTpN2//du/RftTn/pUtBvF1d5WWs55V6YL54pG5lKYeQ7m8+vbtadYZSOm\nTnc29RbvfPXVV5PXnI7O8yCQFiLlIrBcNgRI73F//vOfo+3DS3gfnHJ/5513Ju045f6CCy6Ith+H\n3SVbN8dsIIQQQgjRgegBSAghhBCVo1slsPPPPz/aXvJgNzZnAAFpNhZLG96dx2uZsGziXYz8euON\nN462ryzNrno+BpbaAODmm2+ONle0FmnlZyCtCMzn0Utj7MLdfvvto+2lLb5u2J4yZUo7j1i0RXoY\nOnRotLliux8HZVXVee0vIHXJc0V4L6VypdtcZelmkcDKzvnMmTOjzeeX5zegfeuU5fo5t43nwvbs\nv73f21PJ/WaugH7PPfck23i9Lr9219tvvx1tDvnwi6Gy5Mxrbvrri++FPG/7BYu5Avxjjz0W7f/6\nr/9K2pWt2uC3dTTNMRsIIYQQQnQgegASQgghROXQA5AQQgghKkeXxwCxvscVmVnDB1Id38cAMRy/\n42NxfLxJa8cAANtuu22r+/MxRfw51kB9u5/97GfRVgxQil8NnuMHOA6M43eAtGIpf8Zr2GWxJV5X\nnz9/frS1MnzH8fzzz0f7vffei/aOO+6YtJs9e3a0OW7IxwJyKi6POV+lneP9cjFAzZBWvXLlyvi7\nb7rppmTbxIkToz1ixIho+ziJhx56KNoDBw6MNlcBBtLz5ivuc/kRPqce3ifP1f6YOKaS980V4IG0\nz3JzP/efn1d4XuBrypdU4ZiaRuWBBx6I9iOPPBJt31983jg+DEjvjTy3+jHA1fP33XffVt8HgAUL\nFkSbY4r8uOR5m+eGSy65JGnHKfxKgxdCCCGE6ET0ACSEEEKIytHlEhi7t9idd8oppyTteJHTnIuU\n3aq+ojOnWHMKLVdx9p/jhRm9K45d8Lw/n7rr3dZVh8/bokWLkm3snmdpyy+eyS5cTn33LnKfrtmC\nX2STqwpLAqvB8hDbOZf0r371q+T1gAEDor3bbrtF20tRPAbZve4lTXb/77rrrqXHxGm1//iP/xht\nL6XmFnJtFJYuXYpbb70VADB9+vRk26WXXhrthx9+ONq8qDCQyr+jRo2Ktq8ezFKJXySaU6k5jXrx\n4sVJOy4dwlIZL2gNpGOQ23FqP5COb577/VhnmY+rjgPpb2aJled3IF3UulG54YYbos33Ki/7Mf7a\n5nPH86w/p3w/5WvDlzr46le/Gu3XX3892n6VBZawuWI0y2HdiTxAQgghhKgcegASQgghROXo1krQ\nzPXXX5+85uyp++67L9nG7k3OwMotsMbuV+8eZNmE5RovqXHGxIUXXhjtb3/72xDlcDaQP6fsFvWZ\nBkxZNgi7+oG0j/i7fGVpn3Uo0nFRtsAlANx///3Rfuqpp5JtLF/w+ff74MUauS9YtgaAo446qtVt\nnIXiX5999tnRvuqqq5J2fBz1LjrZ1ay//voxM9VLD9OmTYv2E088EW1edNK/ZqnowAMPTNpxhXU/\nB48fPz7a8+bNi7Y/phNPPDHaLHGz/AGk8wBv83LIPvvsE22et728wmEIfl7h64szv1g2BFIpp1Hh\ncAAel34O22GHHaKdm0sZLznza/4uPzZY3uTPsFQKpKELLKmxbNadyAMkhBBCiMqhByAhhBBCVA49\nAAkhhBCicnRrDBDH6PgYAV5RnfVnANhzzz2jzbqnryLLGj/rmbnqsMxzzz2XvGZdlVM/RR7W/v3q\n7T7dvQXuL0+umi9v4+/yVcJ9Kq9Iya3w/eijj0bbl6jgWC2OLxk+fHjSbs6cOa1u82UMOG6A07J9\nOjen1XMcGF97QBpH5OeBelc172yWL18ezw+fQyCNneDzNnfu3KQdz5kzZsyIti/ZwdXyfbVuTi3n\nVb65dIWHyw5st912yTaeT/l3+Ur6DFcSbikN0No2f329/PLL0eaSKj42JvfdjQLPVXyf9PE2vKKB\nj5nkOB2+zv29r+w+6ctJ8HXI23wlaK74vssuu0Tbn3cuR+ArXHcm8gAJIYQQonLoAUgIIYQQlaPL\nJbCyCrNe8mA3Hbu+gdRNXla9Fiiv+upd3/zdvA/fTrJXx8NlB/wCfgzLm+zO9X3C/ZdbNDVXRbWq\n1LtQKEtMbHtYNmG5AgBee+21aHNKtP9edv9z2rOXzPk4uG99JeVDDjkk2o0qga233npRqvOV07mc\nA8te/rfw58o+A6QVtMeMGZNsY5lj5MiR0eYyCEAqR+6+++7RZukJSNPbJ0+eHG0voz799NPR5j7x\n9wiW+fwipyyx8P79PaJMgm8kylLa/RzGcqa/Z7JMlQsv4LCBspR4vz+2vbTF8zuPbX4fSCVRSWBC\nCCGEEJ2IHoCEEEIIUTn0ACSEEEKIytHlMUBlsQW5mIOyZRCAVMP1afC8TEJZSnxuf768ehmNWlK/\nUWCt2sdu8DnmmBGvEbOOz+mUvBwAkJbA537w39so8R6NBMeR8Pnx8RUcszN48OBkG2v5Q4YMibaP\nB+G+efPNN6PNMSRAGofCyyL4mC5Ot+WYF7/SOMcANeo4/eSTT+Kq5XwOAWD//fePNq8A72Mvhg0b\nFm0eEz51+pxzzom2j+3h+CtejmjfffctPSbu/yOOOCJp9+yzz0abl7846aSTknZlS3BwHBIAPPbY\nY9H25Q6YXXfdNdq8MjywemxaI8IlI/r27Rttf79j/D2J2/I9zo8BnidzcZI8/sriLv3+y8rNAOk4\nPeigg0rbdTTyAAkhhBCicugBSAghhBCVo2FWg8+5o316NKfdsSsul0bN7jzvimMZhmUApb13DFy2\nwFcUZXJp6yyDch/5FadZKuPrwUtgORm0qpS5qCdOnJi8Zjc8y5FAOpbY7c4yBJCmafP14aUMHoMs\nafvU4BbJCEglH04N9tQrcXc1H3/8cZSqWPYD0rR+Tv33cx+vFM7ngGUoADj00ENL98HSyw9/+MNo\n+3nxhhtuiDZLYH6ldZY2HnjggWj7a4jlvD/84Q/Rfv/995N2XLnaS+YLFy5sdX/+Oqx31fSuxI8B\nHh9c7dlLYDyn8XgA0vPD48OfN94Hz5l+PmZYUvOyGe+D7/H+fv/UU0+V7r8zkQdICCGEEJVDD0BC\nCCGEqBzd6gOut/Ksh12m7Or1rll227Fskqs6zdt69epV9zGJctjN6mUHdpHmJDCubMpuYE9ZZVf/\nvV46E+Vj0GeB8bjlir5A2p+DBg2KtpcvWJbhBRR91hZLmnx8XibgscoL3/rFVVk2yGWXdicbb7wx\nRo8eDSCt1Ayksg8vAPvggw8m7Vhi5EwvnwV2+eWXR9ufjyuuuCLanFl31VVXJe04W4wl7qlTpybt\njjrqqGh/61vfira/hvja4MwvL5Xx4qicLQiki6OyLOMlwM9+9rNoNLhKOlC+ooGH5z4vZ/LcmpN+\nefzmVkUo+4yHvyuXBeZ/c1chD5AQQgghKocegIQQQghROfQAJIQQQojK0a2rwbe3EiunLrK26TVG\n1qM5FoBjDoDy1cW9tsmrUW+xxRal39uoFWa7i3pXXmfdOteXfO559eLOOKYqUVYde9asWcnrz3zm\nM9H2cSMvvvhitLnPBgwYkLTjMcJxHlwN3LPddttFe8GCBck2jjPj3+HH8EsvvRRtjhNpJNZZZ50Y\nx3TnnXcm23bbbbdocwXld999N2nHr/m8TZgwIWnHqfTz589PtnF8zA477BDtk08+OWn3n//5n9Hm\nWBG+ToB01XiOxeJ5FUivDf4de+yxR9KOt/l9fP7zn4/2r3/962j7tO9cXEp34eO0eF7MVVbOpZnz\nOOA4Vx8PW3Y+/P74PPLx8dwMpPFcXI7A7y9XHqUzkQdICCGEEJVDD0BCCCGEqBwNsxiqT7Njl92v\nfvWrZBu77ThN1i8IyPtg26cBcvogS2C+iuyFF14Y7WuuuabVfYvV4f7KLeDH14aXqNjNyrKLT5fn\n72IpxKfH545DpJKCl6XYRe/T1lnO4tTpV155JWnHrnYuSeAXp+QUfJZQfHo79/sLL7wQbT82eVHW\nRpXAli9fHqswexmJf89zzz0XbV6QFEiv9ylTpkR7xIgRSTuuCswLlALAwIEDo/2b3/wm2lwhGkjT\n27lfHnnkkaQdj+FRo0ZF28vYXGmc5+Pbb789abfzzjtH+9xzz022sRTL14a//3gptRHwZSdyVZiZ\nMqkMKJ8X/fioN3yD76G8b1+KhqWyXPgLl7PpSnTnFkIIIUTl0AOQEEIIISpHw6wGmHO93Xfffcnr\nssrNHna/cZS5l0NYfmObK8oC3bdgW7PDfeSlTnaLsjvWS1ScXcDSSk4qy2V4lFWMFjX4vHKmEACM\nGzcu2lxxGEj7jTO/WKoGUhnt5ZdfjrbP0uEqw1xZ2svdPH/wgpc+Oyq3OGqjsOGGG2KnnXYCsPrv\n5GufKyPzgqRAeg6GDRsW7UsvvTRpt/fee0fbn5s77rgj2izL+KrLLHvxgrW//e1vk3bHHHNMq9/l\nqwCzLPfmm29G++ijj07a8bV2yy23JNv22muvaLdU1QZWr6zNMlqj4DPauM8Zn3HF7erNdvPzMd9b\nc/dk3sb78PP22LFjo83V2/287SvFdxXyAAkhhBCicugBSAghhBCVQw9AQgghhKgcTRED5CtjcluO\nL/Hp7ax7suboq9fy/nIaqF9htwzWRJUin+LPIZ9jPlc+zbl///7R5hWxvZbM+/jwww9Lj6Pe1NKq\ncvPNN0fbp8HzOffn+PHHH482VzH27TiOhMtL/P73v0/acYo0x+D5tNnDDjss2lwp/o033kjacRxR\noxJCiDFqPr2dYzseeOCBaE+bNi1pt+2220ab43K23377pJ1PaWd4bB5yyCHR9jFhHB/Ec+vuu++e\ntON4EI5t8nEjHPfF8ztXtAbSqt4+BoiP6dhjj422jyPyKeeNgI/74vPDfdKrV6+kHZcP8P3K6el8\nf/KxQWUxmbnK0nzP9MfeEssGpNeNj1HqrvlYd2chhBBCVA49AAkhhBCicnSrBFbvwqicCgmkUhe7\n0nzaelkFUC9L8XGUVcwEUheeZK76KXPhAmlfcqkC7xJll/5WW20VbS+tsMTG/eelN6XB5+HqzF4C\n48VR+/Xrl2x75plnos197SvEsizD6by+n9ilzmPTu+45lZ6rSXsZhmWTRmXFihVxzuOUcCCda7i0\ngP+d/Lnrr78+2j6coHfv3tH2FZm5gjSPJU4xB9JUcu6vs846K2nHEmZukVOWpebNmxft+++/P2nH\nC576itmcVs1ztZfRGnExVB4bQHrd87w4dOjQpN2WW24ZbR9CwHJZrjJ22X3N3+PK5DE/r/L8wFXY\nffma3D7qDT1pD7pzCyGEEKJy6AFICCGEEJWjKSQwL3OUufN8FljZd3n4u3PHwbIAZ6H4ipwihSWw\nXNYB96XP8tl0002jzRKYd5eWXVNeUuO+FKvD58dn2rHszAuPAqlUkhtzPFa5Xa5SeG5scuYQyxw+\nY8lLA43IuuuuGyUsv1gnV1AeM2ZMtFkiBoC5c+e2um3w4MFJO5aYfHbswQcfHG2+Brz0whV+WVLz\nchvvg+Wa+fPnJ+14Hyxn+mrBLNFxVWwAOOKII6LNC6PydQIAX/jCF9Bo+Ouc5zje5qurl1VnBtLx\nlgvfyK2swJQtLu7v1dzPfH1xpiaQyn4LFy5MtnVm5qY8QEIIIYSoHHoAEkIIIUTl0AOQEEIIISpH\nw1SCzsFVgIFUP2T90WunHD/Ato8H4c/lYg5Yi2XdWzFAefic+pidsgqgPlbDxy604NOEOT6lrPop\nUL/WXVVYh99nn32SbZyWOnPmzGQb929ubDJl4xRI+41tX6KCv5dTrDn1GkhjFHy8gi+j0Z20xFj4\nKslTp06NNqf0++ub42W4ErIfR48++mi0fSo9v+bj+OUvf5m04+uhT58+0fZjePz48dHm+KXLL788\naTd79uxof+1rX4v2yJEjk3aXXXZZtH2pFL5HcBwVVyYGVo8RawR8LCv3Lc9bvgQFz6W5ciM8Vvw4\nKvveXBo8274SNN8bhw0bFm2uEg+kJRiWLFmSbFMMkBBCCCFEB6IHICGEEEJUjoZJg/ewq8+71crS\nm73bL5cGXc/3evcgHy+7XHfYYYe69i1Wl564X9jN7t3AfhHHFjhlFkjd7j5NVOTh0gN8Hv045RRr\nn1bcHnISGMMueV8dlqUMni94kVQAmDRpUrS9RNMoEtj6668f0799dWaWEXi8+BRxTgM/8MADo82V\nugFg7733jrYfY1wKgb/Ly2ic7s7n1Mt3XOGZq4nvtttuSTtOneZ9v/rqq0k7nne9BMjXA98HfFVz\n/q5GgSviA+nx8zn1oSEsifp9lFVu9tJW2XflFgbnfeQqPPN140MheB++BEpnIg+QEEIIISqHHoCE\nEEIIUTm6VQLLZYZwNk+uejC7Putd2C7Xjrd59yB/l5flRDnsLvVSZFl1UC+BlckTXuZiFzy7Y3Mu\nV1GDJQp2r8+ZMydpx33oM1G4MjRXbPeUVV+vN9vEZ3BxhWQ+hr59+ybt2K3/3HPPJdu46nB3snz5\n8njOb7zxxmQbV3Xm6uicfQUAEyZMiDZLlj7Ti2UlX3V63Lhx0WbpjLPsgNVlpRZ8Ng8vWMvSE2d9\nAelY53bTp09P2s2YMSPaPhuUrw+eS/xiuI899lirx96d+LmPxwdX0/YLu/L58dIp37ty993ccTA8\nt/L87r/XV3xu7Xg8HSGr14vuAkIIIYSoHHoAEkIIIUTl0AOQEEIIISpHw1aCzlWRLUtVz8UKMblK\n0DmtlGMQePVakYcrMvs+4VRbPt8c3wCUVyzNxaBwHID/3py+XVU4tuP111+Ptk+P5mq6t9xyS7KN\nY7p4nObiDridjw3gz3Gqty89wcfE146PSeB4hXpjBruaddZZJ/4GjsMB0thITiX3K7nvtdderW7j\n8Qak6eK+tABX0eZYO18+gOFz79Pbed71lZsZTn3n1ep9ivXAgQOj7eOSOA2c0699Cr9fRb4R8OUD\nGD4Hvs95W25+47nU3wt5THC73CoLjB9vZfvLxYLmrq+ORh4gIYQQQlQOPQAJIYQQonI0rA7ALjHv\nzmM3cL0pfUy9n8m5yH3aZb2fqzpDhgxJXnN6OpcWKKv87PHVUDmllvvZX0OSMFeH0+BZ8mBJAkj7\nybu8cxWkmVwaLMNuc/7MaaedlrQ78sgjo/25z30u2iyTeOqtDt/VrFy5MkpTPo2fx8u9994b7T32\n2CNpN3bs2GhzivzDDz+ctONSBV4e4zR2XlDVLzD72muvRZvDBDhlH0jlMZZYvZTDv5GvQ59SzfKV\nL7nAi20eeuih0eY0ciCV2BoFX+KBpUnexqUfgPormddbeb2sVEVuH15G5WuIx7Lvc5Ys+f7e2cgD\nJIQQQojKoQcgIYQQQlQOPQAJIYQQonI0bAwQ4/VCXi22PUsaeN2TtUlOJfRpl/xdvvQ80564pJ4M\nl9v36aq8mjunOe+zzz517dvHeHCfsZbs4wcaUfvvbjiOgs+r1+S5n/x5rXeJi6222iraCxcujHZu\naRMecz/+8Y+Tdt/97nejPXLkyGjvuOOOSTuOm+nKVafbwoYbbohdd90VwOrxIBzL9jd/8zfR9nMV\nL/PBpSJ82Qg+V7fddluyjeOPOA7Mxz8OHz482rx0hV9+hq8jjt3zx8TfxXOzvzY4joivJwAYNmxY\ntHmJD7+i/IknnohGw9+fOHaK4618n3MMkF+ehMdfWUkRII2zK1tBvrXXLfh+4DIL3Cf1rnjf2cgD\nJIQQQojKoQcgIYQQQlSOppDA2EXuyVUZLqPe1D/vtmf3M39vW/ZfRThd1afBb7PNNtF+5ZVXoj1q\n1Ki69j1ixIjk9RZbbBFtlnS8u/jwww+va/9VgtPb2XXtV/Vm6chLkOyiZ6nMn39OR37vvfei7SVS\n/m4ef96FXpYS7Vey53T5etOGu5qNNtoortruV2/vTE455ZQu+y5RPyyBsUTlq6FPmjQp2l7e5TAS\nLneGJMwAAAdSSURBVP/gxyVTbyhHrsIzz+kHHnhgtH1ZEv6cL1XQmcgDJIQQQojKoQcgIYQQQlSO\nbpXA6nWxcWYBsHoFzBb8Imr8miPLfZR52cJxvsptzl3IKAsshWUHtjsCdqsCwOTJk6Ody3YQq8Nu\ncq72y5l6ADBgwIBoT5gwoXR/zz77bLS9jM1SFy+aedRRRyXteMzlFtrkbC/+zHHHHZe04+MYPXp0\n6bEL0V34asrz58+PNktgPpyAZX1f8ZvvZbwPX5G9bPHSXLY1b/PSG2fz8oLFPrOUZfDFixeXfldH\nIw+QEEIIISqHHoCEEEIIUTn0ACSEEEKIytEUMUB+xW+uPsvp6D5WgVNluaKq11hZ92Q9k9N4gVS3\nzK0GL1I4rdGnL9cLn3uO2fLxW2VxPz5+i9MufaXxqsLxVFdeeWW0/Xi54oor6tofVxlmO4df1bw9\n8DXg5w6eI3jVeCEaBR8nydXLOWbHV10+88wzW7UbkaOPPjp5zfPz8ccf32XHIQ+QEEIIISqHHoCE\nEEIIUTmsLVWLzewdAPPX2FB0JINCCH3X3KxtqC+7DfVnz0F92bPo8P5UX3YbdfVlmx6AhBBCCCF6\nApLAhBBCCFE59AAkhBBCiMrRdA9AZvaJmU03s9lm9qyZ/aOZNd3vqBpmtmXRb9PN7C0ze4Nety83\nXjQ0ZraNmd1oZnPN7Ckzu8PMdm7jPjY3s2901jGK+qG591kze9rM9lnzp0SjoXG5iqaLATKzZSGE\nTQp7KwATAEwJIfxP1269EMLHre1DdC9m9r8ALAsh/NC9b6hdkytb/WDHH4eukU6i6MtHAfx7COGa\n4r2RADYLITyc/XC6n8EAbgshDO+M4xT14+bewwH8cwjhwDV8TDQQGpcpTe05CSEsAnAGgG9ajdPM\nbKKZ3Q/gPgAws/PM7Ekzm2Fm/7t479Nmdnvxl8wsMzuxeP8HZvZc0faHpV8sOgwz27E4578FMBtA\nPzP7ipnNLPrmX4p265nZ+/S5L5rZtWTPKvrzAWr/IzN7oujPvy/eP8zMJpvZbQBmdvkPrg4HA1jR\nMskCQAjhWQCPmNkVRX/NpLG3iZndV3gWZprZMcXHfgBgh8LzUF8FRtEVbAZgCZDtO5jZRWY2x8we\nMbPfmdk/ddsRC0DjMqFbK0F3BCGEV8xsXQAtZTE/A2BECOE9MxsHYCcAYwEYgIlmdgCAvgAWhhC+\nAABm1svMtgRwLIChIYRgZpt3+Y+pLkMBnBJCmGZmAwBcCmAMgKUA7jWzIwHclfn8/wRwUAjhbeq3\nMwAsCiGMNbMNADxmZpOKbWMA7BpCeK1Tfo0AgOEAnmrl/eMAjAIwEkAfAE+a2UMA3gFwbAjhT2bW\nB7X+mgjgAgDDQwijuui4RTkbmdl0ABsC6AfgkOL95Wi978YAOB61vl4fwNNo/ZoQXYfGJdHUHqAS\n7gkhvFfY44p/z6A2+Iai9kA0E8DnzOxyM9s/hLAUtZvtcgC/MrPjAPy56w+9sswNIUwr7L0A3B9C\nWBxCWIGaxHnAGj4/BcD1hZen5ZoeB+CrxYT9OIDNUet7AJiqh59uYz8AvwshfBJCeBvAgwD2RO0P\nlH8xsxkA7gXQH8DW3XeYohU+CiGMCiEMBTAetTFnKO+7fQH8MYSwPITwAYBbu+vAxRqp5Lhseg+Q\nmW0P4BMAi4q3PuTNAC4LIfy8lc99BsARAC41s/tCCBeb2VgAhwI4AcA3seovHNG5fLjmJliJWn+2\nsCHZX0PtwelIAE+b2R5F22+EEO7jnZjZYXV+n1g7ZqM2jurly6h5ZkeHEFaY2TykfSwaiBDC1MIj\n0Be1eVR91xxoXBJN7QEys74ArgHwr6H1aO67AZxuZi2Be/3NbCsz2xbAn0MIvwFwBYDPFG16hRDu\nAHAuaq5A0fU8DuBgq2WNrQfgiwAeLAKjl5jZTlbL+juWPrN9COExABehFpfQH7W+/0axD5jZLma2\nUZf+kmpzP4ANzOyMljfMbASA9wGcaGbrFuP3AABPAOiFmmS5wswOBjCo+NgHADbt2kMXa8LMhgJY\nF8C7KO+7KQCOMrMNi/n1yNb3JroQjUuiGT1ALTr0+gA+BnADgB+11jCEMMnMhgGYWvPUYhmArwDY\nEcAVZrYSwAoAZ6LWmX80sw1R8x58u7N/iFidEMICM7sIwGTU+uHWEMLtxebzUXuwWYSajt2yjPuP\nzWxI0X5SCGGWmT0PYCCA6UXfLwIQgzNF51LE0R0L4EozOx81eXkegHMAbALgWQABwHdCCG9ZLQj+\nVjObCWAagBeK/bxrZlPMbBaAO0MI53XDzxE1WuZeoDbWTg0hfJLpuyeLeJEZAN5GLfRgaTcctyjQ\nuExpujR4IYQQzYGZbRJCWGZmGwN4CMAZIYSnu/u4hACa0wMkhBCiOfiFme2KWtzIv+vhRzQS8gAJ\nIYQQonI0dRC0EEIIIUR70AOQEEIIISqHHoCEEEIIUTn0ACSEEEKIyqEHICGEEEJUDj0ACSGEEKJy\n/H/4B+F2RTSX5QAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 720x720 with 25 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PlfOVNI7d8lX"
      },
      "source": [
        "## Preprocess the data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-QQgqiC-FtsL"
      },
      "source": [
        "normalize data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mFz-15q5dEX6"
      },
      "source": [
        "train_images = train_images / 255.0\n",
        "\n",
        "test_images = test_images / 255.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HIW86TsnFiBk"
      },
      "source": [
        "transform images into vectors"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "62RdfB5VePVC"
      },
      "source": [
        "train_images = train_images.reshape(60000, 784)\n",
        "test_images = test_images.reshape(10000, 784)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Q-ltFSthsoKW"
      },
      "source": [
        "## one-hot enconding the labels"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KYx5o-1QOG2_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "outputId": "2de3072b-895d-47c9-ed7a-c959413d7a31"
      },
      "source": [
        "from sklearn.preprocessing import OneHotEncoder\n",
        "\n",
        "encoder = OneHotEncoder()\n",
        "train_labels_onehot = encoder.fit_transform(train_labels.reshape(-1, 1))\n",
        "train_labels_onehot = train_labels_onehot.toarray()\n",
        "\n",
        "encoder = OneHotEncoder()\n",
        "test_labels_onehot = encoder.fit_transform(test_labels.reshape(-1, 1))\n",
        "test_labels_onehot = test_labels_onehot.toarray()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/_encoders.py:415: FutureWarning: The handling of integer data will change in version 0.22. Currently, the categories are determined based on the range [0, max(values)], while in the future they will be determined based on the unique values.\n",
            "If you want the future behaviour and silence this warning, you can specify \"categories='auto'\".\n",
            "In case you used a LabelEncoder before this OneHotEncoder to convert the categories to integers, then you can now use the OneHotEncoder directly.\n",
            "  warnings.warn(msg, FutureWarning)\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/_encoders.py:415: FutureWarning: The handling of integer data will change in version 0.22. Currently, the categories are determined based on the range [0, max(values)], while in the future they will be determined based on the unique values.\n",
            "If you want the future behaviour and silence this warning, you can specify \"categories='auto'\".\n",
            "In case you used a LabelEncoder before this OneHotEncoder to convert the categories to integers, then you can now use the OneHotEncoder directly.\n",
            "  warnings.warn(msg, FutureWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1gf2RHP19HRg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 141
        },
        "outputId": "bf4c4162-e066-4da9-92aa-8eb208d0fd86"
      },
      "source": [
        "test_labels_onehot"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0., 0., ..., 0., 0., 1.],\n",
              "       [0., 0., 1., ..., 0., 0., 0.],\n",
              "       [0., 1., 0., ..., 0., 0., 0.],\n",
              "       ...,\n",
              "       [0., 0., 0., ..., 0., 1., 0.],\n",
              "       [0., 1., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o9pgMkdk9ij2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "61a03a90-2084-4d12-9208-da35cf7def4b"
      },
      "source": [
        "test_labels.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gSfgzjppmNT1"
      },
      "source": [
        "X_train = train_images\n",
        "Y_train = train_labels\n",
        "\n",
        "X_test = test_images\n",
        "Y_test = test_labels"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pjgwmTLw4j_T"
      },
      "source": [
        "# Auxiliar functions"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VzsoOzBL2n5V"
      },
      "source": [
        "## Confusion matrix"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lm-99xCF3qed"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "def plot_confusion_matrix(cm,\n",
        "                          target_names,\n",
        "                          title='Confusion matrix',\n",
        "                          cmap=None,\n",
        "                          normalize=True):\n",
        "    \"\"\"\n",
        "    given a sklearn confusion matrix (cm), make a nice plot\n",
        "\n",
        "    Arguments\n",
        "    ---------\n",
        "    cm:           confusion matrix from sklearn.metrics.confusion_matrix\n",
        "\n",
        "    target_names: given classification classes such as [0, 1, 2]\n",
        "                  the class names, for example: ['high', 'medium', 'low']\n",
        "\n",
        "    title:        the text to display at the top of the matrix\n",
        "\n",
        "    cmap:         the gradient of the values displayed from matplotlib.pyplot.cm\n",
        "                  see http://matplotlib.org/examples/color/colormaps_reference.html\n",
        "                  plt.get_cmap('jet') or plt.cm.Blues\n",
        "\n",
        "    normalize:    If False, plot the raw numbers\n",
        "                  If True, plot the proportions\n",
        "\n",
        "    Usage\n",
        "    -----\n",
        "    plot_confusion_matrix(cm           = cm,                  # confusion matrix created by\n",
        "                                                              # sklearn.metrics.confusion_matrix\n",
        "                          normalize    = True,                # show proportions\n",
        "                          target_names = y_labels_vals,       # list of names of the classes\n",
        "                          title        = best_estimator_name) # title of graph\n",
        "\n",
        "    Citiation\n",
        "    ---------\n",
        "    http://scikit-learn.org/stable/auto_examples/model_selection/plot_confusion_matrix.html\n",
        "\n",
        "    \"\"\"\n",
        "    import matplotlib.pyplot as plt\n",
        "    import numpy as np\n",
        "    import itertools\n",
        "\n",
        "    accuracy = np.trace(cm) / float(np.sum(cm))\n",
        "    misclass = 1 - accuracy\n",
        "\n",
        "    if cmap is None:\n",
        "        cmap = plt.get_cmap('Blues')\n",
        "\n",
        "    plt.figure(figsize=(8, 6))\n",
        "    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n",
        "    plt.title(title)\n",
        "    plt.colorbar()\n",
        "\n",
        "    if target_names is not None:\n",
        "        tick_marks = np.arange(len(target_names))\n",
        "        plt.xticks(tick_marks, target_names, rotation=45)\n",
        "        plt.yticks(tick_marks, target_names)\n",
        "\n",
        "    if normalize:\n",
        "        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
        "\n",
        "\n",
        "    thresh = cm.max() / 1.5 if normalize else cm.max() / 2\n",
        "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
        "        if normalize:\n",
        "            plt.text(j, i, \"{:0.4f}\".format(cm[i, j]),\n",
        "                     horizontalalignment=\"center\",\n",
        "                     color=\"white\" if cm[i, j] > thresh else \"black\")\n",
        "        else:\n",
        "            plt.text(j, i, \"{:,}\".format(cm[i, j]),\n",
        "                     horizontalalignment=\"center\",\n",
        "                     color=\"white\" if cm[i, j] > thresh else \"black\")\n",
        "\n",
        "\n",
        "    plt.tight_layout()\n",
        "    plt.ylabel('True label')\n",
        "    plt.xlabel('Predicted label\\naccuracy={:0.4f}; misclass={:0.4f}'.format(accuracy, misclass))\n",
        "    plt.show()\n",
        "    "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WcUr1Gel2rZz"
      },
      "source": [
        "## Softmax and cost"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FUJv5YJ72zti"
      },
      "source": [
        "def softmax(x):\n",
        "  \"\"\"\n",
        "  :param x: k, m\n",
        "  \"\"\"\n",
        "  exp_x = np.exp(x - np.max(x, axis=0, keepdims=True))\n",
        "  return exp_x / np.sum(exp_x, axis=0, keepdims=True)\n",
        "\n",
        "def compute_cost(A2, Y):\n",
        "    m = Y.shape[1]\n",
        "    logprobs = np.multiply(np.log(A2 + 1e-15), Y)\n",
        "    cost = - np.sum(logprobs) / m\n",
        "    cost = np.squeeze(cost)\n",
        "\n",
        "    return cost\n",
        "\n",
        "def delta_ReLU(x):\n",
        "  return (x > 0) * 1\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NohqS7WF9AAx"
      },
      "source": [
        "## Optimizer"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IV6qmkGWUNbq"
      },
      "source": [
        "def inicialize_momentum(W, b):\n",
        "  vd = {}\n",
        "  for i in range(1, len(W)+1):\n",
        "    vd['dw' + str(i)] = np.zeros(W[i].shape)\n",
        "    vd['db' + str(i)] = np.zeros(b[i].shape)\n",
        "  \n",
        "  return vd\n",
        "\n",
        "def momentum(vd, grads, beta=0.9):\n",
        "  # unpack\n",
        "  dW = grads['dW']\n",
        "  db = grads['db']\n",
        "  \n",
        "  for i in range(1, len(dW) + 1):\n",
        "    vd['dw' + str(i)] = beta * vd['dw' + str(i)] + (1 - beta) * dW[i]\n",
        "    vd['db' + str(i)] = beta * vd['db' + str(i)] + (1 - beta) * db[i]\n",
        "  \n",
        "  return vd\n",
        "\n",
        "def RMSprop(sd, grads, beta=0.9):\n",
        "  # unpack\n",
        "  dW = grads['dW']\n",
        "  db = grads['db']\n",
        "  \n",
        "  for i in range(1, len(dW) + 1):\n",
        "    sd['dw' + str(i)] = beta * sd['dw' + str(i)] + (1 - beta) * (dW[i]**2)\n",
        "    sd['db' + str(i)] = beta * sd['db' + str(i)] + (1 - beta) * (db[i]**2)\n",
        "  return sd\n",
        "\n",
        "def bias_correction(vd, t, beta):\n",
        "  cvd ={}\n",
        "  for i in range(1, len(vd)//2+1):\n",
        "    cvd['dw' + str(i)] = vd['dw' + str(i)] / (1. - beta**t + 1e-15)\n",
        "    cvd['db' + str(i)] = vd['db' + str(i)] / (1. - beta**t + 1e-15) \n",
        "    \n",
        "  return cvd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZOE8ZAGbM4gY"
      },
      "source": [
        "# Logistic Regression"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "svxqgMt6hdp6"
      },
      "source": [
        "from sklearn.utils import shuffle\n",
        "\n",
        "\n",
        "def LR_model(X, Y, W, b, n_epochs=50, beta=0.9, alpha=0.25, lambd=0.1):\n",
        "  \n",
        "  n = X.shape[0]\n",
        "  m = X.shape[1]\n",
        "  \n",
        "  vdW = np.zeros(W.shape)\n",
        "  vdb = np.zeros(b.shape)\n",
        "  \n",
        "  costs = []\n",
        "  \n",
        "  for epoch in range(n_epochs):     \n",
        "    J = 0\n",
        "    for i in range(100):\n",
        "      \n",
        "      xi = X[:, i*(m//100):(i+1)*(m//100)].reshape((n, m//100)) # n, 500\n",
        "      yi = Y[i*(m//100):(i+1)*(m//100)].reshape((1, m//100)) # 1, 500\n",
        "      # xi = X[:, i].reshape((n,1))\n",
        "      # yi = Y[i].reshape((1,1))\n",
        "      \n",
        "      zi = np.dot(W, xi) + b # 1, 500\n",
        "      ai = 1 / (1 + np.exp(-zi)) # 1, 500\n",
        "      \n",
        "      # J += -(yi * np.log(1e-15 + ai) + (1 - yi)*np.log(1e-15 + 1 - ai))\n",
        "      \n",
        "      # gradient\n",
        "      dzi = ai - yi # 1, 500\n",
        "      dW = (1.0 / m) * np.dot(dzi, xi.T) + (lambd / m) * W # 1, n\n",
        "      db = (1.0 / m) * np.sum(dzi, axis=1, keepdims=True)\n",
        "\n",
        "      # alpha = 1.0 / (100 + m * (epoch/10 + 1) + i)\n",
        "      if epoch > n_epochs * 0.8:\n",
        "        alpha = 0.01\n",
        "      elif epoch > n_epochs * 0.6:\n",
        "        alpha = 0.05\n",
        "      elif epoch > n_epochs * 0.5:\n",
        "        alpha = 0.1\n",
        "      \n",
        "      \n",
        "      W = W - alpha * dW\n",
        "      b = b - alpha * db\n",
        "      \n",
        "    #calculate the cost function\n",
        "    aux = np.sum(np.square(W))\n",
        "    reg_cost = aux * lambd / (2 * m)\n",
        "    \n",
        "    #calculate loss\n",
        "    cost = compute_cost(ai, yi) + reg_cost\n",
        "    costs.append(cost)\n",
        "    \n",
        "    if epoch % 20 == 0:      \n",
        "      print(\"Epoch %i:\\tloss: %f\" % (epoch, cost))\n",
        "#   print(W.shape, b.shape, cost.shape)\n",
        "  return W, b\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JXdZoSVBZVHd"
      },
      "source": [
        "def predict_LR(X, W, b):\n",
        "  zi = np.dot(W, X) + b\n",
        "  \n",
        "  ai = 1 / (1 + np.exp(-zi))\n",
        "  \n",
        "  predict = np.argmax(ai, axis=0)\n",
        "  \n",
        "  return predict "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ug3jsm542bc3"
      },
      "source": [
        "## Train model and validate with k-fold"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZdpBtwi2-uUI"
      },
      "source": [
        "folds = 1\n",
        "n_epochs = 200\n",
        "\n",
        "alpha = 0.25\n",
        "lambd = 0.1\n",
        "\n",
        "W = np.random.rand(10, train_images.shape[1]) * 0.0001\n",
        "# b = np.random.rand(10)\n",
        "# W = np.zeros(shape=(10, train_images.shape[1]))\n",
        "b = np.zeros(shape=(10, 1))\n",
        "\n",
        "mean_W = np.zeros((10, train_images.shape[1]))\n",
        "mean_b = b = np.zeros(shape=(10, 1))\n",
        "\n",
        "# cost = np.zeros((10, n_epochs))\n",
        "accuracy_LR = []\n",
        "best_accuracy = 0.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cw3ikglmheqW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1921
        },
        "outputId": "bfb94427-a4d4-4e72-f64b-0d34c1327bff"
      },
      "source": [
        "import time\n",
        "\n",
        "for index_split in range(folds):\n",
        "  print(\"fold: %d \" % index_split)\n",
        "  u = index_split*10000\n",
        "  v = (index_split+1)*10000\n",
        "  \n",
        "  X_train = np.append(train_images[0:u], train_images[v:60000], axis=0)\n",
        "  X_validation = train_images[u:v]\n",
        "  Y_validation = train_labels[u:v]\n",
        "  \n",
        "  # train model\n",
        "  starter_time = time.time()\n",
        "  for i in range(10):\n",
        "    print(\"** class %i **\" % i)\n",
        "    Y_train = np.append(train_labels_onehot[0:u,i], train_labels_onehot[v:60000,i], axis=0)\n",
        "    W[i], b[i] = LR_model(X_train.T, \n",
        "                          Y_train.T, \n",
        "                          W[i].reshape(1, 784), \n",
        "                          b[i].reshape(1), \n",
        "                          n_epochs=n_epochs, \n",
        "                          alpha=alpha, \n",
        "                          lambd=lambd\n",
        "                         )\n",
        "  time_LR = time.time() - starter_time\n",
        "  \n",
        "  # validate model\n",
        "  Y_predicted = predict_LR(X_validation.T, W, b)  \n",
        "  \n",
        "  n_correct = sum(Y_validation == Y_predicted)\n",
        "  accuracy_LR.append(float(n_correct) / len(Y_predicted))\n",
        "  # update best model\n",
        "  if accuracy_LR[index_split] > best_accuracy:\n",
        "    best_accuracy = accuracy_LR[index_split]\n",
        "    LR_W_best = W.copy()\n",
        "    LR_b_best = b.copy()\n",
        "  \n",
        "  mean_W = mean_W + W\n",
        "  mean_b = mean_b + b\n",
        "\n",
        "mean_W = mean_W / folds\n",
        "mean_b = mean_b / folds\n",
        "print(time_LR)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fold: 0 \n",
            "** class 0 **\n",
            "Epoch 0:\tloss: 0.174221\n",
            "Epoch 20:\tloss: 0.065221\n",
            "Epoch 40:\tloss: 0.055843\n",
            "Epoch 60:\tloss: 0.052341\n",
            "Epoch 80:\tloss: 0.050482\n",
            "Epoch 100:\tloss: 0.049318\n",
            "Epoch 120:\tloss: 0.049132\n",
            "Epoch 140:\tloss: 0.049025\n",
            "Epoch 160:\tloss: 0.048874\n",
            "Epoch 180:\tloss: 0.048867\n",
            "** class 1 **\n",
            "Epoch 0:\tloss: 0.149071\n",
            "Epoch 20:\tloss: 0.040827\n",
            "Epoch 40:\tloss: 0.031784\n",
            "Epoch 60:\tloss: 0.027597\n",
            "Epoch 80:\tloss: 0.025010\n",
            "Epoch 100:\tloss: 0.023192\n",
            "Epoch 120:\tloss: 0.022594\n",
            "Epoch 140:\tloss: 0.022319\n",
            "Epoch 160:\tloss: 0.022057\n",
            "Epoch 180:\tloss: 0.022006\n",
            "** class 2 **\n",
            "Epoch 0:\tloss: 0.234538\n",
            "Epoch 20:\tloss: 0.150770\n",
            "Epoch 40:\tloss: 0.145692\n",
            "Epoch 60:\tloss: 0.141525\n",
            "Epoch 80:\tloss: 0.137737\n",
            "Epoch 100:\tloss: 0.134398\n",
            "Epoch 120:\tloss: 0.133512\n",
            "Epoch 140:\tloss: 0.133074\n",
            "Epoch 160:\tloss: 0.132504\n",
            "Epoch 180:\tloss: 0.132491\n",
            "** class 3 **\n",
            "Epoch 0:\tloss: 0.137597\n",
            "Epoch 20:\tloss: 0.074630\n",
            "Epoch 40:\tloss: 0.065886\n",
            "Epoch 60:\tloss: 0.062455\n",
            "Epoch 80:\tloss: 0.060730\n",
            "Epoch 100:\tloss: 0.059740\n",
            "Epoch 120:\tloss: 0.059327\n",
            "Epoch 140:\tloss: 0.059156\n",
            "Epoch 160:\tloss: 0.059043\n",
            "Epoch 180:\tloss: 0.058996\n",
            "** class 4 **\n",
            "Epoch 0:\tloss: 0.257955\n",
            "Epoch 20:\tloss: 0.135176\n",
            "Epoch 40:\tloss: 0.115215\n",
            "Epoch 60:\tloss: 0.105804\n",
            "Epoch 80:\tloss: 0.100444\n",
            "Epoch 100:\tloss: 0.097055\n",
            "Epoch 120:\tloss: 0.096344\n",
            "Epoch 140:\tloss: 0.095965\n",
            "Epoch 160:\tloss: 0.095534\n",
            "Epoch 180:\tloss: 0.095487\n",
            "** class 5 **\n",
            "Epoch 0:\tloss: 0.127735\n",
            "Epoch 20:\tloss: 0.094747\n",
            "Epoch 40:\tloss: 0.079395\n",
            "Epoch 60:\tloss: 0.069940\n",
            "Epoch 80:\tloss: 0.063337\n",
            "Epoch 100:\tloss: 0.058401\n",
            "Epoch 120:\tloss: 0.056739\n",
            "Epoch 140:\tloss: 0.055965\n",
            "Epoch 160:\tloss: 0.055229\n",
            "Epoch 180:\tloss: 0.055086\n",
            "** class 6 **\n",
            "Epoch 0:\tloss: 0.178926\n",
            "Epoch 20:\tloss: 0.116348\n",
            "Epoch 40:\tloss: 0.104020\n",
            "Epoch 60:\tloss: 0.097393\n",
            "Epoch 80:\tloss: 0.093104\n",
            "Epoch 100:\tloss: 0.090082\n",
            "Epoch 120:\tloss: 0.088714\n",
            "Epoch 140:\tloss: 0.088105\n",
            "Epoch 160:\tloss: 0.087689\n",
            "Epoch 180:\tloss: 0.087493\n",
            "** class 7 **\n",
            "Epoch 0:\tloss: 0.134991\n",
            "Epoch 20:\tloss: 0.070133\n",
            "Epoch 40:\tloss: 0.064327\n",
            "Epoch 60:\tloss: 0.060687\n",
            "Epoch 80:\tloss: 0.057949\n",
            "Epoch 100:\tloss: 0.055781\n",
            "Epoch 120:\tloss: 0.055064\n",
            "Epoch 140:\tloss: 0.054721\n",
            "Epoch 160:\tloss: 0.054381\n",
            "Epoch 180:\tloss: 0.054313\n",
            "** class 8 **\n",
            "Epoch 0:\tloss: 0.197991\n",
            "Epoch 20:\tloss: 0.065318\n",
            "Epoch 40:\tloss: 0.047547\n",
            "Epoch 60:\tloss: 0.040669\n",
            "Epoch 80:\tloss: 0.037001\n",
            "Epoch 100:\tloss: 0.034701\n",
            "Epoch 120:\tloss: 0.034025\n",
            "Epoch 140:\tloss: 0.033724\n",
            "Epoch 160:\tloss: 0.033428\n",
            "Epoch 180:\tloss: 0.033376\n",
            "** class 9 **\n",
            "Epoch 0:\tloss: 0.131875\n",
            "Epoch 20:\tloss: 0.043057\n",
            "Epoch 40:\tloss: 0.037887\n",
            "Epoch 60:\tloss: 0.035421\n",
            "Epoch 80:\tloss: 0.033777\n",
            "Epoch 100:\tloss: 0.032543\n",
            "Epoch 120:\tloss: 0.032166\n",
            "Epoch 140:\tloss: 0.031980\n",
            "Epoch 160:\tloss: 0.031789\n",
            "Epoch 180:\tloss: 0.031758\n",
            "114.1264169216156\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dcZJ5wpq8tw5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b4ca162c-934b-4a44-9451-1adae294d28e"
      },
      "source": [
        "b.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bR13RJG0zD47"
      },
      "source": [
        "# LR_W_best\n",
        "LR_W_mean = mean_W.copy()\n",
        "LR_W_last = W.copy()\n",
        "\n",
        "LR_b_mean = mean_b.copy()\n",
        "LR_b_last = b.copy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Bx_OZu4Iz0YN"
      },
      "source": [
        "np.savetxt(\"LR_W_mean.csv\", LR_W_mean, delimiter=\",\")\n",
        "np.savetxt(\"LR_W_last.csv\", LR_W_last, delimiter=\",\")\n",
        "np.savetxt(\"LR_W_best.csv\", LR_W_best, delimiter=\",\")\n",
        "\n",
        "np.savetxt(\"LR_b_mean.csv\", LR_b_mean, delimiter=\",\")\n",
        "np.savetxt(\"LR_b_last.csv\", LR_b_last, delimiter=\",\")\n",
        "np.savetxt(\"LR_b_best.csv\", LR_b_best, delimiter=\",\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gWdACowiOUIM"
      },
      "source": [
        "X_train = train_images #60000, 784\n",
        "\n",
        "Y_train = train_labels # 60000, \n",
        "# LR_W_best, LR_W_mean & LR_W_last\n",
        "Y_predicted = predict_LR(X_validation.T, LR_W_best, LR_b_best.reshape(10,1)) # 60000,\n",
        "n_correct = sum(Y_validation == Y_predicted)\n",
        "\n",
        "cm =confusion_matrix(Y_validation, Y_predicted)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6pk3qL8V33kW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 463
        },
        "outputId": "93a8563e-41a8-4256-e3eb-c32ffda16700"
      },
      "source": [
        "plot_confusion_matrix(cm           =  cm,\n",
        "                      normalize    = False,\n",
        "                      target_names = class_names,\n",
        "                      title        = \"Confusion Matrix\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nu17sK4pYe1bkUI6ikkUROXJy5f/VNtKVkJIpXzlaUsX8lVREm5Ry+lHuHGnHpmLgKF85zw9NkTuH\ngY6EtCz53+P45Ey5yzAvrUf08wy5y1CFfWFxCimnbY0yCinn3xJ72oIgCEKxoel72uKYtiAIgiBo\nCLGnLQiCIBQbmr6nLTptQRAEodjQ9FO+RKctCIIgFBsKmhepNuKYtiAIgiBoCLGnLQiCIBQbmj48\nLva0VehI6GEcGtTD2tqa9m1diImJETmKQI6ilEXdObKyspg4YSzGelIevaPu73zHYWddRaWZVN0m\nvdvU5uJabyK2jibg+67o6mgB8NOQVlzdMAKAad+0KvAa5wZWPNg5Ht++jkrNBrD9jyDq2NtiY2ND\nHXtb6tjbYqgrJTk5WWl1ZmVl8dNkXyxM9fnr0ev2X7l0IU6Na1O9enUmjBxKZmb+Od+ZmZlMGDmU\n5g3tcWpcm1XLFikt278lkSjmpi6i01aRlJQU+vbpyeJlK4mIiKBd+474eA8VOdScoyhlKQo5PLp1\nxsjY+J2PXb92ld3BO1WaR9VtYlelLDO929Bp/Hqs3eehJZUwptdXuDvZ41inMg0GLAbAsU5lujS3\nA8CjVU2+79+CKxF/KS3Xm7p0686VG7cIDw/nyo1bTP5xKp06d8XExERpdQ7y7I6hkVGBbZfOn2X1\nMn+27z9KeHg4SUlJrF6e3zmvWDyfxIQEQs9cY2fIcQKWLeTq5YtKy/dvSBT0n7qITltFjoQepnIV\nS+rWqwdAvwEDOXggRKnfjkUOzcpSFHL4fjeJST9MfWt7bm4uo0YMZ/LUn1SWBVTfJi3qVeHopXvE\nPH0BgH/QGTo3t6Vryxqs//MKmVk5AGwMuUrXljUAuP0wnjYj1xD7/KVSMn1Ieno6U3+czIyfZyq1\nHp9xExnr90OBbXuCt9GhszuffVYSiUSCR59+7Nm5TfZY735fI5VKMSlRgnZuXWWPCfIRnbaK3LkT\ngaWlley+sbExpqamRN69K3KoMUdRylIUcjRq7PDO7QErlmFXw56GDRurLAuovk3y8kBL6/WfxZep\nmViZlaaquSlRj5/Ltkc9eo61xecAXIn4i6zsHKXkKcya1QE0btIUSyurwp8sh/oN3n7foyLv8EWV\n14dKvqhsSeSd2wDcu3uHLypbvvFYFdlj6iaVKOamLmIimoqkpaair69fYJu+gQEpKSkihxpzFKUs\n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\ntrZi4hg1NTWcnZ2Ji4vj8ePHfPnll6INuxZI5GIh01pRXl5OcXExixYtYuHChZw6dYoVK1awfft2\n2rRpQ2JiIpGRkbRo0YIePXooLd3qC+vx48csW7aMKVOmYGxsTEREBGFhYdjY2NC2bVtu3bpFhw4d\n6qRzz9WrVzEyMuLAgQMkJyezfPlyvLy8qKio4Ntvv0UqlVJcXFwrVaChoaGsWLGCiRMnMmTIEMXx\n2blzJzExMXh7e1NSUlKv81bXldDQUNavX89HH32EVCqlR48e/P777xQXF3PkyBF+/fVXfHx8uHXr\nFiUlJWzZsqXOF3B49OiRop2/vmbKksvl5OXlsXTpUmbPns21a9c4cOAAq1evBp4cxzt37uDu7v5K\nraZVV3777TcuX76MsbExjx49YvLkybRv315xbZWVlfHo0aM6nVq2MREl7VpSVVVFeXk5hYWFBAQE\nMH78eExNTZk3bx6urq5YW1vTrl07LCwslJJeTEwM2traaGhocOrUKWQymWJhBzc3N1q1akVmZiah\noaF4eHjQrl27OukYUlhYiL+/P+Hh4YwdO1YxFeWyZcsICgoiKCiIIUOG1Fo7rqWlJS1atGDt2rXo\n6urStm1bAMWc4n379q3zWbXqQ82hVV26dKFZs2ZUVlYSGxtLaWkpzZo1o2vXrhQXF+Pk5KSYia+u\nSaVSxSyBdalmKVIikaClpUVSUhIrV64kJSWFVatWkZuby7Jlyxg1ahROTk6NJijFx8cTFxeHlZUV\n2dnZ7N27l1WrVnH79m3y8/N5//33FX13KisrkUqlYi7xWiSGfClJVlYWZWVlmJubExoaypYtW+jf\nv7+ievHrr79m4cKFVFRUMG7cOE6dOqW0G1NYWBirVq3i22+/5ebNm/z8888cO3aMBQsW8MMPP7Bq\n1SqmTZuGvr4+FRUVPHr0qNY69pSXl6OiooKamhq5ubkYGhoycuRIjh07xubNmxk/fjz79+9n0qRJ\nbNiwgezsbKB2e7+6u7sDsHLlSgwMDFBRUSEwMJCvv/661tJ81TxvaNW9e/fIysoiPT2dwsJCMjMz\niYiIYOXKlY0mIMHTAXvnzp3ExcXRvXt3RU9oFxcXACIjIykoKKCioqJelgCtD5WVldy5c4dDhw4h\nkUhwc3MjNzeXuXPnIpPJWLx4MVevXiUlJYVhw4Y1muNSn0RJW0mq14Q1MTFh37599OjRQ7HIQtu2\n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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7fa53761b5c0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-aCr0eCWy7dk"
      },
      "source": [
        "\n",
        "## Softmax Regression"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "92uOE0QHpTLX"
      },
      "source": [
        "def predict_MLR(X, W, b):\n",
        "  \"\"\"\n",
        "  :param X: data           (no features, no examples)\n",
        "  :param W: weights        (no classes, no features)\n",
        "  :param b: bias           (no classes, 1)\n",
        "  :return:\n",
        "  \"\"\"\n",
        "  # Y: k, m\n",
        "  y_pred = np.argmax(softmax(np.dot(W, X) + b), axis=0)\n",
        "  return y_pred\n",
        "\n",
        "\n",
        "def propagate(X, Y, W, b, lambd):\n",
        "  \"\"\"\n",
        "  :param X: data           (no featurs, no examples)\n",
        "  :param Y: one hot labels (no classes, no examples)\n",
        "  :param W: weights        (no classes, no features)\n",
        "  :param b: bias           (no classes, 1)\n",
        "  :return:\n",
        "  \"\"\"\n",
        "\n",
        "  # X: n, m\n",
        "  # Y: k, m\n",
        "  m = X.shape[1]  # getting no of rows\n",
        "\n",
        "  # Forward Prop\n",
        "  A = softmax(np.dot(W, X) + b) # shape: k, m\n",
        "\n",
        "  cost = (-1.0 / m) * np.sum(Y * np.log(1e-15 + A))\n",
        " \n",
        "  # backwar prop\n",
        "  dZ = A - Y # shape: k, m\n",
        "  dw = (1.0 / m) * np.dot(dZ, X.T) + (lambd / m) * W # k, n\n",
        "  db = (1.0 / m) * np.sum(dZ, axis=1, keepdims=True)\n",
        "  cost = np.squeeze(cost)\n",
        "  grads = {\"dw\": dw,\n",
        "           \"db\": db}\n",
        "  return grads, cost, np.argmax(A, axis=0)\n",
        "\n",
        "\n",
        "def MR_model(X, Y, W, b, n_epochs, alpha, lambd=0.1, beta=0.9):\n",
        "    \"\"\"\n",
        "    :param X: data           (no features, no examples)\n",
        "    :param Y: one hot labels (no classes, no examples)\n",
        "    :param W: weights        (no classes, no features)\n",
        "    :param b: bias           (no classes, 1)\n",
        "    :param n_epochs: number of iterations for gradient\n",
        "    :param alpha:\n",
        "    :return:\n",
        "    \"\"\"\n",
        "    \n",
        "    n = X.shape[0]  # getting no of rows\n",
        "    m = X.shape[1]  # getting no of rows\n",
        "\n",
        "    vdw = np.zeros(W.shape)\n",
        "    vdb = np.zeros(b.shape)\n",
        "    \n",
        "    costs = []\n",
        "    for epoch in range(n_epochs):\n",
        "      for i in range(100):\n",
        "        \n",
        "        xi = X[:, i*(m//100):(i+1)*(m//100)].reshape((n, m//100)) # n, 500\n",
        "        yi = Y[:, i*(m//100):(i+1)*(m//100)].reshape((10, m//100)) # 1, 500\n",
        "      \n",
        "      \n",
        "        grads, cost, A = propagate(xi, yi, W, b, lambd)\n",
        "        dw = grads[\"dw\"]\n",
        "        db = grads[\"db\"]\n",
        "        \n",
        "        vdw = beta * vdw + (1 - beta) * dw\n",
        "        vdb = beta * vdb + (1 - beta) * db\n",
        "        \n",
        "        W = W - alpha * vdw\n",
        "        b = b - alpha * vdb\n",
        "        \n",
        "        alpha = alpha * 0.99\n",
        "\n",
        "        cost += np.sum(np.square(W)) * lambd / (2 * m)\n",
        "        costs.append(cost)\n",
        "\n",
        "      if epoch % 50 == 0:\n",
        "        n_correct = np.sum(np.argmax(yi, axis=0) == A)\n",
        "        accuracy = float(n_correct) / len(A)  \n",
        "        \n",
        "        \n",
        "        print(\"Epoch %i:\\tloss: %f\\tacc: %f\" % (epoch, cost, accuracy))\n",
        "\n",
        "    return W, b, costs\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# aux = 0.0\n",
        "#       for i in range(1, l + 1):\n",
        "#         aux = aux + np.sum(np.square(W[i]))\n",
        "#       reg_cost = aux * lambd / (2 * m)\n",
        "#       #calculate loss\n",
        "#       cost = compute_cost(forward_cache['A'][3], yi) + reg_cost\n",
        "#       costs.append(cost)\n",
        "      \n",
        "      \n",
        "#       Y_predictions = np.argmax(forward_cache['A'][3], axis=0)\n",
        "#       n_correct = np.sum(np.argmax(yi, axis=0) == Y_predictions)\n",
        "#       accuracy = float(n_correct) / len(Y_predictions)    \n",
        "      \n",
        "      "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CY3H13Ft9W2J"
      },
      "source": [
        "Inicialize parameters to the train model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LPwS8m5G9T8F"
      },
      "source": [
        "n_epochs = 350\n",
        "folds = 1\n",
        "\n",
        "# W = np.random.randn(10, train_images.shape[1]) * 0.00001\n",
        "# b = np.random.randn(1 ,10)\n",
        "W = np.zeros(shape=(10, train_images.shape[1]))\n",
        "b = np.zeros(shape=(10, 1))\n",
        "\n",
        "MLR_W_mean = np.zeros((10, train_images.shape[1]))\n",
        "MLR_b_mean = np.zeros(shape=(10, 1))\n",
        "\n",
        "MLR_costs = []\n",
        "\n",
        "MLR_accuracy = []\n",
        "best_accuracy = 0.0\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sPafyVDW5Y24",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1e7011d8-609d-4e5c-f294-540ade33b748"
      },
      "source": [
        "b.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nqUYW9Pb9jIM"
      },
      "source": [
        "perform k-fold"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fcTwK-x4y5yb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 170
        },
        "outputId": "4ef1a88a-9ca9-4490-ae4f-a9f896ddf4bf"
      },
      "source": [
        "import time\n",
        "\n",
        "for index_split in range(folds):\n",
        "  print(\"fold: %d \" % index_split)\n",
        "  u = index_split * 10000\n",
        "  v = (index_split + 1) * 10000\n",
        "  # Separate set\n",
        "  X_train = np.append(train_images[0:u], train_images[v:60000], axis=0)  # shape: m, n\n",
        "  Y_train = np.append(train_labels_onehot[0:u], train_labels_onehot[v:60000], axis=0)  # shape: m, k\n",
        "  X_validation = train_images[u:v]\n",
        "  Y_validation = train_labels[u:v]\n",
        "  \n",
        "  # train model\n",
        "  starter_time = time.time()\n",
        "  W, b, cost = MR_model(X_train.T, Y_train.T, W, b, n_epochs, alpha=0.25, lambd=0.1, beta=0.88)\n",
        "  time_MLR = time.time() - starter_time\n",
        "  \n",
        "  # validate model\n",
        "  Y_predicted = predict_MLR(X_validation.T, W, b)\n",
        "  n_correct = sum(Y_validation == Y_predicted)\n",
        "  \n",
        "  MLR_costs.append(cost)\n",
        "  MLR_accuracy.append(float(n_correct) / len(Y_predicted))\n",
        "  \n",
        "  if MLR_accuracy[index_split] > best_accuracy:\n",
        "    best_accuracy = MLR_accuracy[index_split]\n",
        "    MLR_W_best = W.copy()\n",
        "    MLR_b_best = b.copy()\n",
        "\n",
        "  MLR_W_mean = MLR_W_mean + W\n",
        "  MLR_b_mean = MLR_b_mean + b\n",
        "  \n",
        "MLR_W_mean = MLR_W_mean / folds\n",
        "MLR_b_mean = MLR_b_mean / folds\n",
        "  \n",
        "    \n",
        "print(time_MLR)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fold: 0 \n",
            "Epoch 0:\tloss: 0.623956\tacc: 0.792000\n",
            "Epoch 50:\tloss: 0.568658\tacc: 0.814000\n",
            "Epoch 100:\tloss: 0.568658\tacc: 0.814000\n",
            "Epoch 150:\tloss: 0.568658\tacc: 0.814000\n",
            "Epoch 200:\tloss: 0.568658\tacc: 0.814000\n",
            "Epoch 250:\tloss: 0.568658\tacc: 0.814000\n",
            "Epoch 300:\tloss: 0.568658\tacc: 0.814000\n",
            "117.10932731628418\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fctLXj_osaed",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "outputId": "ff651ac7-9e7d-4a2f-d31f-f9e90a796377"
      },
      "source": [
        "print(MLR_accuracy)\n",
        "# print(time_MLR)\n",
        "Y_predicted = predict_MLR(X_validation.T, MLR_W_best, MLR_b_best)\n",
        "\n",
        "cm =confusion_matrix(Y_predicted, Y_validation)\n",
        "\n",
        "plot_confusion_matrix(cm           =  cm,\n",
        "                      normalize    = False,\n",
        "                      target_names = class_names,\n",
        "                      title        = \"Confusion Matrix\")\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[0.8081]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nDqr9b4nRCWsAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f5cda398a90>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sSr1mD__8emL"
      },
      "source": [
        "# LR_W_best\n",
        "MLR_W_last = W.copy()\n",
        "MLR_b_last = b.copy()\n",
        "\n",
        "np.savetxt(\"MLR_W_mean.csv\", MLR_W_mean, delimiter=\",\")\n",
        "np.savetxt(\"MLR_W_last.csv\", MLR_W_last, delimiter=\",\")\n",
        "np.savetxt(\"MLR_W_best.csv\", MLR_W_best, delimiter=\",\")\n",
        "\n",
        "np.savetxt(\"MLR_b_mean.csv\", MLR_b_mean, delimiter=\",\")\n",
        "np.savetxt(\"MLR_b_last.csv\", MLR_b_last, delimiter=\",\")\n",
        "np.savetxt(\"MLR_b_best.csv\", MLR_b_best, delimiter=\",\")\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JUceO0Eu7Sl8"
      },
      "source": [
        "def multinomialSGD(X, Y, W, b, n_epochs=50, lambd=0.08, beta=0.87):\n",
        "  \"\"\"\n",
        "  :param X: data           (no features, no examples)\n",
        "  :param Y: one hot labels (no classes, no examples)\n",
        "  :param W: weights        (no classes, no features)\n",
        "  :param b: bias           (no classes, 1)\n",
        "  :param n_epochs: number of iterations for gradient\n",
        "  :param alpha:\n",
        "  :return:\n",
        "  \"\"\"\n",
        "  n = X.shape[0]\n",
        "  m = X.shape[1]\n",
        "  k = 10\n",
        "  \n",
        "  # X: n, m\n",
        "  # Y: k ,m\n",
        "  \n",
        "  cost = np.zeros(n_epochs)    \n",
        "  for epoch in range(n_epochs):     \n",
        "    J = 0.0\n",
        "    for i in range(m):\n",
        "      xi = X[:, i].reshape((n,1)) # n, 1\n",
        "      yi = Y[:, i].reshape((k, 1)) # shape: k, 1\n",
        "      \n",
        "      # forward prop\n",
        "      zi = np.dot(W, xi) + b # shape = k, 1\n",
        "      pk = softmax(zi) # shape = k, 1\n",
        "      # loss\n",
        "      J += np.sum(-yi * np.log(1e-15 + pk))\n",
        "      # derivatives \n",
        "      dzi = pk - yi # shape: k, 1  \n",
        "      dW = np.dot(dzi, xi.T) + (lambd / m) * W # shape: k, n\n",
        "      \n",
        "      alpha = 1.0 / (100.0 + m * (epoch/10 + 1) + i)\n",
        "      \n",
        "      W = W - alpha * dW\n",
        "      b = b - alpha * dzi\n",
        "    \n",
        "    cost[epoch] = (J / m) + np.sum(np.square(W)) * lambd / (2 * m)\n",
        "    if epoch % 10  == 0:\n",
        "      print(\"Cost after epoch %i: %f\" % (epoch, cost[epoch]))\n",
        "  return W, b, cost "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EpTyIoYLCgaI"
      },
      "source": [
        "n_epochs = 50\n",
        "\n",
        "folds = 6\n",
        "W = 0.0025 * np.random.randn(10, train_images.shape[1])\n",
        "b = np.zeros(shape=(10, 1))\n",
        "\n",
        "SGD_MLR_W_mean = np.zeros((10, train_images.shape[1]))\n",
        "SGD_MLR_b_mean = np.zeros(shape=(10, 1))\n",
        "\n",
        "SGD_MLR_costs = []\n",
        "\n",
        "SGD_MLR_accuracy = []\n",
        "best_accuracy = 0.0 "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IcCvCOS7BygY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 683
        },
        "outputId": "bbdd7fc9-975e-48c4-da14-60df1bd8efda"
      },
      "source": [
        "import time\n",
        "\n",
        "for index_split in range(folds):\n",
        "  print(\"fold: %d \" % index_split)\n",
        "  u = index_split * 10000\n",
        "  v = (index_split + 1) * 10000\n",
        "\n",
        "  X_train = np.append(train_images[0:u], train_images[v:60000], axis=0)  # shape: m, n\n",
        "  Y_train = np.append(train_labels_onehot[0:u], train_labels_onehot[v:60000], axis=0)  # shape: m, k\n",
        "  Y_labels = np.append(train_labels[0:u], train_labels[v:60000], axis=0)  # shape: m, k\n",
        "  X_validation = train_images[u:v]\n",
        "  Y_validation = train_labels[u:v]\n",
        "  # train model\n",
        "  starter_time = time.time()\n",
        "  W, b, costs = multinomialSGD(X_train.T, Y_train.T, W, b, n_epochs)\n",
        "  time_SGD = time.time() - starter_time\n",
        "  # validate\n",
        "  Y_predicted = predict_MLR(X_validation.T, W, b)\n",
        "  \n",
        "  n_correct = sum(Y_validation == Y_predicted)\n",
        "  SGD_MLR_costs.append(cost)\n",
        "  SGD_MLR_accuracy.append(float(n_correct) / len(Y_predicted))\n",
        "  # update best model\n",
        "  if SGD_MLR_accuracy[index_split] > best_accuracy:\n",
        "    best_accuracy = SGD_MLR_accuracy[index_split]\n",
        "    SGD_MLR_W_best = W.copy()\n",
        "    SGD_MLR_b_best = b.copy()\n",
        "\n",
        "  SGD_MLR_W_mean = SGD_MLR_W_mean + W\n",
        "  SGD_MLR_b_mean = SGD_MLR_b_mean + b\n",
        "\n",
        "SGD_MLR_W_mean = SGD_MLR_W_mean / folds\n",
        "SGD_MLR_b_mean = SGD_MLR_b_mean / folds\n",
        "\n",
        "    \n",
        "print(time_SGD)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fold: 0 \n",
            "Cost after epoch 0: 1.750392\n",
            "Cost after epoch 10: 0.809282\n",
            "Cost after epoch 20: 0.726259\n",
            "Cost after epoch 30: 0.688842\n",
            "Cost after epoch 40: 0.666374\n",
            "fold: 1 \n",
            "Cost after epoch 0: 0.648697\n",
            "Cost after epoch 10: 0.613627\n",
            "Cost after epoch 20: 0.596804\n",
            "Cost after epoch 30: 0.586291\n",
            "Cost after epoch 40: 0.578859\n",
            "fold: 2 \n",
            "Cost after epoch 0: 0.572330\n",
            "Cost after epoch 10: 0.557348\n",
            "Cost after epoch 20: 0.549183\n",
            "Cost after epoch 30: 0.543737\n",
            "Cost after epoch 40: 0.539723\n",
            "fold: 3 \n",
            "Cost after epoch 0: 0.538125\n",
            "Cost after epoch 10: 0.529114\n",
            "Cost after epoch 20: 0.523962\n",
            "Cost after epoch 30: 0.520427\n",
            "Cost after epoch 40: 0.517769\n",
            "fold: 4 \n",
            "Cost after epoch 0: 0.515502\n",
            "Cost after epoch 10: 0.509347\n",
            "Cost after epoch 20: 0.505719\n",
            "Cost after epoch 30: 0.503186\n",
            "Cost after epoch 40: 0.501257\n",
            "fold: 5 \n",
            "Cost after epoch 0: 0.498633\n",
            "Cost after epoch 10: 0.494058\n",
            "Cost after epoch 20: 0.491328\n",
            "Cost after epoch 30: 0.489405\n",
            "Cost after epoch 40: 0.487932\n",
            "211.69581532478333\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bB9hGFJ-yLNe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "outputId": "85db47f7-4ffb-44af-f79d-e1164eb6483e"
      },
      "source": [
        " "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[0.7955, 0.8112, 0.8253, 0.8369, 0.8381, 0.831]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\ndnbS5cuX/1FZnp6eUnBwsCRJkrRjxw5p6dKlb/0c6enpkpub2yvH3N3dpZSUlFeOPXnyROrVq5fU\nvXt3ycXFRfL39//de23dulUaNWrUK8dSU1OlXr16SWVlZcpj06ZNk9zd3aVWrVr9aUs3ODhYcnJy\nknJzc6Xnz59LzZo1k44cOaL8vFu3bpUkSZIaNmwolZSUSKNGjVL2Gjx48EDy8/OTnj59Krm5uUnZ\n2dmSJEnSL7/8IoWEhLxyvrds2SIVFBRIkiRJs2bNknbu3Cnl5eVJLVq0kEpLSyVJkqRTp05JKSkp\n0vz586X169dLkvSid6G8Pm/TrVs36f79+8qfJ02a9Na/8fHxeWNLW6FQSL1795aSk5N/97vExETJ\nw8NDSk1N/UvHBaGyiZa2UOX09PRIS0vjyy+/RC6Xk5WVRW5uLnFxcTRp0gQtLS0Afv75Z+BF7u2v\nv/4agFatWtGqVSuSk5Pf+v6SJOHk5PSPyho4cCBHjhzB1dWVc+fO/e0MX5IkvZKWFGDJkiX07NmT\nMWPGkJSUxJAhQ2jVqhW6uroA7Nixg+PHj7N169ZX/m7Pnj0MGDBA2Ro/c+YMjx49wt/fn9LSUoYM\nGYK7uzsuLi5vrY+NjY2yNW5gYKDMhW5iYkJhYeErr+3duzfLli0jIiKCzp0707lzZyIjIzE1NVWm\nKZ08eTLwohVf7k35yvX19XF3d2fw4MF07dqVTz75BFNTU7p37860adNITU2lY8eO9OnT52+f37/r\n8uXLWFpaYmZm9srxBw8eMGbMGObPn0+dOnX+9LggVAURtIUqd+rUKSIjI9m9ezcaGhr069cPeJHb\n+k0P5Tfl3n49MJaUlLxyrDzn998tq0uXLixbtoz4+HjU1dWxsrIiKCjojd3jW7du5enTp8ru8JKS\nEgoLC6lZs+YrrwsODmblypUAWFhYUKtWLe7du4ejoyMbNmwgKCiIHTt2KIN4ufPnz78ykSokJIQO\nHTqgqamp7NIPCwv7w6D9+uSyl39+/fN/8skntGvXjsuXL7NmzRocHBzo1q3bHwbKP8pX7u3tzYMH\nD7h06RKDBw9m1apVtGzZkpMnTxIUFMThw4c5fvw4s2bNemv3uKmpKZmZmdjY2ACQmZmJqanpW+vz\nJufPn6dLly6vHLt//z5jxozhp59+emVXtrcdF4SqIpZ8CVUuOzubevXqoaGhwe3bt0lMTKS4uFiZ\nn7u8BTh+/Hhu3779Su7t0NBQpk6diq6uLo8fP+bZs2eUlZVx/fp1lZQll8vp3r0706dPVwb4Nm3a\nsHPnzt/9p6GhQevWrTl79izwoiXs6ur6u9nG5eOwAI8fPyYlJQULCwuCg4O5ePEi69ev/13AzsnJ\noaCg4JXW4cvvo1AoiIyMVAYzVfD29qasrIxPPvkELy8vbt68Sf369cnIyCA9PR2An376CT8/v1fO\n75vylSclJbFt2zZsbGwYNmwYXbt2JTY2lp07d5Kenk6nTp1YsGABt27dwsDA4I3n197eno4dO3Lq\n1CkAEhMTSUxMVPYW/FU3btygWbNmyp+Li4uZMGECy5YteyUwv+24IFQl0dIWqlyPHj0YNWoUgwcP\nxsnJiWHDhvHjjz9y4MABxo4dy9ChQ9HQ0MDJyYmmTZtSp04dpk+fzoULFwCYNWsW+vr69O3bl/79\n+2NpaUnjxo1VUhZA3759OXDgAD169PjTzzJz5kymT5/O3r17kcvlLFy4EICAgACioqIYPXo006ZN\nY86cOZw4cYKioiKmTJmCsbExM2bMICcnR7ldJ8DUqVNp2rQp6enpGBsbv1LWwIEDiY2NZeDAgcCL\njUQ6d+4M/LNlW6+zsrJi2LBh6OnpoVAoGDduHDo6OixYsIBx48Yhl8sxNzenQ4cOxMTEAG/PV+7h\n4UF0dDRffPEF1atXR19fn7FjxxIeHs6kSZOoXr06CoWCSZMm/WGdvvrqK7y8vBg4cCAKhYKFCxdS\nrVo1srKymD9/Pt7e3kRERLB48WKysrLIz8/H09OT/v378/nnnwOQlpb2yhaj/v7+pKWlvdIr4Obm\nhrW19RuPi3zqQlUSuccF4U9s2rSJ/Px8Jk6cWNVV+ctmz579u1ndgiB8+ERLWxDeQqFQ8NVXX6Gn\np6ccg/5QtG3btqqrIAhCBRAtbUEQBEH4QIiJaIIgCILwgRBBWxAEQRA+ECJoC4IgCMIHQgRtQRAE\nQfhAiKAtCIIgCB8IEbQFQRAE4QPx/wH1WS0Q7RqRfgAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f67dde02b70>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kk8avnHJmXAf"
      },
      "source": [
        "# LR_W_best\n",
        "SGD_MLR_W_last = W.copy()\n",
        "SGD_MLR_b_last = b.copy()\n",
        "\n",
        "np.savetxt(\"SGD_MLR_W_mean.csv\", SGD_MLR_W_mean, delimiter=\",\")\n",
        "np.savetxt(\"SGD_MLR_W_last.csv\", SGD_MLR_W_last, delimiter=\",\")\n",
        "np.savetxt(\"SGD_MLR_W_best.csv\", SGD_MLR_W_best, delimiter=\",\")\n",
        "\n",
        "np.savetxt(\"SGD_MLR_b_mean.csv\", SGD_MLR_b_mean, delimiter=\",\")\n",
        "np.savetxt(\"SGD_MLR_b_last.csv\", SGD_MLR_b_last, delimiter=\",\")\n",
        "np.savetxt(\"SGD_MLR_b_best.csv\", SGD_MLR_b_best, delimiter=\",\")\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZFfnFTzyqBfm"
      },
      "source": [
        "# Neural Network - 1 hidden layer"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4tPRPJ2YqFpp"
      },
      "source": [
        "# hidden layer: tanh\n",
        "# output layer: softmax\n",
        "\n",
        "def forwardprop(X, W, b):\n",
        "  # Forward prop\n",
        "  Z = {}\n",
        "  A = {}\n",
        "  # ReLU\n",
        "  # n1, n * n, m\n",
        "  Z[1] = np.dot(W[1], X) + b[1] # n1, m\n",
        "  A[1] = Z[1] * (Z[1] > 0)\n",
        "#   A[0] = np.tanh(Z[0])\n",
        "  Z[2] = np.dot(W[2], A[1]) + b[2] # n2, m\n",
        "  A[2] = softmax(Z[2])\n",
        "  \n",
        "  return A, Z\n",
        "  \n",
        "def backprop(X, Y, W, b, A, Z, lambd=0.1):\n",
        "  m = X.shape[1]\n",
        "  dZ = {}\n",
        "  dW = {}\n",
        "  db = {}\n",
        "  \n",
        "  dZ[2] = A[2] - Y # n2, m  \n",
        "  dW[2] = (1.0/m) * np.dot(dZ[2], A[1].T) + (lambd / m) * W[2]  # n2, n1\n",
        "  db[2] = (1.0/m) * np.sum(dZ[2], axis=1, keepdims=True)\n",
        "  \n",
        "  #   dZ[0] = np.multiply(np.dot(W[1].T, dZ[1]),1 - np.square(A[0])) # n1, m\n",
        "  dZ[1] = np.multiply(np.dot(W[2].T, dZ[2]),delta_ReLU(Z[1])) # n1, m\n",
        "  dW[1] = (1.0/m) * np.dot(dZ[1], X.T) + (lambd / m) * W[1]  # n1, n\n",
        "  db[1] = (1.0/m) * np.sum(dZ[1], axis=1, keepdims=True)\n",
        "  \n",
        "  grads = {\n",
        "      'dW' : dW,\n",
        "      'db' : db\n",
        "  }\n",
        "  \n",
        "  return grads\n",
        "  \n",
        "def nn_one_layer(X, Y, W, b, n_epochs=50, alpha=0.01, lambd=0.1, beta=0.9):\n",
        "  m = X.shape[1]  # getting no of rows\n",
        "  l = len(W)\n",
        "  costs = []\n",
        "  \n",
        "  vd = inicialize_momentum(W, b)\n",
        "  \n",
        "  for epoch in range(n_epochs):\n",
        "    A, Z = forwardprop(X, W, b)\n",
        "  \n",
        "    grads = backprop(X, Y, W, b, A, Z)\n",
        "    \n",
        "    if epoch > n_epochs * 0.8:\n",
        "      alpha = alpha * 0.5\n",
        "    elif epoch > n_epochs * 0.6:\n",
        "      alpha = alpha * 0.5\n",
        "    elif epoch > n_epochs * 0.4:\n",
        "      alpha = alpha * 0.9\n",
        "    \n",
        "    vd = momentum(vd, grads, beta)\n",
        "\n",
        "    W[1] = W[1] - alpha * vd['dw1']\n",
        "    b[1] = b[1] - alpha * vd['db1']\n",
        "    W[2] = W[2] - alpha * vd['dw2']\n",
        "    b[2] = b[2] - alpha * vd['db2']\n",
        "    \n",
        "    if epoch % 10 == 0:\n",
        "      aux = 0.0\n",
        "      for i in range(1, l + 1):\n",
        "        aux = aux + np.sum(np.square(W[i]))\n",
        "      reg_cost = aux * lambd / (2 * m)\n",
        "      \n",
        "      cost = compute_cost(A[2], Y)\n",
        "      costs.append(cost)\n",
        "      \n",
        "      Y_predictions = np.argmax(A[2], axis=0)\n",
        "      n_correct = np.sum(np.argmax(Y, axis=0) == Y_predictions)\n",
        "      accuracy = float(n_correct) / len(Y_predictions)    \n",
        "      \n",
        "      print(\"Epoch %i:\\tloss: %f\\tacc: %f\" % (epoch, cost, accuracy))\n",
        "  return W, b, costs\n",
        "            \n",
        "            "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v5eCQlo3ChCw"
      },
      "source": [
        "def predict_nn(X, W, b):\n",
        "    A, Z = forwardprop(X, W, b)\n",
        "    predictions = np.argmax(A[2], axis=0)\n",
        "    return predictions"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "80WdBr_8ci87"
      },
      "source": [
        "n_epochs = 150\n",
        "\n",
        "folds = 1\n",
        "# no of neurons on hidden layer\n",
        "n1 = 400\n",
        "\n",
        "\n",
        "W = []\n",
        "b = []\n",
        "np.random.seed(5)\n",
        "\n",
        "W = {\n",
        "    1: np.random.randn(n1, train_images.shape[1]) * np.sqrt(2/784),\n",
        "    2: np.random.randn(10, n1) * np.sqrt(1/n1)\n",
        "}\n",
        "b = {\n",
        "    1: np.zeros((n1, 1)),\n",
        "    2: np.zeros((10, 1))\n",
        "}\n",
        "\n",
        "nn_costs = np.zeros((10, n_epochs))\n",
        "\n",
        "nn_accuracy = []\n",
        "best_accuracy = 0.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3fx-gH_kcMJy",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "outputId": "3f79cca4-3961-4635-eccf-eb18574ba05e"
      },
      "source": [
        "import time\n",
        "\n",
        "for index_split in range(folds):\n",
        "  print(\"fold: %d \" % index_split)\n",
        "  u = index_split * 10000\n",
        "  v = (index_split + 1) * 10000\n",
        "\n",
        "  X_train = np.append(train_images[0:u], train_images[v:60000], axis=0)  # shape: m, n\n",
        "  Y_train = np.append(train_labels_onehot[0:u], train_labels_onehot[v:60000], axis=0)  # shape: m, k\n",
        "  Y_labels = np.append(train_labels[0:u], train_labels[v:60000], axis=0)  # shape: m, k\n",
        "  X_validation = train_images[u:v]\n",
        "  Y_validation = train_labels[u:v]\n",
        "  \n",
        "  starter_time = time.time()\n",
        "  W, b, costs = nn_one_layer(X_train.T, Y_train.T, W, b, n_epochs, alpha=0.25)\n",
        "  time_nn = time.time() - starter_time\n",
        "\n",
        "  Y_predicted = predict_nn(X_validation.T, W, b)\n",
        "\n",
        "  n_correct = sum(Y_validation == Y_predicted)\n",
        "  accuracy = float(n_correct) / len(Y_predicted)\n",
        "  print(\"Accuracy: %f\" % accuracy)\n",
        "\n",
        "  # if accuracy_softmaxRegression[index_split] > best_accuracy:\n",
        "  #     best_accuracy = accuracy_softmaxRegression[index_split]\n",
        "  #     best_W_softmaxRegression = w\n",
        "  #\n",
        "  # mean_W_softmaxRegression = mean_W_softmaxRegression + W\n",
        "\n",
        "print(time_nn)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fold: 0 \n",
            "Epoch 0:\tloss: 2.355620\tacc: 0.096740\n",
            "Epoch 10:\tloss: 1.270356\tacc: 0.626640\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-32-e763d5cc468b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m   \u001b[0mstarter_time\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m   \u001b[0mW\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcosts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnn_one_layer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mW\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_epochs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.25\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m   \u001b[0mtime_nn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mstarter_time\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-29-269af12a95c7>\u001b[0m in \u001b[0;36mnn_one_layer\u001b[0;34m(X, Y, W, b, n_epochs, alpha, lambd, beta)\u001b[0m\n\u001b[1;32m     46\u001b[0m     \u001b[0mA\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mZ\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mforwardprop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mW\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 48\u001b[0;31m     \u001b[0mgrads\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbackprop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mW\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mA\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mZ\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mepoch\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mn_epochs\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m0.8\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-29-269af12a95c7>\u001b[0m in \u001b[0;36mbackprop\u001b[0;34m(X, Y, W, b, A, Z, lambd)\u001b[0m\n\u001b[1;32m     26\u001b[0m   \u001b[0;31m#   dZ[0] = np.multiply(np.dot(W[1].T, dZ[1]),1 - np.square(A[0])) # n1, m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m   \u001b[0mdZ\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmultiply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mW\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdZ\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdelta_ReLU\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mZ\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# n1, m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m   \u001b[0mdW\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1.0\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdZ\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlambd\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mm\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mW\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;31m# n1, n\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m   \u001b[0mdb\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1.0\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdZ\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeepdims\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nl58F5VCh8te",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "outputId": "bc949e12-0f8e-4d35-98d7-40b87487eb68"
      },
      "source": [
        "Y_predicted = predict_nn(X_validation.T, W,b)\n",
        "n_correct = sum(Y_validation == Y_predicted)\n",
        "accuracy = float(n_correct) / len(Y_predicted)\n",
        "print(accuracy)\n",
        "\n",
        "cm = confusion_matrix(Y_validation, Y_predicted)\n",
        "plot_confusion_matrix(cm           =  cm,\n",
        "                      normalize    = False,\n",
        "                      target_names = class_names,\n",
        "                      title        = \"Confusion Matrix\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.7947\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nqOZYUKt5bd+6me1bNuNc6hOcS31CZMRtGterzbx583jy5Ilmu6TExFQjT11ydHIiPPz1FGdsbCzR\n0dGULlNG57G3bdnEti2bcLQviqN9USIjbtOwXi2iou5y9Y1p12vhV3F0ctZ5Pq9kZZu8Td/vnYxk\npzb5EDLSzkLFixend+/e/Pzzz3Ts2BE/Pz/279/PyZMn6dSpE127dmXYsGG8fPmSp0+f4ufnh6+v\nLx06dODChQvplmnLmdMn+bx5Ex4+eADA0kXzKfpJcW7ei+HevXtcDI9g94FjFP2kGBfDIzA3N9da\n7LepVCr69PJj+epAnN74oPP29iZw9SruR0WRmJjI7zNn0N7bR2d5vMmlQgUKFy7CooXzAQgKXIuN\nrS2l3jhvqU1hEdHUci5E3lwp03me1Utw93Ecedv8jn2Xhdh3WYjPhG0A1Oi3klv3n5BHaU7Vf1aU\nF8uvxLlEXi5p+Zz26qDNXL5xh0vXIrh0LYKinxRjz8Fj7N+/n/E/jEKtVvP8+XMWL5yHu0dTrcbO\nSH23Bty+dZMjhw8DMGP6r3g1a461tbXOY69dv4UrN+9y+Xokl69HUvSTYuw7eJyp02Yxd+5c4uLi\nePbsGYsXzqetdwed5/NKVrbJ2169d+bP1897JyPZqU1yEoO/IpqLiwtTp04lNjaW/fv3Y2trS+vW\nrVm8eDE2NjZMmTKFHTt2YGFhQcGCBZk4cSK3b9/m+vXrREZGpinTlgaN3OnRszdN3etjZGRE4SJF\nWLxstd6PhgG2bt7Iw4cP8Ovum6r80MEDDBg8hCaN6oNaTYNGjenZSz9f2VAoFCxftZZePXvwy88/\nkS9/AZatXIOJiW52yW1/3qBK6QIET22HWg1PVS/pMml7hts/fPIcv6m7+X1gI8xNjUlWqxm58KjW\nO+2MTJs2je5+X1KjcjmMjIxx9/Ck74DBeoltaWnJ0uWrGDygLypVHKUcSjN3wWK9xM5Iq8/bEnr+\nDPVqV0WhUNDO2wevpi30Fj87tcmr907vL3swafJk8uv4vZOR7NQmH8LQL2OqUKvV6qxO4n1FREQw\nYMAAgoKCNGXnzp1j4MCBWFtbs3nzZh4+fIi7uzsuLi5AyijT09OTVq1a0b17d6pVq0aTJk2oW7cu\n9+/fT1P2LolJakyMDfsFF0KInKzu/w5ppZ7D336mlXo+lMGPtM+fP4+zszN3794FUr6TXKBAAQIC\n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\nlstkMvmKFSvkP/30k1wul8tTUlLkQ4cOfe69GzdulLu4uMg9PDxe2k5JSYl86NCh8qysLCXtyb/j\n4eGhqHtV2rx5s3zp0qVyuVwuT0tLk/fs2VP++PHj596zZ88e+ddffy2Xy+Xy4uJiuaOjozw5OVl+\n8uRJ+eTJk+UymUxeUFAg79Onjzw1NVV+9epV+fz5818qKzo6Wj5z5ky5TCaTy+Vy+dy5c+Xbt2+v\n0v0ThL8jWtpCjZPJZCxdupT4+HhKS0tp27YtixYtAp7mt96/fz/q6uo4ODgwZ84ccnJyWLhwIYWF\nhaiqqrJkyRK0tbX55JNPCAwMBJ5v+bVv354RI0Ygk8lwdXX9x2UNGzaMSZMmcfbsWSQSCVlZWTg7\nO/Pdd9/xyy+/vLQf27ZtIywsTPGAkHfeeYd58+ZRWlqKVCp95b6vWrWKefPmIZFISEhI4JNPPgHA\n1NQUFRUVkpOTMTc35+bNm4SHhzNixAjS0tJe2s6OHTsYOHCgImPZq1rLISEhbNq0CRMTE6Kjo2nb\nti22tracPXuWvLw8tmzZgomJCba2tsTExBAWFsaPP/6IpqYmpaWluLm5YW9vz/nz59mwYQMaGhpY\nWVmxfPny5+ryZ/nKf/jhB65evYpUKsXY2JjVq1eTkJDAkiVLUFdX58mTJ3z++ee8/fbbzJw586V9\ndHV1JSgoiBkzZgDQuHFjmjVrxvXr15/Lb+7s7Mzw4cMB0NTUREtLi7y8PAIDAxk4cCASiYT69evT\npUsXLl++jIWFxSv/Nq1bt8bDwwN42nrPycmhSZMmr3yvIFQXEbSFGpefn4+trS3u7u4ADBw4kNu3\nb1OvXj02bdrEyZMn0dTUZMGCBcTHx7N161acnJwYNWoUoaGhHD16lI8//vhPt//48WOcnJzo3r07\nubm5/7gsmUxGkyZNCA0NxcHBgTNnzvDBBx/QtWtXunbt+lI5mZmZ1KtXT5H1TFVVFV1dXR48ePDK\ni31kZCRyuZy3334bgJYtW/L777/Tu3dvkpKSSExMJDs7G2NjY5YtW8aaNWu4du3aK/fPx8eHw4cP\nK177s6xsUVFRrF27Fi0tLTp16kSnTp3YvXs3CxYswM/P77mUqzt37mT8+PEMHjyY+Ph47t+/T3Fx\nMYsWLeL48eMYGhqyZs0aIiIinivjVfnKhwwZwt69ewkLC0NVVZVTp04p8qf36dOHKVOmkJOTQ1BQ\n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\nhgAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f2d37ed9160>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CHAnQQXkiC3F"
      },
      "source": [
        "np.savetxt(\"2_nn_W1.csv\", W[0], delimiter=\",\")\n",
        "np.savetxt(\"2_nn_W2.csv\", W[1], delimiter=\",\")\n",
        "\n",
        "np.savetxt(\"2_nn_b1.csv\", b[0], delimiter=\",\")\n",
        "np.savetxt(\"2_nn_b2.csv\", b[1], delimiter=\",\")\n",
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zE0YpHOUwUmg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "22188a05-8af5-4803-a015-38479edd4707"
      },
      "source": [
        "X_debug = np.append([train_images[1],train_images[16], train_images[7], train_images[3], train_images[19], train_images[8], train_images[18], train_images[6], train_images[23]], [train_images[0]], axis=0)\n",
        "X_debug.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10, 784)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aMI8VbI3iLPi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "a3a117f8-9c89-4892-838e-be89f3375473"
      },
      "source": [
        "Y_debug = np.append([train_labels[1],train_labels[16], train_labels[7], train_labels[3], train_labels[19], train_labels[8], train_labels[18], train_labels[6], train_labels[23]],[train_labels[0]], axis=0)\n",
        "Y_debug_onehot = np.append([train_labels_onehot[1], train_labels_onehot[16], train_labels_onehot[7], train_labels_onehot[3], train_labels_onehot[19], train_labels_onehot[8], train_labels_onehot[18], train_labels_onehot[6], train_labels_onehot[23]],[train_labels_onehot[0]], axis=0)\n",
        "Y_debug_onehot.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10, 10)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "amiDjtyTpQcH"
      },
      "source": [
        "# Neural Network - 2 hidden layer\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3nplIRrSUPmn"
      },
      "source": [
        "### train model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Iat6li0IpYfG"
      },
      "source": [
        "# hidden layer: ReLU\n",
        "# hidden layer: ReLU\n",
        "# output layer: softmax\n",
        "\n",
        "\n",
        "\n",
        "def forwardprop_two_layer(X, W, b):\n",
        "  \"\"\"\n",
        "  param W: dict,\n",
        "  param b: dict\n",
        "  \"\"\"\n",
        "  # Forward prop\n",
        "  Z = {}\n",
        "  A = {}\n",
        "  # ReLU\n",
        "  A[0] = X\n",
        "  for i in range(1, len(W)):\n",
        "    Z[i] = np.dot(W[i], A[i - 1]) + b[i]\n",
        "    A[i] = Z[i] * (Z[i] > 0)\n",
        "  \n",
        "  Z[len(W)] = np.dot(W[len(W)], A[len(W) - 1]) + b[len(W)] # n3, m\n",
        "  A[len(W)] = softmax(Z[len(W)])\n",
        "\n",
        "  forward_cache = {\n",
        "      'A': A,\n",
        "      'Z': Z\n",
        "  }\n",
        "  \n",
        "  return forward_cache\n",
        "  \n",
        "def backprop_two_layer(X, Y, W, b, forward_cache, lambd=0.1):\n",
        "  m = X.shape[1]\n",
        "  \n",
        "  # unpack\n",
        "  A = forward_cache['A']\n",
        "  Z = forward_cache['Z']\n",
        "  \n",
        "  A[0] = X\n",
        "  # creating empty arrays\n",
        "  dZ = {}\n",
        "  dW = {}\n",
        "  db = {}\n",
        "  \n",
        "  l = len(W)\n",
        "  \n",
        "  dZ[l] = A[l] - Y # k, m\n",
        "  dW[l] = (1.0/m) * np.dot(dZ[l], A[l-1].T) + (lambd / m) * W[l] # k, n2\n",
        "  db[l] = (1.0/m) * np.sum(dZ[l], axis=1, keepdims=True)\n",
        "  \n",
        "  for i in range(l-1, 0, -1):\n",
        "    dZ[i] = np.multiply(np.dot(W[i+1].T, dZ[i+1]),delta_ReLU(Z[i]))\n",
        "    db[i] = (1.0/m) * np.sum(dZ[i], axis=1, keepdims=True)\n",
        "   \n",
        "  grads = {\n",
        "      'dW': dW,\n",
        "      'db': db\n",
        "  }\n",
        "  return grads\n",
        "\n",
        "def update_weights(W, b, updates, alpha=0.01):\n",
        "  l = len(W)\n",
        "  \n",
        "  for i in range(1, l+1):\n",
        "    W[i] = W[i] - alpha * updates['dw' + str(i)]\n",
        "    b[i] = b[i] - alpha * updates['db' + str(i)]\n",
        "\n",
        "    \n",
        "def nn_two_layer_SGD(X, Y, W, b, n_epochs=50, alpha=0.01, lambd=0.1, beta1=0.9, beta2=0.999):\n",
        "  n = X.shape[0]\n",
        "  m = X.shape[1]\n",
        "  batch = 100\n",
        "  \n",
        "  l = len(W)\n",
        "  costs = []\n",
        "  \n",
        "  vd = inicialize_momentum(W, b)\n",
        "  sd = inicialize_momentum(W, b)\n",
        "  \n",
        "  for epoch in range(n_epochs):\n",
        "    for i in range(batch):\n",
        "      xi = X[:, i*(m//batch):(i+1)*(m//batch)].reshape((n, m//batch)) # n, 100\n",
        "      yi = Y[:, i*(m//batch):(i+1)*(m//batch)].reshape((10, m//batch)) # shape: k, 100\n",
        "      # forward propagation\n",
        "      forward_cache = forwardprop_two_layer(xi, W, b)\n",
        "      # back propagation\n",
        "      grads = backprop_two_layer(xi, yi, W, b, forward_cache, lambd)\n",
        "      \n",
        "      # learning rate\n",
        "      if epoch == int(n_epochs * 0.8):\n",
        "        alpha = alpha * 0.7\n",
        "      elif epoch == int(n_epochs * 0.6):\n",
        "        alpha = alpha * 0.9\n",
        "      elif epoch == int(n_epochs * 0.5):\n",
        "        alpha = alpha * 0.9\n",
        "#       alpha = 1.0 / 1. + decay*epoch + i\n",
        "#       alpha = alpha * 0.99\n",
        "      \n",
        "      dW = grads['dW']\n",
        "      db = grads['db']\n",
        "      \n",
        "      for k in range(1, l+1):\n",
        "        vd['dw' + str(k)] = beta1 * vd['dw' + str(k)] + (1. - beta1) * dW[k]\n",
        "        vd['db' + str(k)] = beta1 * vd['db' + str(k)] + (1. - beta1) * db[k]\n",
        "        \n",
        "        sd['dw' + str(k)] = beta2 * sd['dw' + str(k)] + (1. - beta2) * (dW[k]**2)\n",
        "        sd['db' + str(k)] = beta2 * sd['db' + str(k)] + (1. - beta2) * (db[k]**2)\n",
        "        \n",
        "        vdw_corrected = vd['dw' + str(k)] / (1.05 - beta1**i) \n",
        "        vdb_corrected = vd['db' + str(k)] / (1.05 - beta1**i)   \n",
        "        sdw_corrected = sd['dw' + str(k)] / (1.05 - beta2**i) \n",
        "        sdb_corrected = sd['db' + str(k)] / (1.05 - beta2**i)\n",
        "        \n",
        "#         W[k] = W[k] - alpha * vd['dw' + str(k)]\n",
        "#         b[k] = b[k] - alpha * vd['db' + str(k)]\n",
        "#         W[k] = W[k] - alpha * dW[k] / (np.sqrt(sdw_corrected + 1e-8))\n",
        "#         b[k] = b[k] - alpha * db[k] / (np.sqrt(sdb_corrected + 1e-8))\n",
        "        W[k] = W[k] - alpha * vdw_corrected / (np.sqrt(sdw_corrected)  + 0.1)\n",
        "        b[k] = b[k] - alpha * vdb_corrected / (np.sqrt(sdb_corrected)  + 0.1)\n",
        "      \n",
        "      \n",
        "      #update_weights(W, b, updates, alpha)\n",
        "\n",
        "    if epoch % 1 == 0:\n",
        "      aux = 0.0\n",
        "      for i in range(1, l + 1):\n",
        "        aux = aux + np.sum(np.square(W[i]))\n",
        "      reg_cost = aux * lambd / (2 * m)\n",
        "      #calculate loss\n",
        "      cost = compute_cost(forward_cache['A'][l], yi) + reg_cost\n",
        "      costs.append(cost)\n",
        "      \n",
        "      Y_predictions = np.argmax(forward_cache['A'][l], axis=0)\n",
        "      n_correct = np.sum(np.argmax(yi, axis=0) == Y_predictions)\n",
        "      accuracy = float(n_correct) / len(Y_predictions)    \n",
        "      \n",
        "      print(\"Epoch %i:\\tloss: %f\\tacc: %f\" % (epoch, cost, accuracy))\n",
        "  \n",
        "  return W, b, costs"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MnzGDoyAtzRw"
      },
      "source": [
        "n_epochs = 7\n",
        "folds = 1\n",
        "# no of neurons on hidden layer\n",
        "n1 = 800\n",
        "n2 = 800\n",
        "\n",
        "epsilon = 0.1 # ini\n",
        "lambd = 0.1   # regularization\n",
        "beta = 0.9    # momentum\n",
        "\n",
        "\n",
        "np.random.seed(2)\n",
        "\n",
        "W = {\n",
        "    1: np.random.randn(n1, train_images.shape[1]) * np.sqrt(2/784),\n",
        "    2: np.random.randn(n2, n1) * np.sqrt(2/n1),\n",
        "    3: np.random.randn(10, n2) * np.sqrt(1/n2)\n",
        "}\n",
        "b = {\n",
        "    1: np.zeros((n1, 1)),\n",
        "    2: np.zeros((n2, 1)),\n",
        "    3: np.zeros((10, 1))\n",
        "}\n",
        "\n",
        "# * 2 * epsilon - epsilon\n",
        "# W.insert(0, np.random.randn(n1, train_images.shape[1]) * np.sqrt(2/784)) \n",
        "# W.insert(1, np.random.randn(n2, n1) * np.sqrt(2/n1))\n",
        "# W.insert(2, np.random.randn(10, n2) * np.sqrt(1/n2))\n",
        "# b.insert(0, np.zeros((n1, 1)))\n",
        "# b.insert(1, np.zeros((n2, 1)))\n",
        "# b.insert(2, np.zeros((10, 1)))\n",
        "\n",
        "nn_costs = np.zeros((10, n_epochs))\n",
        "\n",
        "nn_accuracy = []\n",
        "best_accuracy = 0.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B5vWbh09xnm_"
      },
      "source": [
        "def predict_nn_two_layer(X, W, b):\n",
        "    forward_cache = forwardprop_two_layer(X, W, b)\n",
        "    predictions = np.argmax(forward_cache['A'][len(W)], axis=0)\n",
        "    return predictions"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nLCA7W3E1ybd"
      },
      "source": [
        "n_epochs = 7\n",
        "folds = 6\n",
        "# no of neurons on hidden layer\n",
        "n1 = 600\n",
        "n2 = 600\n",
        "n3 = 400\n",
        "n4 = 200\n",
        "\n",
        "epsilon = 0.1 # ini\n",
        "lambd = 0.1   # regularization\n",
        "beta = 0.9    # momentum\n",
        "\n",
        "\n",
        "np.random.seed(2)\n",
        "\n",
        "W = {\n",
        "    1: np.random.randn(n1, train_images.shape[1]) * np.sqrt(2/784),\n",
        "    2: np.random.randn(n2, n1) * np.sqrt(2/n1),\n",
        "    3: np.random.randn(n3, n2) * np.sqrt(2/n2),\n",
        "    4: np.random.randn(n4, n3) * np.sqrt(2/n3),\n",
        "    5: np.random.randn(10, n4) * np.sqrt(1/n4)\n",
        "}\n",
        "b = {\n",
        "    1: np.zeros((n1, 1)),\n",
        "    2: np.zeros((n2, 1)),\n",
        "    3: np.zeros((n3, 1)),\n",
        "    4: np.zeros((n4, 1)),\n",
        "    5: np.zeros((10, 1))\n",
        "}\n",
        "\n",
        "# * 2 * epsilon - epsilon\n",
        "# W.insert(0, np.random.randn(n1, train_images.shape[1]) * np.sqrt(2/784)) \n",
        "# W.insert(1, np.random.randn(n2, n1) * np.sqrt(2/n1))\n",
        "# W.insert(2, np.random.randn(10, n2) * np.sqrt(1/n2))\n",
        "# b.insert(0, np.zeros((n1, 1)))\n",
        "# b.insert(1, np.zeros((n2, 1)))\n",
        "# b.insert(2, np.zeros((10, 1)))\n",
        "\n",
        "nn_costs = np.zeros((10, n_epochs))\n",
        "\n",
        "nn_accuracy = []\n",
        "best_accuracy = 0.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gkPbSsb5OZnY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "062ce72e-840d-4cb8-c80f-f41ce44af96a"
      },
      "source": [
        "W"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{1: array([[-0.02104945, -0.0028419 , -0.1078942 , ..., -0.03115535,\n",
              "          0.01622991, -0.04780279],\n",
              "        [-0.02677608, -0.06359956,  0.08472877, ..., -0.01658795,\n",
              "         -0.02840098,  0.00595554],\n",
              "        [ 0.03730684, -0.08017053,  0.00773777, ..., -0.04257064,\n",
              "          0.05071203,  0.00275687],\n",
              "        ...,\n",
              "        [ 0.03696181, -0.04095078,  0.00887599, ...,  0.00974166,\n",
              "         -0.02854646,  0.06433439],\n",
              "        [ 0.02493233, -0.04054444, -0.00649722, ...,  0.06855697,\n",
              "         -0.04757403,  0.00327346],\n",
              "        [ 0.0037094 , -0.05066613,  0.0792374 , ...,  0.01039198,\n",
              "          0.08401261, -0.00231672]]),\n",
              " 2: array([[-0.01937696, -0.03877242, -0.01567488, ...,  0.00715871,\n",
              "          0.04118315, -0.0386459 ],\n",
              "        [ 0.01872463,  0.00475015, -0.05887133, ...,  0.03870997,\n",
              "         -0.01436582, -0.07516307],\n",
              "        [ 0.04207227,  0.02288215, -0.08337428, ...,  0.04499156,\n",
              "         -0.00907849,  0.0226347 ],\n",
              "        ...,\n",
              "        [-0.03248198, -0.00510601,  0.00592723, ..., -0.04675706,\n",
              "          0.02331055,  0.0498357 ],\n",
              "        [ 0.01486126, -0.0375797 , -0.05331135, ...,  0.05209996,\n",
              "         -0.08327359, -0.035703  ],\n",
              "        [-0.09966284,  0.04280801,  0.02011604, ..., -0.03369357,\n",
              "          0.03084694,  0.03459437]]),\n",
              " 3: array([[ 0.02108716, -0.00045546, -0.08174498, ...,  0.07026724,\n",
              "         -0.01969491,  0.13875781],\n",
              "        [ 0.03060494,  0.0918377 ,  0.01476451, ...,  0.06902686,\n",
              "          0.06895225,  0.01765952],\n",
              "        [-0.00727634, -0.04901268,  0.02435613, ..., -0.08828829,\n",
              "         -0.06010833,  0.04613576],\n",
              "        ...,\n",
              "        [ 0.10201185, -0.02632951,  0.0097061 , ...,  0.11643376,\n",
              "         -0.03517465, -0.04556655],\n",
              "        [ 0.04760309, -0.03202071,  0.04439753, ...,  0.05844   ,\n",
              "         -0.01      ,  0.00366125],\n",
              "        [ 0.10224686, -0.02878204, -0.09404775, ...,  0.10919532,\n",
              "          0.02776941,  0.04862463]]),\n",
              " 4: array([[ 0.03319123,  0.03777074,  0.04210319, ...,  0.00773896,\n",
              "          0.11265053, -0.00441423],\n",
              "        [ 0.02389042,  0.0300544 , -0.00524128, ...,  0.0200109 ,\n",
              "         -0.03508012,  0.05494918],\n",
              "        [ 0.00667066, -0.0871973 ,  0.13841438, ..., -0.03987026,\n",
              "         -0.07877977,  0.03257427],\n",
              "        ...,\n",
              "        [-0.02477818,  0.03544405,  0.11004536, ..., -0.05508784,\n",
              "         -0.06713123,  0.03581292],\n",
              "        [ 0.09141782,  0.00296419,  0.04906513, ...,  0.02832759,\n",
              "          0.09999867,  0.04952035],\n",
              "        [-0.08430983, -0.02437767, -0.11494067, ...,  0.03892903,\n",
              "         -0.08138893, -0.02275311]]),\n",
              " 5: array([[ 0.0121642 ,  0.01809678, -0.11083203, ...,  0.046218  ,\n",
              "          0.0286414 ,  0.1571769 ],\n",
              "        [-0.05627474, -0.03943182,  0.02975588, ..., -0.14176168,\n",
              "          0.04510546, -0.14339068],\n",
              "        [-0.05359126,  0.07238637, -0.04130181, ...,  0.07481235,\n",
              "          0.08900545,  0.06059925],\n",
              "        ...,\n",
              "        [ 0.00882485,  0.00208757,  0.08675161, ..., -0.13269695,\n",
              "          0.03871026, -0.05131986],\n",
              "        [ 0.04719612, -0.14332272,  0.03294399, ..., -0.07300137,\n",
              "         -0.01380756, -0.08781525],\n",
              "        [ 0.05413369, -0.08236775, -0.10099531, ..., -0.01340377,\n",
              "          0.02328557,  0.05240432]])}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JqydIp14uFVx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 382
        },
        "outputId": "e2433f8a-0405-4fe5-ac84-d92d6ac551be"
      },
      "source": [
        "import time\n",
        "\n",
        "for index_split in range(folds):\n",
        "  print(\"fold: %d \" % index_split)\n",
        "  u = index_split * 10000\n",
        "  v = (index_split + 1) * 10000\n",
        "\n",
        "  X_train = np.append(train_images[0:u], train_images[v:60000], axis=0)  # shape: m, n\n",
        "  Y_train = np.append(train_labels_onehot[0:u], train_labels_onehot[v:60000], axis=0)  # shape: m, k\n",
        "  X_validation = train_images[u:v]\n",
        "  Y_validation = train_labels[u:v]\n",
        "\n",
        "#   X_train = X_debug\n",
        "#   Y_train = Y_debug_onehot\n",
        "  \n",
        "  starter_time = time.time()\n",
        "  W, b, costs = nn_two_layer_SGD(X_train.T, Y_train.T, W, b, n_epochs, alpha=0.05, beta1=0.9, beta2=0.999)\n",
        "  time_nn = time.time() - starter_time\n",
        "\n",
        "#   Y_predicted = predict_nn_two_layer(X_validation.T, W, b)\n",
        "\n",
        "#   n_correct = sum(Y_validation == Y_predicted)\n",
        "#   accuracy = float(n_correct) / len(Y_predicted)\n",
        "#   print(\"Accuracy: %f\" % accuracy)\n",
        "\n",
        "print(time_nn)\n",
        "\n",
        "nn_two_layer_W = W.copy()\n",
        "nn_two_layer_b = b.copy()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fold: 0 \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-38-7bbb20b4f4ad>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m   \u001b[0mstarter_time\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m   \u001b[0mW\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcosts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnn_two_layer_SGD\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mW\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_epochs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.05\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbeta1\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.9\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbeta2\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.999\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     18\u001b[0m   \u001b[0mtime_nn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mstarter_time\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-33-5486ff4021ac>\u001b[0m in \u001b[0;36mnn_two_layer_SGD\u001b[0;34m(X, Y, W, b, n_epochs, alpha, lambd, beta1, beta2)\u001b[0m\n\u001b[1;32m     97\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m       \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ml\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 99\u001b[0;31m         \u001b[0mvd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'dw'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbeta1\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mvd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'dw'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1.\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mbeta1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdW\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    100\u001b[0m         \u001b[0mvd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'db'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbeta1\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mvd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'db'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1.\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mbeta1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdb\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    101\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 1"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N5kQyIBcuIKV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "outputId": "0f0ee509-cebe-43c1-e0b5-5f9f44f7a023"
      },
      "source": [
        "Y_predicted = predict_nn(X_validation.T, nn_two_layer_W, nn_two_layer_b)\n",
        "n_correct = sum(Y_validation == Y_predicted)\n",
        "accuracy = float(n_correct) / len(Y_predicted)\n",
        "print(accuracy)\n",
        "\n",
        "cm = confusion_matrix(Y_validation, Y_predicted)\n",
        "\n",
        "\n",
        "plot_confusion_matrix(cm           =  cm,\n",
        "                      normalize    = False,\n",
        "                      target_names = class_names,\n",
        "                      title        = \"Confusion Matrix\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.8984\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nggJWrlzJzJkz5claKioqpKSkcOPGDYqLizEwMMDGxobGjRvToUOHWpmued7zr9mwsDAyMzPR19fH\n09OTU6dOkZeXx7hx47hx4wYXLlzA2dn5jedp1dTUMDExISoqCnV1dXbu3EmzZs2YM2cOWlpabN26\nldzcXJKTk+nfvz8ODg6KeKr/WkpKCps2bcLY2JioqCiCgoKoqqpi8+bNWFlZoaury9q1a3n8+DGH\nDh1i3Lhx6OrqioD9Bmp/UeM7KiMjgwcPHlBaWoqtrS0tWrQgMjKSp0+f8vPPPzN27Fj69OlD/fr1\n2bhxY430rqRSKebm5kycOJFNmzYxbtw4pk6dSnx8POHh4URERPD999/XaH3v6jfr/v37OX78OOPH\nj+fBgwfMmjWLZcuWMWvWLG7dusXx48cVOh9XXYJTRUWFEydOEBoaytq1a+nUqRNBQUH8+uuvqKur\nc+XKFa5cuYKXl1eNZN2mp6fLe2DVH4zU1NRwdnYmLCyM8vJy7t+/z7JlyxS+Fv3vJCYmsn37dubO\nnYu9vT0NGzZk0KBB/Prrrzg6OnL79m0+/vhjhWbPq6mpyT/QVldXq17bnJaWxuPHj6mqquLDDz+s\ns+He59dhR0RE0KJFC3Jzc+nXrx/z5s1j3rx5PHz4kK+++kqh7Xbt2hWJRMLcuXNp1qwZ69atA6Bv\n376kpqbSqlUrnJ2d0dbWrrOeq4mJCVVVVezevZvS0lLWrVuHubk5R48eZc2aNfj4+ODt7U1OTg4r\nV65UeCLnu0j0tGuJhoYGP//8M5s2bcLLywtnZ2dOnDhBfHy8vHBHSUkJH3zwQY3cnGJjY4mMjMTC\nwoLmzZujr6/P+vXrkUgkGBkZcfr0aWbNmiUvvahod+/eZebMmfTp0wclJSWioqJo164dnTt3xsHB\ngfr167Nlyxa8vLywtbVl4MCBCssqvXDhAjt27GDHjh1kZWWxYcMGALy9vWndujUqKiosWbKEhw8f\ncuLECebNm1djFcc0NTWJjIzEysoKAwMDZDIZMpmMoqIiLl26xJIlS3BxcamVJUwv3+gfPXpEfHw8\nly5dwtPTk9atW6Ojo8Nnn33GgAEDeP/99xU+D1ldxWzFihVs2bIFExMTevXqhY+PDw0aNCA1NZX6\n9evj5uZWp8uCsrKy2LZtG8uXLychIYH4+HiKi4uxs7PD3d2dHTt24ObmpvAaCpaWllhbWxMZGYme\n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\nRK5CYII=\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f874828a438>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iJmJGreRBZd8"
      },
      "source": [
        "for i in range(1, len(nn_two_layer_W)+1):\n",
        "  np.savetxt(\"adam_2nn_W\" + str(i) + \".csv\", nn_two_layer_W[i], delimiter=',')\n",
        "  np.savetxt(\"adam_2nn_b\" + str(i) + \".csv\", nn_two_layer_b[i], delimiter=',')\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VgMifd0N6Jto"
      },
      "source": [
        "# Test model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "urL2-VIg6GXy",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "outputId": "aaf77072-f39c-4102-d776-ae662559cfd2"
      },
      "source": [
        "Y_predicted = predict_nn_(test_images.T, nn_two_layer_W, nn_two_layer_b)\n",
        "n_correct = sum(test_labels == Y_predicted)\n",
        "accuracy = float(n_correct) / len(Y_predicted)\n",
        "print(accuracy)\n",
        "\n",
        "cm = confusion_matrix(test_labels, Y_predicted)\n",
        "\n",
        "\n",
        "plot_confusion_matrix(cm           =  cm,\n",
        "                      normalize    = False,\n",
        "                      target_names = class_names,\n",
        "                      title        = \"Confusion Matrix\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.8736\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRm5uLnJycnzxxRcNlp7zZaampu91kofXLa0aP368zFO2vs3qJuUNHjwYJycnOnXqRFhYGE+ePMHJ\nyUm6RDIhIYHS0lI8PDzei7kP8Gzr0YULF6Kjo4OpqSlHjhzB1taWnj17SvcK6Ny5MyNGjEBXV5cR\nI0bUa24DwYuEoP2G6pLkr1+/nvLyckaPHk1KSgpnzpzB3t4eS0tLtLW1adeunUy71ZSUlHBzc5Ou\nLVZVVSUzM1MauNu3b09FRQUXL17E1dW1XhN2pKWlERUVRceOHaVdq2fOnOGDDz7g008/JSYmhsjI\nSIKDg+t9iZng33kbllY1lpcn5WlqaqKqqkpeXh6nT5/m6dOntGnTBisrK5o0aYKLi8sb7Yf9rqmp\nqaG6upqwsDBMTEwQiURUVVVhbW1NixYtkEgk7N69m5YtW+Lq6trgm7e874Tu8Td0+/ZtfHx8WLNm\nDbW1tRgZGaGgoMDGjRulS4rqc4zw5e02z58/T21tLcOGDaN58+b1tpTqZdHR0axdu5apU6dKE4Ys\nXboUZWVlHj9+THl5OXJycu/F0qp3wduwtKqxlJeXM336dMaPH4+9vT0bNmzg9u3bVFZWkpqaioaG\nBl5eXowfP146F+B9UDdcAs8+H6dOnSI6OpqKigo0NDRwcHDA0dGR4uJiFBUVpbuvCRqWMNXvP6r7\nYNcFywcPHtC8eXMKCws5ffo0ycnJKCgosGrVKrZu3UpZWVm91uf51rODgwNycnKcPHmS4OBgvL29\nGyz9Y9euXRGLxfzwww9oamoSEhICPJtNrqam9t50Lb4r3ue/h7q6Oh9//DFLliyhrKyMLl268Nln\nn9GnTx+OHz9OcHAwKSkplJeXv1ez6OsCdlhYGFpaWlhYWKCtrc22bdv4888/cXV1Zfv27Tx9+pTF\nixcLAbuRCC3t/+D+/fvs27eP2bNnv9Dd/NVXX6Gqqkr//v3x9PRk1apVWFpaMmDAgEapZ3JyMoaG\nho3ywImMjGTt2rVMnz6dLl26NHj5AsG/9bpJefn5+YwZM+a9amXXiYiIYMWKFTg6OqKrq4ujoyPl\n5eUcOXIEX19frKysqK2tfa8mLL5thKD9L6Wnp7NgwQJGjx4tTXlZVVX1wo2dl5dHaWkpP/zwA999\n9x3t2rVr0Dq+LRvLR0dHs3jxYubMmUOPHj0auzoCwd+qm5SXnJzMnj178PHxeS/G+F9+XkRERJCY\n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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f874828a8d0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QCcktAAW6G9l"
      },
      "source": [
        "# Backups"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YXfMbT9V_OSB"
      },
      "source": [
        "# GRADIENT DESCENT\n",
        "\n",
        "def nn_two_layer(X, Y, W, b, n_epochs=50, alpha=0.01, lambd=0.1):\n",
        "  costs = []\n",
        "  m = X.shape[1]\n",
        "  \n",
        "  for epoch in range(n_epochs):\n",
        "    \n",
        "    A, Z = forwardprop_two_layer(X, W, b)\n",
        "    dW, db = backprop_two_layer(X, Y, W, b, A, Z, lambd)\n",
        "    \n",
        "    if epoch > n_epochs * 0.8:\n",
        "      alpha = 0.01\n",
        "    elif epoch > n_epochs * 0.6:\n",
        "      alpha = 0.05\n",
        "    elif epoch > n_epochs * 0.5:\n",
        "      alpha = 0.1\n",
        "    \n",
        "    reg = (lambd * alpha) /  (2 * m)\n",
        "  \n",
        "    W[0] = W[0] - alpha * dW[0]\n",
        "    b[0] = b[0] - alpha * db[0]\n",
        "    W[1] = W[1] - alpha * dW[1]\n",
        "    b[1] = b[1] - alpha * db[1]\n",
        "    W[2] = W[2] - alpha * dW[2]\n",
        "    b[2] = b[2] - alpha * db[2]\n",
        "    \n",
        "#     print(\"dW0:\" + str(np.sum(dW[0]**2)) + \"\\tdW1:\" + str(np.sum(dW[1]**2))+ \"\\tdW2:\" + str(np.sum(dW[2]**2)))\n",
        "#     print(\"W0:\" + str(np.sum(W[0]**2)) + \"\\tW1:\" + str(np.sum(W[1]**2))+ \"\\tW2:\" + str(np.sum(W[2]**2)))\n",
        "#     print(\"******************************\")\n",
        "    \n",
        "    \n",
        "    if epoch % 2 == 0:\n",
        "      reg_cost = (np.sum(np.square(W[0])) + np.sum(np.square(W[1])) + np.sum(np.square(W[2]))) * lambd / (2 * m)\n",
        "      cost = compute_cost(A[2], Y) + reg_cost\n",
        "      costs.append(cost)\n",
        "      \n",
        "      predictions = np.argmax(A[2], axis=0)\n",
        "      Y_label = np.argmax(Y, axis=0)\n",
        "      \n",
        "      n_correct = sum(Y_label == predictions)\n",
        "      accuracy = float(n_correct) / len(predictions)\n",
        "      print(\"Epoch %i:\\tloss: %f\\tacc: %f\" % (epoch, cost, accuracy))\n",
        "  \n",
        "  return W, b, costs"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vx0gx-kgAyaj"
      },
      "source": [
        "# BACKUP\n",
        "\n",
        "\n",
        "# forward prop\n",
        "#   Z[0] = np.dot(W['1'], X) + b['1'] # n1, m\n",
        "#   A[0] = Z[0] * (Z[0] > 0)\n",
        "#   A[0] = np.tanh(Z[0])\n",
        "#   Z[1] = np.dot(W['2'], A[0]) + b['2'] # n2, m\n",
        "#   A[1] = Z[1] * (Z[1] > 0)\n",
        "#   A[1] = np.tanh(Z[1])\n",
        "\n",
        "# back prop\n",
        "#   dZ[1] = np.multiply(np.dot(W[2].T, dZ[2]),delta_ReLU(Z[1]))\n",
        "#   dZ[1] = np.multiply(np.dot(W[2].T, dZ[2]),1 - np.square(A[1])) # n2, m  \n",
        "#   dW[1] = (1.0/m) * np.dot(dZ[1], A[0].T) + (lambd / m) * W[1]# n2, n1\n",
        "#   db[1] = (1.0/m) * np.sum(dZ[1], axis=1, keepdims=True)\n",
        "#   dZ[0] = np.multiply(np.dot(W[1].T, dZ[1]),delta_ReLU(Z[0])) # n1, m\n",
        "#   dZ[0] = np.multiply(np.dot(W[1].T, dZ[1]),1 - np.square(A[0])) # n1, m\n",
        "#   dW[0] = (1.0/m) * np.dot(dZ[0], X.T) + (lambd / m) * W[0]# n1, n\n",
        "#   db[0] = (1.0/m) * np.sum(dZ[0], axis=1, keepdims=True)\n",
        "\n",
        "# momentum\n",
        "#   vdw0 = vd['dw0']\n",
        "#   vdw1 = vd['dw1']\n",
        "#   vdw2 = vd['dw2']\n",
        "#   vdb0 = vd['db0']\n",
        "#   vdb1 = vd['db1']\n",
        "#   vdb2 = vd['db2']\n",
        "  \n",
        "#   vd = {\n",
        "#     \"dw0\": beta * vdw0 + (1 - beta) * dW[0],\n",
        "#     \"dw1\" : beta * vdw1 + (1 - beta) * dW[1],\n",
        "#     \"dw2\" : beta * vdw2 + (1 - beta) * dW[2],\n",
        "#     \"db0\" : beta * vdb0 + (1 - beta) * db[0],\n",
        "#     \"db1\" : beta * vdb1 + (1 - beta) * db[1],\n",
        "#     \"db2\" : beta * vdb2 + (1 - beta) * db[2]\n",
        "#   }"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}